generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model efmigrationshistory {
  migrationId    String @id @db.VarChar(150)
  productVersion String @db.VarChar(32)

  @@map("__efmigrationshistory")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model account {
  id                        Int                         @id @default(autoincrement())
  loginFailedCount          Int
  lastLoginDate             DateTime?                   @db.DateTime(6)
  accountStatus             account_accountStatus       @default(Active)
  phoneNo                   String?                     @unique(map: "iX_account_phoneNo") @db.VarChar(10)
  passwordHash              String?                     @db.VarChar(256)
  isActiveRequestOTP        Boolean
  createdAt                 DateTime?                   @default(now()) @db.Timestamp(0)
  createdBy                 String?                     @db.VarChar(256)
  updatedAt                 DateTime?                   @default(now()) @db.Timestamp(0)
  updatedBy                 String?                     @db.VarChar(256)
  isUserAllkonsOne          Boolean                     @default(false)
  account_email             account_email[]
  account_role              account_role[]
  admin_user                admin_user[]
  agent_user                agent_user[]
  cm_user                   cm_user[]
  customer                  customer[]
  notification_message      notification_message[]
  notification_status_order notification_status_order[]

  @@index([accountStatus], map: "iX_account_accountStatus")
  @@index([createdAt], map: "iX_account_createdAt")
  @@index([updatedAt], map: "iX_account_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model account_credential {
  id                     Int                           @id @default(autoincrement())
  accountId              Int
  clientId               String?                       @db.VarChar(128)
  systemName             account_credential_systemName @default(AllkonsMCustomer)
  lastLoginDate          DateTime?                     @db.DateTime(6)
  refreshToken           String?                       @unique(map: "iX_account_credential_refreshToken") @db.VarChar(255)
  createdAt              DateTime?                     @default(now()) @db.Timestamp(0)
  createdBy              String?                       @db.VarChar(256)
  account_credential_log account_credential_log[]

  @@index([createdAt], map: "iX_account_credential_createdAt")
  @@index([systemName], map: "iX_account_credential_systemName")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model account_credential_log {
  id                  Int                             @id @default(autoincrement())
  accountCredentialId Int
  type                account_credential_log_type     @default(LoginSuccess)
  createdAt           DateTime?                       @default(now()) @db.Timestamp(0)
  createdBy           String?                         @db.VarChar(256)
  description         String?                         @db.VarChar(1024)
  clientIp            String?                         @db.VarChar(32)
  serverIp            String?                         @db.VarChar(32)
  url                 String?                         @db.VarChar(1024)
  httpVerb            String?                         @db.VarChar(32)
  systemVersion       String?                         @db.VarChar(32)
  logLevel            account_credential_log_logLevel @default(Error)
  account_credential  account_credential              @relation(fields: [accountCredentialId], references: [id], onUpdate: Restrict, map: "fK_account_credential_log_account_credential_accountCredentialId")

  @@index([accountCredentialId], map: "iX_account_credential_log_accountCredentialId")
  @@index([createdAt], map: "iX_account_credential_log_createdAt")
  @@index([logLevel], map: "iX_account_credential_log_logLevel")
  @@index([type], map: "iX_account_credential_log_type")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model account_email {
  id        Int       @id @default(autoincrement())
  accountId Int
  email     String?   @unique(map: "iX_account_email_email") @db.VarChar(255)
  createdAt DateTime? @default(now()) @db.Timestamp(0)
  createdBy String?   @db.VarChar(256)
  updatedAt DateTime? @default(now()) @db.Timestamp(0)
  updatedBy String?   @db.VarChar(256)
  verify    Boolean   @default(false)
  account   account   @relation(fields: [accountId], references: [id], onUpdate: Restrict, map: "fK_account_email_account_accountId")

  @@index([accountId], map: "iX_account_email_accountId")
  @@index([createdAt], map: "iX_account_email_createdAt")
  @@index([updatedAt], map: "iX_account_email_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model account_prevent_noti {
  id               Int                           @id @default(autoincrement())
  agentId          Int
  allkonsAccountId Int
  notiType         account_prevent_noti_notiType @default(IsAgentOwnerChangeWait)
  description      String?                       @db.VarChar(256)
  referenceDate    DateTime?                     @db.DateTime(6)
  createdAt        DateTime?                     @default(now()) @db.Timestamp(0)
  createdBy        String?                       @db.VarChar(256)
  updatedAt        DateTime?                     @default(now()) @db.Timestamp(0)
  updatedBy        String?                       @db.VarChar(256)
  agent            agent                         @relation(fields: [agentId], references: [id], onUpdate: Restrict, map: "fK_account_prevent_noti_agents_agentId")

  @@index([agentId], map: "iX_account_prevent_noti_agentId")
  @@index([createdAt], map: "iX_account_prevent_noti_createdAt")
  @@index([notiType], map: "iX_account_prevent_noti_notiType")
  @@index([updatedAt], map: "iX_account_prevent_noti_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model account_role {
  id        Int       @id @default(autoincrement())
  accountId Int
  roleId    Int
  createdAt DateTime? @default(now()) @db.Timestamp(0)
  createdBy String?   @db.VarChar(256)
  account   account   @relation(fields: [accountId], references: [id], onUpdate: Restrict, map: "fK_account_role_account_accountId")
  role      role      @relation(fields: [roleId], references: [id], onUpdate: Restrict, map: "fK_account_role_roles_roleId")

  @@index([accountId], map: "iX_account_role_accountId")
  @@index([createdAt], map: "iX_account_role_createdAt")
  @@index([roleId], map: "iX_account_role_roleId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model admin_audit_log {
  id         Int                        @id @default(autoincrement())
  adminId    String?                    @db.VarChar(60)
  actionType admin_audit_log_actionType @default(LoginSuccess)
  clientIp   String?                    @db.VarChar(255)
  serverIp   String?                    @db.VarChar(255)
  token      String?                    @db.LongText
  createdAt  DateTime?                  @default(now()) @db.Timestamp(0)
  createdBy  String?                    @db.VarChar(256)
  updatedAt  DateTime?                  @default(now()) @db.Timestamp(0)
  updatedBy  String?                    @db.VarChar(256)

  @@index([actionType], map: "iX_admin_audit_log_actionType")
  @@index([createdAt], map: "iX_admin_audit_log_createdAt")
  @@index([updatedAt], map: "iX_admin_audit_log_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model admin_user {
  id               Int               @id @default(autoincrement())
  employeeId       String?           @db.VarChar(60)
  firstName        String?           @db.VarChar(128)
  lastName         String?           @db.VarChar(128)
  email            String?           @db.VarChar(128)
  salt             String?           @db.VarChar(256)
  password         String?           @db.LongText
  accountId        Int?
  status           admin_user_status @default(Active)
  createdAt        DateTime?         @default(now()) @db.Timestamp(0)
  createdBy        String?           @db.VarChar(256)
  updatedAt        DateTime?         @default(now()) @db.Timestamp(0)
  updatedBy        String?           @db.VarChar(256)
  allkonsAccountId Int?
  account          account?          @relation(fields: [accountId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_admin_user_accounts_accountId")

  @@index([accountId], map: "iX_admin_user_accountId")
  @@index([createdAt], map: "iX_admin_user_createdAt")
  @@index([status], map: "iX_admin_user_status")
  @@index([updatedAt], map: "iX_admin_user_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model agent {
  id                                                      Int                                       @id @default(autoincrement())
  agentCode                                               String?                                   @unique(map: "iX_agent_agentCode") @db.VarChar(255)
  agentType                                               agent_agentType                           @default(Personal)
  name                                                    String                                    @db.VarChar(256)
  address                                                 String?                                   @db.VarChar(1024)
  countryId                                               Int?
  provinceId                                              Int?
  districtId                                              Int?
  subDistrictId                                           Int?
  zipCodeId                                               Int?
  latitude                                                Float
  longitude                                               Float
  phoneNo                                                 String?                                   @db.VarChar(10)
  isSetSelfPickup                                         Boolean
  isSetDeliveryPricing                                    Boolean
  isSetDeliveryPromotion                                  Boolean
  isSelfPickup                                            Boolean
  startPlaceType                                          agent_startPlaceType                      @default(Undefined)
  startPlace                                              Int?
  startPlaceOfDeliveryType                                agent_startPlaceOfDeliveryType            @default(Undefined)
  startPlaceOfDelivery                                    Int?
  isSalesAreable                                          Boolean
  statusBillPayment                                       agent_statusBillPayment                   @default(Active)
  statusPayment                                           agent_statusPayment                       @default(Active)
  status                                                  agent_status                              @default(Active)
  personalIdentityCardNo                                  String?                                   @db.VarChar(60)
  personalFirstName                                       String?                                   @db.VarChar(60)
  personalLastName                                        String?                                   @db.VarChar(60)
  personalPhoneNo                                         String?                                   @db.VarChar(10)
  personalEmail                                           String?                                   @db.VarChar(128)
  corporateName                                           String?                                   @db.VarChar(128)
  corporateRegistrationNumber                             String?                                   @db.VarChar(128)
  corporateContactPhoneNo                                 String?                                   @db.VarChar(10)
  corporateContactPersonName                              String?                                   @db.VarChar(128)
  corporateContactPersonPhoneNo                           String?                                   @db.VarChar(10)
  corporateContactPersonEmail                             String?                                   @db.VarChar(128)
  createdAt                                               DateTime?                                 @default(now()) @db.Timestamp(0)
  createdBy                                               String?                                   @db.VarChar(256)
  updatedAt                                               DateTime?                                 @default(now()) @db.Timestamp(0)
  updatedBy                                               String?                                   @db.VarChar(256)
  gpsLocation                                             Unsupported("point")?
  approve                                                 Int?
  description                                             String?                                   @db.LongText
  agentSaleType                                           agent_agentSaleType                       @default(Public)
  autoReplyMessage                                        String?                                   @db.LongText
  isOwnerEmpower                                          Boolean?
  ownerEmail                                              String?                                   @db.VarChar(128)
  ownerName                                               String?                                   @db.VarChar(128)
  ownerPhoneNo                                            String?                                   @db.VarChar(128)
  ownerPosition                                           String?                                   @db.VarChar(128)
  corporateEmpowerIsFollowOwner                           Boolean?
  corporateOwnerEmail                                     String?                                   @db.VarChar(128)
  corporateOwnerName                                      String?                                   @db.VarChar(128)
  corporateOwnerPhoneNo                                   String?                                   @db.VarChar(128)
  corporateOwnerPosition                                  String?                                   @db.VarChar(128)
  approveByAllkonsAccountId                               Int?
  approveDate                                             DateTime?                                 @db.DateTime(6)
  rejectByAllkonsAccountId                                Int?
  rejectDate                                              DateTime?                                 @db.DateTime(6)
  corporateOwnerDocumentId                                Int?
  corporateOwnerChangeDate                                DateTime?                                 @db.Timestamp(0)
  corporateOwnerDocumentChangeId                          Int?
  corporateOwnerPhoneNoChange                             String?                                   @db.VarChar(128)
  approveCorporateOwnerPhoneNoChangeDate                  DateTime?                                 @db.Timestamp(0)
  isApproveCorporateOwnerPhoneNoChange                    Boolean?
  cisNumber                                               String?                                   @db.VarChar(256)
  cisAddressId                                            String?                                   @db.VarChar(256)
  cisContactEmailId                                       String?                                   @db.VarChar(256)
  cisContactPhoneNoId                                     String?                                   @db.VarChar(256)
  account_prevent_noti                                    account_prevent_noti[]
  country                                                 country?                                  @relation(fields: [countryId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_agent_countries_countryId")
  district                                                district?                                 @relation(fields: [districtId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_agent_districts_districtId")
  document_agent_corporateOwnerDocumentChangeIdTodocument document?                                 @relation("agent_corporateOwnerDocumentChangeIdTodocument", fields: [corporateOwnerDocumentChangeId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_agent_documents_corporateOwnerDocumentChangeId")
  document_agent_corporateOwnerDocumentIdTodocument       document?                                 @relation("agent_corporateOwnerDocumentIdTodocument", fields: [corporateOwnerDocumentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_agent_documents_corporateOwnerDocumentId")
  province                                                province?                                 @relation(fields: [provinceId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_agent_provinces_provinceId")
  sub_district                                            sub_district?                             @relation(fields: [subDistrictId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_agent_subDistricts_subDistrictId")
  zip_code                                                zip_code?                                 @relation(fields: [zipCodeId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_agent_zipCodes_zipCodeId")
  agent_account                                           agent_account[]
  agent_bank_account                                      agent_bank_account[]
  agent_bank_account_config                               agent_bank_account_config[]
  agent_config_setting                                    agent_config_setting[]
  agent_delivery_pricing                                  agent_delivery_pricing[]
  agent_delivery_promotion                                agent_delivery_promotion[]
  agent_group_region                                      agent_group_region[]
  agent_img                                               agent_img[]
  agent_kyc_document                                      agent_kyc_document[]
  agent_payment_channel_config                            agent_payment_channel_config[]
  agent_product                                           agent_product[]
  agent_product_etl                                       agent_product_etl[]
  agent_profile_contact                                   agent_profile_contact[]
  agent_prompt_pay_account                                agent_prompt_pay_account[]
  agent_prompt_pay_account_config                         agent_prompt_pay_account_config[]
  agent_setting                                           agent_setting[]
  agent_user                                              agent_user[]
  agent_user_contact                                      agent_user_contact[]
  agent_user_role                                         agent_user_role[]
  agent_viewer                                            agent_viewer[]
  agent_warehouse_pickup                                  agent_warehouse_pickup[]
  branch                                                  branch[]
  cart                                                    cart[]
  credit_agent                                            credit_agent[]
  credit_customer                                         credit_customer[]
  credit_notification                                     credit_notification[]
  credit_payment                                          credit_payment[]
  credit_request                                          credit_request[]
  customer_credit_agent                                   customer_credit_agent[]
  customer_data                                           customer_data[]
  customer_favorite_agent                                 customer_favorite_agent[]
  customer_group                                          customer_group[]
  delivery_product_pricing                                delivery_product_pricing[]
  delivery_promotion_area                                 delivery_promotion_area[]
  delivery_promotion_area_product                         delivery_promotion_area_product[]
  delivery_promotion_product                              delivery_promotion_product[]
  job_result                                              job_result[]
  log_cart_item                                           log_cart_item[]
  matching_import_file                                    matching_import_file[]
  notification_credit                                     notification_credit[]
  notification_customer_boq                               notification_customer_boq[]
  notification_customer_data                              notification_customer_data[]
  notification_customer_favorite                          notification_customer_favorite[]
  notification_customer_quotation                         notification_customer_quotation[]
  notification_job                                        notification_job[]
  notification_payment_setting                            notification_payment_setting[]
  organize_agent                                          organize_agent[]
  product_pricing_by_customer_group_agent                 product_pricing_by_customer_group_agent[]
  product_search_history                                  product_search_history[]
  promotion                                               promotion[]
  regular_customer                                        regular_customer[]
  role                                                    role[]
  suggestion_product_document                             suggestion_product_document[]
  warehouse                                               warehouse[]
  workflow                                                workflow[]

  @@index([agentSaleType], map: "iX_agent_agentSaleType")
  @@index([agentType], map: "iX_agent_agentType")
  @@index([corporateOwnerDocumentChangeId], map: "iX_agent_corporateOwnerDocumentChangeId")
  @@index([corporateOwnerDocumentId], map: "iX_agent_corporateOwnerDocumentId")
  @@index([countryId], map: "iX_agent_countryId")
  @@index([createdAt], map: "iX_agent_createdAt")
  @@index([districtId], map: "iX_agent_districtId")
  @@index([gpsLocation(length: 25)], map: "iX_agent_gpsLocation")
  @@index([provinceId], map: "iX_agent_provinceId")
  @@index([startPlaceOfDeliveryType], map: "iX_agent_startPlaceOfDeliveryType")
  @@index([startPlaceType], map: "iX_agent_startPlaceType")
  @@index([status], map: "iX_agent_status")
  @@index([statusBillPayment], map: "iX_agent_statusBillPayment")
  @@index([statusPayment], map: "iX_agent_statusPayment")
  @@index([subDistrictId], map: "iX_agent_subDistrictId")
  @@index([updatedAt], map: "iX_agent_updatedAt")
  @@index([zipCodeId], map: "iX_agent_zipCodeId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model agent_account {
  id                          Int       @id @default(autoincrement())
  agentId                     Int?
  accountId                   Int?
  corporateName               String?   @db.VarChar(128)
  corporateRegistrationNumber String?   @db.VarChar(128)
  stepPrefillAgent            Int
  createdAt                   DateTime? @default(now()) @db.Timestamp(0)
  createdBy                   String?   @db.VarChar(256)
  updatedAt                   DateTime? @default(now()) @db.Timestamp(0)
  updatedBy                   String?   @db.VarChar(256)
  agent                       agent?    @relation(fields: [agentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_agent_account_agent_agentId")

  @@index([agentId], map: "iX_agent_account_agentId")
  @@index([createdAt], map: "iX_agent_account_createdAt")
  @@index([updatedAt], map: "iX_agent_account_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model agent_bank_account {
  id                           Int                            @id @default(autoincrement())
  agentId                      Int
  bankAccountTypeId            Int
  bankId                       Int
  accountName                  String?                        @db.VarChar(256)
  accountNo                    String?                        @db.VarChar(64)
  branchName                   String?                        @db.VarChar(128)
  taxNo                        String?                        @db.VarChar(128)
  bankAccountDocumentId        Int?
  qRcodeBankAccountDocumentId  Int?
  isActive                     Boolean
  status                       agent_bank_account_status      @default(Active)
  createdAt                    DateTime?                      @default(now()) @db.Timestamp(0)
  createdBy                    String?                        @db.VarChar(256)
  updatedAt                    DateTime?                      @default(now()) @db.Timestamp(0)
  updatedBy                    String?                        @db.VarChar(256)
  cisNumber                    String?                        @db.LongText
  cisContactId                 String?                        @db.VarChar(256)
  agent_q_rcode                agent_q_rcode?                 @relation(fields: [qRcodeBankAccountDocumentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_agent_bank_account_agentQRcodes_qRcodeBankAccountDocumentId")
  agent                        agent                          @relation(fields: [agentId], references: [id], onUpdate: Restrict, map: "fK_agent_bank_account_agent_agentId")
  bank_account_type            bank_account_type              @relation(fields: [bankAccountTypeId], references: [id], onUpdate: Restrict, map: "fK_agent_bank_account_bankAccountTypes_bankAccountTypeId")
  bank                         bank                           @relation(fields: [bankId], references: [id], onUpdate: Restrict, map: "fK_agent_bank_account_banks_bankId")
  document                     document?                      @relation(fields: [bankAccountDocumentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_agent_bank_account_documents_bankAccountDocumentId")
  agent_bank_account_config    agent_bank_account_config[]
  branch_bank_account          branch_bank_account[]
  branch_bank_account_config   branch_bank_account_config[]
  notification_payment_setting notification_payment_setting[]

  @@index([agentId], map: "iX_agent_bank_account_agentId")
  @@index([bankAccountDocumentId], map: "iX_agent_bank_account_bankAccountDocumentId")
  @@index([bankAccountTypeId], map: "iX_agent_bank_account_bankAccountTypeId")
  @@index([bankId], map: "iX_agent_bank_account_bankId")
  @@index([createdAt], map: "iX_agent_bank_account_createdAt")
  @@index([qRcodeBankAccountDocumentId], map: "iX_agent_bank_account_qRcodeBankAccountDocumentId")
  @@index([status], map: "iX_agent_bank_account_status")
  @@index([updatedAt], map: "iX_agent_bank_account_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model agent_bank_account_config {
  id                 Int                                      @id @default(autoincrement())
  agentId            Int
  paymentChannel     agent_bank_account_config_paymentChannel @default(PaymentGateway)
  agentBankAccountId Int
  isMainAccount      Boolean
  status             agent_bank_account_config_status         @default(Active)
  createdAt          DateTime?                                @default(now()) @db.Timestamp(0)
  createdBy          String?                                  @db.VarChar(256)
  updatedAt          DateTime?                                @default(now()) @db.Timestamp(0)
  updatedBy          String?                                  @db.VarChar(256)
  agent              agent                                    @relation(fields: [agentId], references: [id], onUpdate: Restrict, map: "fK_agent_bank_account_config_agent_agentId")
  agent_bank_account agent_bank_account                       @relation(fields: [agentBankAccountId], references: [id], onUpdate: Restrict, map: "fK_agent_bank_account_config_agent_bank_account_agentBankAccoun~")

  @@index([agentBankAccountId], map: "iX_agent_bank_account_config_agentBankAccountId")
  @@index([agentId], map: "iX_agent_bank_account_config_agentId")
  @@index([createdAt], map: "iX_agent_bank_account_config_createdAt")
  @@index([paymentChannel], map: "iX_agent_bank_account_config_paymentChannel")
  @@index([status], map: "iX_agent_bank_account_config_status")
  @@index([updatedAt], map: "iX_agent_bank_account_config_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model agent_config {
  code                 String                 @id @db.VarChar(256)
  name                 String                 @db.VarChar(256)
  description          String?                @db.VarChar(256)
  seq                  Int
  createdAt            DateTime?              @default(now()) @db.Timestamp(0)
  createdBy            String?                @db.VarChar(256)
  updatedAt            DateTime?              @default(now()) @db.Timestamp(0)
  updatedBy            String?                @db.VarChar(256)
  agent_config_setting agent_config_setting[]

  @@index([createdAt], map: "iX_agent_config_createdAt")
  @@index([updatedAt], map: "iX_agent_config_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model agent_config_setting {
  id              Int                         @id @default(autoincrement())
  agentId         Int?
  agentConfigCode String?                     @db.VarChar(256)
  isRequired      Boolean
  status          agent_config_setting_status @default(Active)
  createdAt       DateTime?                   @default(now()) @db.Timestamp(0)
  createdBy       String?                     @db.VarChar(256)
  updatedAt       DateTime?                   @default(now()) @db.Timestamp(0)
  updatedBy       String?                     @db.VarChar(256)
  agent           agent?                      @relation(fields: [agentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_agent_config_setting_agent_agentId")
  agent_config    agent_config?               @relation(fields: [agentConfigCode], references: [code], onDelete: Restrict, onUpdate: Restrict, map: "fK_agent_config_setting_agent_config_agentConfigCode")

  @@index([agentConfigCode], map: "iX_agent_config_setting_agentConfigCode")
  @@index([agentId], map: "iX_agent_config_setting_agentId")
  @@index([createdAt], map: "iX_agent_config_setting_createdAt")
  @@index([status], map: "iX_agent_config_setting_status")
  @@index([updatedAt], map: "iX_agent_config_setting_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model agent_delivery_pricing {
  id                  Int                                        @id @default(autoincrement())
  agentId             Int
  startDistance       Int
  endDistance         Int?
  deliveryPricingType agent_delivery_pricing_deliveryPricingType @default(PricingKm)
  price               Int
  createdAt           DateTime?                                  @default(now()) @db.Timestamp(0)
  createdBy           String?                                    @db.VarChar(256)
  updatedAt           DateTime?                                  @default(now()) @db.Timestamp(0)
  updatedBy           String?                                    @db.VarChar(256)
  agent               agent                                      @relation(fields: [agentId], references: [id], onUpdate: Restrict, map: "fK_agent_delivery_pricing_agent_agentId")

  @@index([agentId], map: "iX_agent_delivery_pricing_agentId")
  @@index([createdAt], map: "iX_agent_delivery_pricing_createdAt")
  @@index([deliveryPricingType], map: "iX_agent_delivery_pricing_deliveryPricingType")
  @@index([updatedAt], map: "iX_agent_delivery_pricing_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model agent_delivery_product {
  id                       Int                      @id @default(autoincrement())
  agentProductId           Int
  deliveryProductPricingId Int
  createdAt                DateTime?                @default(now()) @db.Timestamp(0)
  createdBy                String?                  @db.VarChar(256)
  updatedAt                DateTime?                @default(now()) @db.Timestamp(0)
  updatedBy                String?                  @db.VarChar(256)
  agent_product            agent_product            @relation(fields: [agentProductId], references: [id], onUpdate: Restrict, map: "fK_agent_delivery_product_agent_product_agentProductId")
  delivery_product_pricing delivery_product_pricing @relation(fields: [deliveryProductPricingId], references: [id], onUpdate: Restrict, map: "fK_agent_delivery_product_deliveryProductPricings_deliveryProdu~")

  @@index([agentProductId], map: "iX_agent_delivery_product_agentProductId")
  @@index([createdAt], map: "iX_agent_delivery_product_createdAt")
  @@index([deliveryProductPricingId], map: "iX_agent_delivery_product_deliveryProductPricingId")
  @@index([updatedAt], map: "iX_agent_delivery_product_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model agent_delivery_promotion {
  id             Int       @id @default(autoincrement())
  agentId        Int
  minimumCost    Int
  freeDeliveryKm Int
  createdAt      DateTime? @default(now()) @db.Timestamp(0)
  createdBy      String?   @db.VarChar(256)
  updatedAt      DateTime? @default(now()) @db.Timestamp(0)
  updatedBy      String?   @db.VarChar(256)
  agent          agent     @relation(fields: [agentId], references: [id], onUpdate: Restrict, map: "fK_agent_delivery_promotion_agent_agentId")

  @@index([agentId], map: "iX_agent_delivery_promotion_agentId")
  @@index([createdAt], map: "iX_agent_delivery_promotion_createdAt")
  @@index([updatedAt], map: "iX_agent_delivery_promotion_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model agent_delivery_promotion_product {
  id                         Int                         @id @default(autoincrement())
  agentProductId             Int
  deliveryPromotionProductId Int?
  createdAt                  DateTime?                   @default(now()) @db.Timestamp(0)
  createdBy                  String?                     @db.VarChar(256)
  updatedAt                  DateTime?                   @default(now()) @db.Timestamp(0)
  updatedBy                  String?                     @db.VarChar(256)
  agent_product              agent_product               @relation(fields: [agentProductId], references: [id], onUpdate: Restrict, map: "fK_agent_delivery_promotion_product_agentProducts_agentProductId")
  delivery_promotion_product delivery_promotion_product? @relation(fields: [deliveryPromotionProductId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_agent_delivery_promotion_product_deliveryPromotionProducts_d~")

  @@index([agentProductId], map: "iX_agent_delivery_promotion_product_agentProductId")
  @@index([createdAt], map: "iX_agent_delivery_promotion_product_createdAt")
  @@index([deliveryPromotionProductId], map: "iX_agent_delivery_promotion_product_deliveryPromotionProductId")
  @@index([updatedAt], map: "iX_agent_delivery_promotion_product_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model agent_group_region {
  id        Int                       @id @default(autoincrement())
  agentId   Int
  name      String                    @db.VarChar(256)
  isDefault Boolean
  status    agent_group_region_status @default(Active)
  createdAt DateTime?                 @default(now()) @db.Timestamp(0)
  createdBy String?                   @db.VarChar(256)
  updatedAt DateTime?                 @default(now()) @db.Timestamp(0)
  updatedBy String?                   @db.VarChar(256)
  agent     agent                     @relation(fields: [agentId], references: [id], onUpdate: Restrict, map: "fK_agent_group_region_agent_agentId")
  region    region[]

  @@index([agentId], map: "iX_agent_group_region_agentId")
  @@index([createdAt], map: "iX_agent_group_region_createdAt")
  @@index([status], map: "iX_agent_group_region_status")
  @@index([updatedAt], map: "iX_agent_group_region_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model agent_img {
  id        Int       @id @default(autoincrement())
  agentId   Int
  imagesId  Int
  createdAt DateTime? @default(now()) @db.Timestamp(0)
  createdBy String?   @db.VarChar(256)
  updatedAt DateTime? @default(now()) @db.Timestamp(0)
  updatedBy String?   @db.VarChar(256)
  agent     agent     @relation(fields: [agentId], references: [id], onUpdate: Restrict, map: "fK_agent_img_agent_agentId")
  document  document  @relation(fields: [imagesId], references: [id], onUpdate: Restrict, map: "fK_agent_img_documents_imagesId")

  @@index([agentId], map: "iX_agent_img_agentId")
  @@index([createdAt], map: "iX_agent_img_createdAt")
  @@index([imagesId], map: "iX_agent_img_imagesId")
  @@index([updatedAt], map: "iX_agent_img_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model agent_kyc_document {
  id              Int                                @id @default(autoincrement())
  agentId         Int
  documentId      Int
  kycDocumentType agent_kyc_document_kycDocumentType @default(Identification)
  createdAt       DateTime?                          @default(now()) @db.Timestamp(0)
  createdBy       String?                            @db.VarChar(256)
  updatedAt       DateTime?                          @default(now()) @db.Timestamp(0)
  updatedBy       String?                            @db.VarChar(256)
  agentType       agent_kyc_document_agentType       @default(Personal)
  agent           agent                              @relation(fields: [agentId], references: [id], onUpdate: Restrict, map: "fK_agent_kyc_document_agent_agentId")
  document        document                           @relation(fields: [documentId], references: [id], onUpdate: Restrict, map: "fK_agent_kyc_document_documents_documentId")

  @@index([agentId], map: "iX_agent_kyc_document_agentId")
  @@index([agentType], map: "iX_agent_kyc_document_agentType")
  @@index([createdAt], map: "iX_agent_kyc_document_createdAt")
  @@index([documentId], map: "iX_agent_kyc_document_documentId")
  @@index([kycDocumentType], map: "iX_agent_kyc_document_kycDocumentType")
  @@index([updatedAt], map: "iX_agent_kyc_document_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model agent_payment_channel_config {
  agentId        Int
  paymentChannel agent_payment_channel_config_paymentChannel @default(PaymentGateway)
  status         agent_payment_channel_config_status         @default(Active)
  createdAt      DateTime?                                   @default(now()) @db.Timestamp(0)
  createdBy      String?                                     @db.VarChar(256)
  updatedAt      DateTime?                                   @default(now()) @db.Timestamp(0)
  updatedBy      String?                                     @db.VarChar(256)
  agent          agent                                       @relation(fields: [agentId], references: [id], onUpdate: Restrict, map: "fK_agent_payment_channel_config_agent_agentId")

  @@id([agentId, paymentChannel])
  @@index([createdAt], map: "iX_agent_payment_channel_config_createdAt")
  @@index([paymentChannel], map: "iX_agent_payment_channel_config_paymentChannel")
  @@index([status], map: "iX_agent_payment_channel_config_status")
  @@index([updatedAt], map: "iX_agent_payment_channel_config_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model agent_product {
  id                                    Int                                     @id @default(autoincrement())
  agentId                               Int
  productVariantId                      Int
  agentBarcode                          String?                                 @db.VarChar(128)
  quantity                              Int?
  price                                 Decimal                                 @db.Decimal(18, 2)
  specialPrice                          Decimal?                                @db.Decimal(18, 2)
  startDate                             DateTime?                               @db.DateTime(6)
  endDate                               DateTime?                               @db.DateTime(6)
  isAcceptCash                          Boolean
  isAcceptCredit                        Boolean
  isAcceptPledge                        Boolean
  isAcceptCod                           Boolean
  isAcceptCreditCard                    Boolean
  agentProductStatus                    agent_product_agentProductStatus        @default(Draft)
  importProductFrom                     agent_product_importProductFrom         @default(System)
  inactiveDate                          DateTime?                               @db.DateTime(6)
  descriptionInactive                   String?                                 @db.VarChar(256)
  inactiveType                          String?                                 @db.VarChar(256)
  status                                agent_product_status                    @default(Active)
  createdAt                             DateTime?                               @default(now()) @db.Timestamp(0)
  createdBy                             String?                                 @db.VarChar(256)
  updatedAt                             DateTime?                               @default(now()) @db.Timestamp(0)
  updatedBy                             String?                                 @db.VarChar(256)
  priceExcludeVAT                       Decimal                                 @default(0.00) @db.Decimal(18, 2)
  specialPriceExcludeVAT                Decimal?                                @db.Decimal(18, 2)
  isSearchDirty                         Boolean                                 @default(true)
  agent_delivery_product                agent_delivery_product[]
  agent_delivery_promotion_product      agent_delivery_promotion_product[]
  agent                                 agent                                   @relation(fields: [agentId], references: [id], onUpdate: Restrict, map: "fK_agent_product_agent_agentId")
  product_variant                       product_variant                         @relation(fields: [productVariantId], references: [id], onUpdate: Restrict, map: "fK_agent_product_productVariants_productVariantId")
  agent_product_not_promotion_delivery  agent_product_not_promotion_delivery[]
  branch_product                        branch_product[]
  delivery_promotion_area_product_agent delivery_promotion_area_product_agent[]

  @@index([agentId], map: "iX_agent_product_agentId")
  @@index([agentProductStatus], map: "iX_agent_product_agentProductStatus")
  @@index([createdAt], map: "iX_agent_product_createdAt")
  @@index([importProductFrom], map: "iX_agent_product_importProductFrom")
  @@index([productVariantId], map: "iX_agent_product_productVariantId")
  @@index([status], map: "iX_agent_product_status")
  @@index([updatedAt], map: "iX_agent_product_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model agent_product_etl {
  id                     Int       @id @default(autoincrement())
  agentId                Int?
  branchId               Int?
  draftTotal             Int
  waitForManagementTotal Int
  sellingTotal           Int
  promotionTotal         Int
  createdAt              DateTime? @default(now()) @db.Timestamp(0)
  createdBy              String?   @db.VarChar(256)
  updatedAt              DateTime? @default(now()) @db.Timestamp(0)
  updatedBy              String?   @db.VarChar(256)
  agent                  agent?    @relation(fields: [agentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_agent_product_etl_agent_agentId")
  branch                 branch?   @relation(fields: [branchId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_agent_product_etl_branches_branchId")

  @@index([agentId], map: "iX_agent_product_etl_agentId")
  @@index([branchId], map: "iX_agent_product_etl_branchId")
  @@index([createdAt], map: "iX_agent_product_etl_createdAt")
  @@index([updatedAt], map: "iX_agent_product_etl_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model agent_product_not_promotion_delivery {
  id             Int           @id @default(autoincrement())
  agentProductId Int
  createdAt      DateTime?     @default(now()) @db.Timestamp(0)
  createdBy      String?       @db.VarChar(256)
  updatedAt      DateTime?     @default(now()) @db.Timestamp(0)
  updatedBy      String?       @db.VarChar(256)
  agent_product  agent_product @relation(fields: [agentProductId], references: [id], onUpdate: Restrict, map: "fK_agent_product_not_promotion_delivery_agent_product_agentProd~")

  @@index([agentProductId], map: "iX_agent_product_not_promotion_delivery_agentProductId")
  @@index([createdAt], map: "iX_agent_product_not_promotion_delivery_createdAt")
  @@index([updatedAt], map: "iX_agent_product_not_promotion_delivery_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model agent_profile_contact {
  id                        Int                         @id @default(autoincrement())
  agentId                   Int
  agentIdName               String                      @db.VarChar(256)
  description               String                      @db.VarChar(256)
  createdAt                 DateTime?                   @default(now()) @db.Timestamp(0)
  createdBy                 String?                     @db.VarChar(256)
  updatedAt                 DateTime?                   @default(now()) @db.Timestamp(0)
  updatedBy                 String?                     @db.VarChar(256)
  qrCode                    String?                     @db.LongText
  agent                     agent                       @relation(fields: [agentId], references: [id], onUpdate: Restrict, map: "fK_agent_profile_contact_agent_agentId")
  agent_profile_contact_img agent_profile_contact_img[]

  @@index([agentId], map: "iX_agent_profile_contact_agentId")
  @@index([createdAt], map: "iX_agent_profile_contact_createdAt")
  @@index([updatedAt], map: "iX_agent_profile_contact_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model agent_profile_contact_img {
  id                    Int                            @id @default(autoincrement())
  agentProfileContactId Int
  imagesId              Int
  type                  agent_profile_contact_img_type @default(Image)
  createdAt             DateTime?                      @default(now()) @db.Timestamp(0)
  createdBy             String?                        @db.VarChar(256)
  updatedAt             DateTime?                      @default(now()) @db.Timestamp(0)
  updatedBy             String?                        @db.VarChar(256)
  agent_profile_contact agent_profile_contact          @relation(fields: [agentProfileContactId], references: [id], onUpdate: Restrict, map: "fK_agent_profile_contact_img_agent_profile_contact_agentProfile~")
  document              document                       @relation(fields: [imagesId], references: [id], onUpdate: Restrict, map: "fK_agent_profile_contact_img_documents_imagesId")

  @@index([agentProfileContactId], map: "iX_agent_profile_contact_img_agentProfileContactId")
  @@index([createdAt], map: "iX_agent_profile_contact_img_createdAt")
  @@index([imagesId], map: "iX_agent_profile_contact_img_imagesId")
  @@index([type], map: "iX_agent_profile_contact_img_type")
  @@index([updatedAt], map: "iX_agent_profile_contact_img_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model agent_prompt_pay_account {
  id                               Int                                           @id @default(autoincrement())
  agentId                          Int
  promptPayAccountType             agent_prompt_pay_account_promptPayAccountType @default(Phone)
  accountNo                        String?                                       @db.VarChar(60)
  accountName                      String?                                       @db.VarChar(128)
  qRcodePromptPayAccountDocumentId Int?
  isActive                         Boolean
  status                           agent_prompt_pay_account_status               @default(Active)
  createdAt                        DateTime?                                     @default(now()) @db.Timestamp(0)
  createdBy                        String?                                       @db.VarChar(256)
  updatedAt                        DateTime?                                     @default(now()) @db.Timestamp(0)
  updatedBy                        String?                                       @db.VarChar(256)
  cisNumber                        String?                                       @db.LongText
  cisContactId                     String?                                       @db.VarChar(256)
  agent_q_rcode                    agent_q_rcode?                                @relation(fields: [qRcodePromptPayAccountDocumentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_agent_prompt_pay_account_agentQRcodes_qRcodePromptPayAccount~")
  agent                            agent                                         @relation(fields: [agentId], references: [id], onUpdate: Restrict, map: "fK_agent_prompt_pay_account_agent_agentId")
  agent_prompt_pay_account_config  agent_prompt_pay_account_config[]
  branch_prompt_pay_account        branch_prompt_pay_account[]
  branch_prompt_pay_account_config branch_prompt_pay_account_config[]
  notification_payment_setting     notification_payment_setting[]

  @@index([agentId], map: "iX_agent_prompt_pay_account_agentId")
  @@index([createdAt], map: "iX_agent_prompt_pay_account_createdAt")
  @@index([promptPayAccountType], map: "iX_agent_prompt_pay_account_promptPayAccountType")
  @@index([qRcodePromptPayAccountDocumentId], map: "iX_agent_prompt_pay_account_qRcodePromptPayAccountDocumentId")
  @@index([status], map: "iX_agent_prompt_pay_account_status")
  @@index([updatedAt], map: "iX_agent_prompt_pay_account_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model agent_prompt_pay_account_config {
  id                       Int                                            @id @default(autoincrement())
  agentId                  Int
  paymentChannel           agent_prompt_pay_account_config_paymentChannel @default(PaymentGateway)
  promptPayAccountId       Int
  status                   agent_prompt_pay_account_config_status         @default(Active)
  createdAt                DateTime?                                      @default(now()) @db.Timestamp(0)
  createdBy                String?                                        @db.VarChar(256)
  updatedAt                DateTime?                                      @default(now()) @db.Timestamp(0)
  updatedBy                String?                                        @db.VarChar(256)
  agent                    agent                                          @relation(fields: [agentId], references: [id], onUpdate: Restrict, map: "fK_agent_prompt_pay_account_config_agent_agentId")
  agent_prompt_pay_account agent_prompt_pay_account                       @relation(fields: [promptPayAccountId], references: [id], onUpdate: Restrict, map: "fK_agent_prompt_pay_account_config_agent_prompt_pay_account_pro~")

  @@index([agentId], map: "iX_agent_prompt_pay_account_config_agentId")
  @@index([createdAt], map: "iX_agent_prompt_pay_account_config_createdAt")
  @@index([paymentChannel], map: "iX_agent_prompt_pay_account_config_paymentChannel")
  @@index([promptPayAccountId], map: "iX_agent_prompt_pay_account_config_promptPayAccountId")
  @@index([status], map: "iX_agent_prompt_pay_account_config_status")
  @@index([updatedAt], map: "iX_agent_prompt_pay_account_config_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model agent_q_rcode {
  id                       Int                        @id @default(autoincrement())
  qRcodeId                 Int
  createdAt                DateTime?                  @default(now()) @db.Timestamp(0)
  createdBy                String?                    @db.VarChar(256)
  updatedAt                DateTime?                  @default(now()) @db.Timestamp(0)
  updatedBy                String?                    @db.VarChar(256)
  agent_bank_account       agent_bank_account[]
  agent_prompt_pay_account agent_prompt_pay_account[]
  document                 document                   @relation(fields: [qRcodeId], references: [id], onUpdate: Restrict, map: "fK_agent_q_rcode_documents_qRcodeId")

  @@index([createdAt], map: "iX_agent_q_rcode_createdAt")
  @@index([qRcodeId], map: "iX_agent_q_rcode_qRcodeId")
  @@index([updatedAt], map: "iX_agent_q_rcode_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model agent_setting {
  id        Int                  @id @default(autoincrement())
  agentId   Int?
  startDate DateTime?            @db.DateTime(6)
  endDate   DateTime?            @db.DateTime(6)
  remark    String?              @db.LongText
  createdAt DateTime?            @default(now()) @db.Timestamp(0)
  createdBy String?              @db.VarChar(256)
  updatedAt DateTime?            @default(now()) @db.Timestamp(0)
  updatedBy String?              @db.VarChar(256)
  status    agent_setting_status @default(Active)
  agent     agent?               @relation(fields: [agentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_agent_setting_agent_agentId")

  @@index([agentId], map: "iX_agent_setting_agentId")
  @@index([createdAt], map: "iX_agent_setting_createdAt")
  @@index([status], map: "iX_agent_setting_status")
  @@index([updatedAt], map: "iX_agent_setting_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model agent_user {
  id                                                                                       Int                             @id @default(autoincrement())
  agentId                                                                                  Int
  employeeId                                                                               String?                         @db.VarChar(60)
  firstName                                                                                String?                         @db.VarChar(128)
  lastName                                                                                 String?                         @db.VarChar(128)
  email                                                                                    String?                         @db.VarChar(128)
  accountId                                                                                Int?
  imagesId                                                                                 Int?
  status                                                                                   Boolean
  createdAt                                                                                DateTime?                       @default(now()) @db.Timestamp(0)
  createdBy                                                                                String?                         @db.VarChar(256)
  updatedAt                                                                                DateTime?                       @default(now()) @db.Timestamp(0)
  updatedBy                                                                                String?                         @db.VarChar(256)
  isFirstAgent                                                                             Boolean                         @default(false)
  allkonsAccountId                                                                         Int?
  isDefault                                                                                Boolean                         @default(false)
  agentUserStatus                                                                          agent_user_agentUserStatus      @default(Active)
  isSelectAllBranch                                                                        Boolean                         @default(false)
  cisNumber                                                                                String?                         @db.VarChar(256)
  cisContactId                                                                             String?                         @db.VarChar(256)
  account                                                                                  account?                        @relation(fields: [accountId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_agent_user_accounts_accountId")
  agent                                                                                    agent                           @relation(fields: [agentId], references: [id], onUpdate: Restrict, map: "fK_agent_user_agent_agentId")
  document                                                                                 document?                       @relation(fields: [imagesId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_agent_user_documents_imagesId")
  agent_user_role                                                                          agent_user_role[]
  branch_agent_user                                                                        branch_agent_user[]
  chat_room                                                                                chat_room[]
  customer_advisor                                                                         customer_advisor[]
  order                                                                                    order[]
  order_agent_user                                                                         order_agent_user[]
  quotation_quotation_approveByToagent_user                                                quotation[]                     @relation("quotation_approveByToagent_user")
  quotation_quotation_cancelAgentUserIdToagent_user                                        quotation[]                     @relation("quotation_cancelAgentUserIdToagent_user")
  quotation_quotation_sendApproveByToagent_user                                            quotation[]                     @relation("quotation_sendApproveByToagent_user")
  quotation_approve_replace_log_quotation_approve_replace_log_newApproveByToagent_user     quotation_approve_replace_log[] @relation("quotation_approve_replace_log_newApproveByToagent_user")
  quotation_approve_replace_log_quotation_approve_replace_log_newSendApproveByToagent_user quotation_approve_replace_log[] @relation("quotation_approve_replace_log_newSendApproveByToagent_user")
  quotation_approve_replace_log_quotation_approve_replace_log_oldApproveByToagent_user     quotation_approve_replace_log[] @relation("quotation_approve_replace_log_oldApproveByToagent_user")
  quotation_approve_replace_log_quotation_approve_replace_log_oldSendApproveByToagent_user quotation_approve_replace_log[] @relation("quotation_approve_replace_log_oldSendApproveByToagent_user")
  quotation_request                                                                        quotation_request[]
  workflow_step_agent_user                                                                 workflow_step_agent_user[]

  @@index([accountId], map: "iX_agent_user_accountId")
  @@index([agentId], map: "iX_agent_user_agentId")
  @@index([agentUserStatus], map: "iX_agent_user_agentUserStatus")
  @@index([createdAt], map: "iX_agent_user_createdAt")
  @@index([imagesId], map: "iX_agent_user_imagesId")
  @@index([updatedAt], map: "iX_agent_user_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model agent_user_contact {
  id                        Int                         @id @default(autoincrement())
  agentId                   Int
  employeeId                String?                     @db.VarChar(128)
  firstName                 String?                     @db.VarChar(128)
  lastName                  String?                     @db.VarChar(128)
  phoneNo                   String?                     @db.VarChar(128)
  role                      String?                     @db.VarChar(256)
  imagesId                  Int?
  defaultRole               Int?
  createdAt                 DateTime?                   @default(now()) @db.Timestamp(0)
  createdBy                 String?                     @db.VarChar(256)
  updatedAt                 DateTime?                   @default(now()) @db.Timestamp(0)
  updatedBy                 String?                     @db.VarChar(256)
  cisNumber                 String?                     @db.VarChar(256)
  cisContactId              String?                     @db.VarChar(256)
  agent                     agent                       @relation(fields: [agentId], references: [id], onUpdate: Restrict, map: "fK_agent_user_contact_agent_agentId")
  document                  document?                   @relation(fields: [imagesId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_agent_user_contact_documents_imagesId")
  agent_user_contact_branch agent_user_contact_branch[]

  @@index([agentId], map: "iX_agent_user_contact_agentId")
  @@index([createdAt], map: "iX_agent_user_contact_createdAt")
  @@index([imagesId], map: "iX_agent_user_contact_imagesId")
  @@index([updatedAt], map: "iX_agent_user_contact_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model agent_user_contact_branch {
  id                 Int                @id @default(autoincrement())
  branchId           Int
  agentUserContactId Int
  createdAt          DateTime?          @default(now()) @db.Timestamp(0)
  createdBy          String?            @db.VarChar(256)
  updatedAt          DateTime?          @default(now()) @db.Timestamp(0)
  updatedBy          String?            @db.VarChar(256)
  agent_user_contact agent_user_contact @relation(fields: [agentUserContactId], references: [id], onUpdate: Restrict, map: "fK_agent_user_contact_branch_agent_user_contact_agentUserContac~")
  branch             branch             @relation(fields: [branchId], references: [id], onUpdate: Restrict, map: "fK_agent_user_contact_branch_branches_branchId")

  @@index([agentUserContactId], map: "iX_agent_user_contact_branch_agentUserContactId")
  @@index([branchId], map: "iX_agent_user_contact_branch_branchId")
  @@index([createdAt], map: "iX_agent_user_contact_branch_createdAt")
  @@index([updatedAt], map: "iX_agent_user_contact_branch_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model agent_user_permisstion {
  id               Int       @id @default(autoincrement())
  accountId        Int?
  registerAgent    Boolean
  loginAgent       Boolean
  isAgentUser      Boolean
  registerCustomer Boolean
  loginCustomer    Boolean
  isCustomer       Boolean
  createdAt        DateTime? @default(now()) @db.Timestamp(0)
  createdBy        String?   @db.VarChar(256)
  updatedAt        DateTime? @default(now()) @db.Timestamp(0)
  updatedBy        String?   @db.VarChar(256)

  @@index([createdAt], map: "iX_agent_user_permisstion_createdAt")
  @@index([updatedAt], map: "iX_agent_user_permisstion_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model agent_user_role {
  id          Int        @id @default(autoincrement())
  agentUserId Int
  roleId      Int
  tbAgentId   Int?
  createdAt   DateTime?  @default(now()) @db.Timestamp(0)
  createdBy   String?    @db.VarChar(256)
  agent       agent?     @relation(fields: [tbAgentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_agent_user_role_agent_tbAgentId")
  agent_user  agent_user @relation(fields: [agentUserId], references: [id], onUpdate: Restrict, map: "fK_agent_user_role_agent_user_agentUserId")
  role        role       @relation(fields: [roleId], references: [id], onUpdate: Restrict, map: "fK_agent_user_role_roles_roleId")

  @@index([agentUserId], map: "iX_agent_user_role_agentUserId")
  @@index([createdAt], map: "iX_agent_user_role_createdAt")
  @@index([roleId], map: "iX_agent_user_role_roleId")
  @@index([tbAgentId], map: "iX_agent_user_role_tbAgentId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model agent_viewer {
  id        Int       @id @default(autoincrement())
  agentId   Int
  viewer    Int?
  createdAt DateTime? @default(now()) @db.Timestamp(0)
  createdBy String?   @db.VarChar(256)
  updatedAt DateTime? @default(now()) @db.Timestamp(0)
  updatedBy String?   @db.VarChar(256)
  branchId  Int       @default(0)
  viewDate  DateTime? @db.Date
  agent     agent     @relation(fields: [agentId], references: [id], onUpdate: Restrict, map: "fK_agent_viewer_agent_agentId")
  branch    branch    @relation(fields: [branchId], references: [id], onUpdate: Restrict, map: "fK_agent_viewer_branches_branchId")

  @@index([agentId], map: "iX_agent_viewer_agentId")
  @@index([branchId], map: "iX_agent_viewer_branchId")
  @@index([createdAt], map: "iX_agent_viewer_createdAt")
  @@index([updatedAt], map: "iX_agent_viewer_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model agent_warehouse_pickup {
  id          Int       @id @default(autoincrement())
  agentId     Int
  warehouseId Int
  createdAt   DateTime? @default(now()) @db.Timestamp(0)
  createdBy   String?   @db.VarChar(256)
  agent       agent     @relation(fields: [agentId], references: [id], onUpdate: Restrict, map: "fK_agent_warehouse_pickup_agent_agentId")
  warehouse   warehouse @relation(fields: [warehouseId], references: [id], onUpdate: Restrict, map: "fK_agent_warehouse_pickup_warehouse_warehouseId")

  @@index([agentId], map: "iX_agent_warehouse_pickup_agentId")
  @@index([createdAt], map: "iX_agent_warehouse_pickup_createdAt")
  @@index([warehouseId], map: "iX_agent_warehouse_pickup_warehouseId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model bank {
  id                                           Int                  @id @default(autoincrement())
  abbreviation                                 String?              @db.VarChar(60)
  createdAt                                    DateTime?            @default(now()) @db.Timestamp(0)
  createdBy                                    String?              @db.VarChar(256)
  updatedAt                                    DateTime?            @default(now()) @db.Timestamp(0)
  updatedBy                                    String?              @db.VarChar(256)
  name                                         String?              @db.VarChar(256)
  description                                  String?              @db.VarChar(1024)
  displayOrder                                 Int
  agent_bank_account                           agent_bank_account[]
  order_payment_order_payment_fromBankIdTobank order_payment[]      @relation("order_payment_fromBankIdTobank")
  order_payment_order_payment_toBankIdTobank   order_payment[]      @relation("order_payment_toBankIdTobank")

  @@index([createdAt], map: "iX_bank_createdAt")
  @@index([updatedAt], map: "iX_bank_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model bank_account_type {
  id                 Int                  @id @default(autoincrement())
  name               String?              @db.LongText
  createdAt          DateTime?            @default(now()) @db.Timestamp(0)
  createdBy          String?              @db.VarChar(256)
  updatedAt          DateTime?            @default(now()) @db.Timestamp(0)
  updatedBy          String?              @db.VarChar(256)
  description        String?              @db.VarChar(1024)
  displayOrder       Int
  agent_bank_account agent_bank_account[]

  @@index([createdAt], map: "iX_bank_account_type_createdAt")
  @@index([updatedAt], map: "iX_bank_account_type_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model barcode {
  id            Int       @id @default(autoincrement())
  prefix        String?   @db.VarChar(128)
  numberBarcode String?   @db.VarChar(128)
  createdAt     DateTime? @default(now()) @db.Timestamp(0)
  createdBy     String?   @db.VarChar(256)
  updatedAt     DateTime? @default(now()) @db.Timestamp(0)
  updatedBy     String?   @db.VarChar(256)

  @@index([createdAt], map: "iX_barcode_createdAt")
  @@index([updatedAt], map: "iX_barcode_updatedAt")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model book1 {
  id  Int?
  sku String? @db.Text

  @@ignore
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model boq {
  id                            Int                             @id @default(autoincrement())
  customerId                    Int
  projectId                     Int
  deliveryReceiveType           boq_deliveryReceiveType         @default(SENDONCE)
  deliveryType                  boq_deliveryType                @default(AgentService)
  paymentType                   Int?
  status                        boq_status                      @default(Active)
  amountCreditDate              Int?
  display                       Boolean
  boqStatus                     boq_boqStatus                   @default(New)
  textMemo                      String?                         @db.VarChar(256)
  createdAt                     DateTime?                       @default(now()) @db.Timestamp(0)
  createdBy                     String?                         @db.VarChar(256)
  updatedAt                     DateTime?                       @default(now()) @db.Timestamp(0)
  updatedBy                     String?                         @db.VarChar(256)
  boqNumber                     String?                         @db.VarChar(256)
  boqDate                       DateTime                        @default(dbgenerated("'0001-01-01 00:00:00.000000'")) @db.DateTime(6)
  cancelNote                    String?                         @db.VarChar(256)
  totalPrice                    Decimal                         @default(0.00) @db.Decimal(18, 2)
  senderAllkonsAccountId        String?                         @db.LongText
  senderName                    String?                         @db.LongText
  senderPhoneNo                 String?                         @db.LongText
  senderRoleName                String?                         @db.LongText
  customerRequestDate           DateTime?                       @db.DateTime(6)
  customer                      customer                        @relation(fields: [customerId], references: [id], onUpdate: Restrict, map: "fK_boq_customers_customerId")
  project                       project                         @relation(fields: [projectId], references: [id], onUpdate: Restrict, map: "fK_boq_projects_projectId")
  boq_branch                    boq_branch[]
  boq_document                  boq_document[]
  customer_request_notification customer_request_notification[]
  notification_customer_boq     notification_customer_boq[]
  quotation                     quotation[]
  sub_boq                       sub_boq[]

  @@index([boqStatus], map: "iX_boq_boqStatus")
  @@index([createdAt], map: "iX_boq_createdAt")
  @@index([customerId], map: "iX_boq_customerId")
  @@index([deliveryReceiveType], map: "iX_boq_deliveryReceiveType")
  @@index([deliveryType], map: "iX_boq_deliveryType")
  @@index([projectId], map: "iX_boq_projectId")
  @@index([status], map: "iX_boq_status")
  @@index([updatedAt], map: "iX_boq_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model boq_branch {
  id               Int                        @id @default(autoincrement())
  boqId            Int
  branchId         Int
  cancelNote       String?                    @db.VarChar(256)
  displayAgentView Boolean
  boqBranchStatus  boq_branch_boqBranchStatus @default(New)
  createdAt        DateTime?                  @default(now()) @db.Timestamp(0)
  createdBy        String?                    @db.VarChar(256)
  updatedAt        DateTime?                  @default(now()) @db.Timestamp(0)
  updatedBy        String?                    @db.VarChar(256)
  status           boq_branch_status          @default(Active)
  boq              boq                        @relation(fields: [boqId], references: [id], onUpdate: Restrict, map: "fK_boq_branch_boq_boqId")
  branch           branch                     @relation(fields: [branchId], references: [id], onUpdate: Restrict, map: "fK_boq_branch_branch_branchId")

  @@index([boqBranchStatus], map: "iX_boq_branch_boqBranchStatus")
  @@index([boqId], map: "iX_boq_branch_boqId")
  @@index([branchId], map: "iX_boq_branch_branchId")
  @@index([createdAt], map: "iX_boq_branch_createdAt")
  @@index([status], map: "iX_boq_branch_status")
  @@index([updatedAt], map: "iX_boq_branch_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model boq_document {
  id         Int       @id @default(autoincrement())
  boqId      Int
  documentId Int       @default(0)
  createdAt  DateTime? @default(now()) @db.Timestamp(0)
  createdBy  String?   @db.VarChar(256)
  updatedAt  DateTime? @default(now()) @db.Timestamp(0)
  updatedBy  String?   @db.VarChar(256)
  boq        boq       @relation(fields: [boqId], references: [id], onUpdate: Restrict, map: "fK_boq_document_boq_boqId")
  document   document  @relation(fields: [documentId], references: [id], onUpdate: Restrict, map: "fK_boq_document_documents_documentId")

  @@index([boqId], map: "iX_boq_document_boqId")
  @@index([createdAt], map: "iX_boq_document_createdAt")
  @@index([documentId], map: "iX_boq_document_documentId")
  @@index([updatedAt], map: "iX_boq_document_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model boq_product_detail_item {
  id               Int             @id @default(autoincrement())
  subBoqItemId     Int
  productVariantId Int
  qty              Decimal         @db.Decimal(18, 2)
  originalQty      Decimal         @db.Decimal(18, 2)
  price            Decimal         @db.Decimal(18, 2)
  createdAt        DateTime?       @default(now()) @db.Timestamp(0)
  createdBy        String?         @db.VarChar(256)
  updatedAt        DateTime?       @default(now()) @db.Timestamp(0)
  updatedBy        String?         @db.VarChar(256)
  product_variant  product_variant @relation(fields: [productVariantId], references: [id], onUpdate: Restrict, map: "fK_boq_product_detail_item_productVariants_productVariantId")
  sub_boq_item     sub_boq_item    @relation(fields: [subBoqItemId], references: [id], onUpdate: Restrict, map: "fK_boq_product_detail_item_sub_boq_item_subBoqItemId")

  @@index([createdAt], map: "iX_boq_product_detail_item_createdAt")
  @@index([productVariantId], map: "iX_boq_product_detail_item_productVariantId")
  @@index([subBoqItemId], map: "iX_boq_product_detail_item_subBoqItemId")
  @@index([updatedAt], map: "iX_boq_product_detail_item_updatedAt")
}

model boq_product_variant {
  id            Int      @id @default(autoincrement())
  boqId         Int?
  qty           Int?
  unit          Int?
  productDetail Int?
  createdAt     DateTime @db.DateTime(0)
  updatedAt     DateTime @db.DateTime(0)
}

model boq_temp_item {
  id               Int       @id @default(autoincrement())
  productVariantId Int?
  promotionId      Int?
  amount           Int?
  customerId       Int?
  type             String?   @db.VarChar(255)
  UpdatedAt        DateTime? @db.DateTime(0)
  createdAt        DateTime? @db.DateTime(0)
}

model boq_temp_item_promotion {
  id               Int       @id @default(autoincrement())
  boqTempItem      Int?
  productVariantId Int?
  promotionId      Int?
  qty              Int?
  updatedAt        DateTime? @db.DateTime(0)
  createdAt        DateTime? @db.DateTime(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model branch {
  id                                Int                                 @id @default(autoincrement())
  agentId                           Int
  name                              String?                             @db.VarChar(256)
  phoneNo                           String?                             @db.VarChar(10)
  enableSelfPickup                  Boolean
  enableDeliveryPricing             Boolean
  enableDeliveryPromotion           Boolean
  isFollowSelfPickup                Boolean
  isSelfPickup                      Boolean
  isFollowDeliveryPricing           Boolean
  isFollowDeliveryPromotion         Boolean
  isStartPlaceOfDelivery            Boolean
  startPlaceOfDeliveryType          branch_startPlaceOfDeliveryType     @default(Undefined)
  startPlaceOfDeliveryWarehouseId   Int?
  statusBillPayment                 branch_statusBillPayment            @default(Active)
  statusPayment                     branch_statusPayment                @default(Active)
  isSalesAreable                    Boolean
  status                            branch_status                       @default(Active)
  address                           String?                             @db.VarChar(1024)
  countryId                         Int?
  provinceId                        Int?
  districtId                        Int?
  subDistrictId                     Int?
  zipCodeId                         Int?
  latitude                          Float
  longitude                         Float
  createdAt                         DateTime?                           @default(now()) @db.Timestamp(0)
  createdBy                         String?                             @db.VarChar(256)
  updatedAt                         DateTime?                           @default(now()) @db.Timestamp(0)
  updatedBy                         String?                             @db.VarChar(256)
  gpsLocation                       Unsupported("point")?
  branchSellerId                    String?                             @db.VarChar(256)
  qRcodeId                          Int?
  qrCode                            String?                             @db.LongText
  branchCorporateRegistrationNumber String?                             @db.VarChar(128)
  branchPersonalIdentityCardNo      String?                             @db.VarChar(60)
  cisNumber                         String?                             @db.VarChar(256)
  cisAddressId                      String?                             @db.VarChar(256)
  cisContactId                      String?                             @db.VarChar(256)
  agent_product_etl                 agent_product_etl[]
  agent_user_contact_branch         agent_user_contact_branch[]
  agent_viewer                      agent_viewer[]
  boq_branch                        boq_branch[]
  agent                             agent                               @relation(fields: [agentId], references: [id], onUpdate: Restrict, map: "fK_branch_agent_agentId")
  country                           country?                            @relation(fields: [countryId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_branch_countries_countryId")
  district                          district?                           @relation(fields: [districtId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_branch_districts_districtId")
  document                          document?                           @relation(fields: [qRcodeId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_branch_documents_qRcodeId")
  province                          province?                           @relation(fields: [provinceId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_branch_provinces_provinceId")
  sub_district                      sub_district?                       @relation(fields: [subDistrictId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_branch_subDistricts_subDistrictId")
  warehouse                         warehouse?                          @relation(fields: [startPlaceOfDeliveryWarehouseId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_branch_warehouses_startPlaceOfDeliveryWarehouseId")
  zip_code                          zip_code?                           @relation(fields: [zipCodeId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_branch_zipCodes_zipCodeId")
  branch_agent_user                 branch_agent_user[]
  branch_bank_account               branch_bank_account[]
  branch_bank_account_config        branch_bank_account_config[]
  branch_delivery_pricing           branch_delivery_pricing[]
  branch_delivery_promotion         branch_delivery_promotion[]
  branch_district                   branch_district[]
  branch_payment_channel_config     branch_payment_channel_config[]
  branch_pickup                     branch_pickup[]
  branch_product                    branch_product[]
  branch_prompt_pay_account         branch_prompt_pay_account[]
  branch_prompt_pay_account_config  branch_prompt_pay_account_config[]
  branch_province                   branch_province[]
  branch_sub_district               branch_sub_district[]
  branch_warehouse_pickup           branch_warehouse_pickup[]
  cart                              cart[]
  chat_history                      chat_history[]
  chat_room                         chat_room[]
  credit_customer                   credit_customer[]
  customer_favorite_agent           customer_favorite_agent[]
  customer_favorite_branch          customer_favorite_branch[]
  customer_request_notification     customer_request_notification[]
  customer_tax_invoice_address      customer_tax_invoice_address[]
  delivery_product_pricing          delivery_product_pricing[]
  delivery_promotion_area           delivery_promotion_area[]
  delivery_promotion_area_product   delivery_promotion_area_product[]
  delivery_promotion_product        delivery_promotion_product[]
  log_cart_item                     log_cart_item[]
  notification_customer_boq         notification_customer_boq[]
  order                             order[]
  product_pricing_by_customer_group product_pricing_by_customer_group[]
  product_search_history            product_search_history[]
  product_variant_pricing           product_variant_pricing[]
  product_variant_special_pricing   product_variant_special_pricing[]
  promotion_branch                  promotion_branch[]
  quotation                         quotation[]
  viewer                            viewer[]

  @@index([agentId], map: "iX_branch_agentId")
  @@index([countryId], map: "iX_branch_countryId")
  @@index([createdAt], map: "iX_branch_createdAt")
  @@index([districtId], map: "iX_branch_districtId")
  @@index([gpsLocation(length: 25)], map: "iX_branch_gpsLocation")
  @@index([provinceId], map: "iX_branch_provinceId")
  @@index([qRcodeId], map: "iX_branch_qRcodeId")
  @@index([startPlaceOfDeliveryType], map: "iX_branch_startPlaceOfDeliveryType")
  @@index([startPlaceOfDeliveryWarehouseId], map: "iX_branch_startPlaceOfDeliveryWarehouseId")
  @@index([status], map: "iX_branch_status")
  @@index([statusBillPayment], map: "iX_branch_statusBillPayment")
  @@index([statusPayment], map: "iX_branch_statusPayment")
  @@index([subDistrictId], map: "iX_branch_subDistrictId")
  @@index([updatedAt], map: "iX_branch_updatedAt")
  @@index([zipCodeId], map: "iX_branch_zipCodeId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model branch_agent_user {
  id          Int        @id @default(autoincrement())
  branchId    Int
  agentUserId Int
  createdAt   DateTime?  @default(now()) @db.Timestamp(0)
  createdBy   String?    @db.VarChar(256)
  updatedAt   DateTime?  @default(now()) @db.Timestamp(0)
  updatedBy   String?    @db.VarChar(256)
  agent_user  agent_user @relation(fields: [agentUserId], references: [id], onUpdate: Restrict, map: "fK_branch_agent_user_agent_user_agentUserId")
  branch      branch     @relation(fields: [branchId], references: [id], onUpdate: Restrict, map: "fK_branch_agent_user_branch_branchId")

  @@index([agentUserId], map: "iX_branch_agent_user_agentUserId")
  @@index([branchId], map: "iX_branch_agent_user_branchId")
  @@index([createdAt], map: "iX_branch_agent_user_createdAt")
  @@index([updatedAt], map: "iX_branch_agent_user_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model branch_bank_account {
  id                 Int                @id @default(autoincrement())
  branchId           Int
  bankAccountId      Int
  isActive           Boolean
  createdAt          DateTime?          @default(now()) @db.Timestamp(0)
  createdBy          String?            @db.VarChar(256)
  updatedAt          DateTime?          @default(now()) @db.Timestamp(0)
  updatedBy          String?            @db.VarChar(256)
  agent_bank_account agent_bank_account @relation(fields: [bankAccountId], references: [id], onUpdate: Restrict, map: "fK_branch_bank_account_agent_bank_account_bankAccountId")
  branch             branch             @relation(fields: [branchId], references: [id], onUpdate: Restrict, map: "fK_branch_bank_account_branch_branchId")

  @@index([bankAccountId], map: "iX_branch_bank_account_bankAccountId")
  @@index([branchId], map: "iX_branch_bank_account_branchId")
  @@index([createdAt], map: "iX_branch_bank_account_createdAt")
  @@index([updatedAt], map: "iX_branch_bank_account_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model branch_bank_account_config {
  id                 Int                                       @id @default(autoincrement())
  branchId           Int
  paymentChannel     branch_bank_account_config_paymentChannel @default(PaymentGateway)
  agentBankAccountId Int
  status             branch_bank_account_config_status         @default(Active)
  createdAt          DateTime?                                 @default(now()) @db.Timestamp(0)
  createdBy          String?                                   @db.VarChar(256)
  updatedAt          DateTime?                                 @default(now()) @db.Timestamp(0)
  updatedBy          String?                                   @db.VarChar(256)
  agent_bank_account agent_bank_account                        @relation(fields: [agentBankAccountId], references: [id], onUpdate: Restrict, map: "fK_branch_bank_account_config_agent_bank_account_agentBankAccou~")
  branch             branch                                    @relation(fields: [branchId], references: [id], onUpdate: Restrict, map: "fK_branch_bank_account_config_branch_branchId")

  @@index([agentBankAccountId], map: "iX_branch_bank_account_config_agentBankAccountId")
  @@index([branchId], map: "iX_branch_bank_account_config_branchId")
  @@index([createdAt], map: "iX_branch_bank_account_config_createdAt")
  @@index([paymentChannel], map: "iX_branch_bank_account_config_paymentChannel")
  @@index([status], map: "iX_branch_bank_account_config_status")
  @@index([updatedAt], map: "iX_branch_bank_account_config_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model branch_delivery_pricing {
  id                  Int                                         @id @default(autoincrement())
  branchId            Int
  startDistance       Int
  endDistance         Int?
  deliveryPricingType branch_delivery_pricing_deliveryPricingType @default(PricingKm)
  price               Int
  createdAt           DateTime?                                   @default(now()) @db.Timestamp(0)
  createdBy           String?                                     @db.VarChar(256)
  updatedAt           DateTime?                                   @default(now()) @db.Timestamp(0)
  updatedBy           String?                                     @db.VarChar(256)
  branch              branch                                      @relation(fields: [branchId], references: [id], onUpdate: Restrict, map: "fK_branch_delivery_pricing_branch_branchId")

  @@index([branchId], map: "iX_branch_delivery_pricing_branchId")
  @@index([createdAt], map: "iX_branch_delivery_pricing_createdAt")
  @@index([deliveryPricingType], map: "iX_branch_delivery_pricing_deliveryPricingType")
  @@index([updatedAt], map: "iX_branch_delivery_pricing_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model branch_delivery_product {
  id                       Int                      @id @default(autoincrement())
  productId                Int?
  deliveryProductPricingId Int
  createdAt                DateTime?                @default(now()) @db.Timestamp(0)
  createdBy                String?                  @db.VarChar(256)
  updatedAt                DateTime?                @default(now()) @db.Timestamp(0)
  updatedBy                String?                  @db.VarChar(256)
  branch_product           branch_product?          @relation(fields: [productId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_branch_delivery_product_branch_product_productId")
  delivery_product_pricing delivery_product_pricing @relation(fields: [deliveryProductPricingId], references: [id], onUpdate: Restrict, map: "fK_branch_delivery_product_deliveryProductPricings_deliveryProd~")

  @@index([createdAt], map: "iX_branch_delivery_product_createdAt")
  @@index([deliveryProductPricingId], map: "iX_branch_delivery_product_deliveryProductPricingId")
  @@index([productId], map: "iX_branch_delivery_product_productId")
  @@index([updatedAt], map: "iX_branch_delivery_product_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model branch_delivery_promotion {
  id             Int       @id @default(autoincrement())
  branchId       Int
  minimumCost    Int
  freeDeliveryKm Int
  createdAt      DateTime? @default(now()) @db.Timestamp(0)
  createdBy      String?   @db.VarChar(256)
  updatedAt      DateTime? @default(now()) @db.Timestamp(0)
  updatedBy      String?   @db.VarChar(256)
  branch         branch    @relation(fields: [branchId], references: [id], onUpdate: Restrict, map: "fK_branch_delivery_promotion_branch_branchId")

  @@index([branchId], map: "iX_branch_delivery_promotion_branchId")
  @@index([createdAt], map: "iX_branch_delivery_promotion_createdAt")
  @@index([updatedAt], map: "iX_branch_delivery_promotion_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model branch_delivery_promotion_product {
  id                         Int                         @id @default(autoincrement())
  branchProductId            Int?
  deliveryPromotionProductId Int?
  createdAt                  DateTime?                   @default(now()) @db.Timestamp(0)
  createdBy                  String?                     @db.VarChar(256)
  branch_product             branch_product?             @relation(fields: [branchProductId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_branch_delivery_promotion_product_branchProducts_branchProdu~")
  delivery_promotion_product delivery_promotion_product? @relation(fields: [deliveryPromotionProductId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_branch_delivery_promotion_product_deliveryPromotionProducts_~")

  @@index([branchProductId], map: "iX_branch_delivery_promotion_product_branchProductId")
  @@index([createdAt], map: "iX_branch_delivery_promotion_product_createdAt")
  @@index([deliveryPromotionProductId], map: "iX_branch_delivery_promotion_product_deliveryPromotionProductId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model branch_district {
  id         Int       @id @default(autoincrement())
  districtId Int
  branchId   Int
  createdAt  DateTime? @default(now()) @db.Timestamp(0)
  createdBy  String?   @db.VarChar(256)
  branch     branch    @relation(fields: [branchId], references: [id], onUpdate: Restrict, map: "fK_branch_district_branch_branchId")
  district   district  @relation(fields: [districtId], references: [id], onUpdate: Restrict, map: "fK_branch_district_districts_districtId")

  @@index([branchId], map: "iX_branch_district_branchId")
  @@index([createdAt], map: "iX_branch_district_createdAt")
  @@index([districtId], map: "iX_branch_district_districtId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model branch_payment_channel_config {
  branchId          Int
  paymentChannel    branch_payment_channel_config_paymentChannel @default(PaymentGateway)
  useDefaultSetting Boolean
  status            branch_payment_channel_config_status         @default(Active)
  createdAt         DateTime?                                    @default(now()) @db.Timestamp(0)
  createdBy         String?                                      @db.VarChar(256)
  updatedAt         DateTime?                                    @default(now()) @db.Timestamp(0)
  updatedBy         String?                                      @db.VarChar(256)
  branch            branch                                       @relation(fields: [branchId], references: [id], onUpdate: Restrict, map: "fK_branch_payment_channel_config_branch_branchId")

  @@id([branchId, paymentChannel])
  @@index([createdAt], map: "iX_branch_payment_channel_config_createdAt")
  @@index([paymentChannel], map: "iX_branch_payment_channel_config_paymentChannel")
  @@index([status], map: "iX_branch_payment_channel_config_status")
  @@index([updatedAt], map: "iX_branch_payment_channel_config_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model branch_pickup {
  id       Int    @id @default(autoincrement())
  branchId Int
  branch   branch @relation(fields: [branchId], references: [id], onUpdate: Restrict, map: "fK_branch_pickup_branch_branchId")

  @@index([branchId], map: "iX_branch_pickup_branchId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model branch_product {
  id                                     Int                                      @id @default(autoincrement())
  branchId                               Int
  agentProductId                         Int
  productVariantId                       Int?
  quantity                               Int?
  price                                  Decimal?                                 @db.Decimal(18, 2)
  specialPrice                           Decimal?                                 @db.Decimal(18, 2)
  startDate                              DateTime?                                @db.DateTime(6)
  endDate                                DateTime?                                @db.DateTime(6)
  isAcceptCash                           Boolean
  isAcceptCredit                         Boolean
  isAcceptPledge                         Boolean
  isAcceptCod                            Boolean
  isAcceptCreditCard                     Boolean
  branchProductStatus                    branch_product_branchProductStatus       @default(Selling)
  status                                 branch_product_status                    @default(Active)
  createdAt                              DateTime?                                @default(now()) @db.Timestamp(0)
  createdBy                              String?                                  @db.VarChar(256)
  updatedAt                              DateTime?                                @default(now()) @db.Timestamp(0)
  updatedBy                              String?                                  @db.VarChar(256)
  priceExcludeVAT                        Decimal?                                 @db.Decimal(18, 2)
  specialPriceExcludeVAT                 Decimal?                                 @db.Decimal(18, 2)
  isSearchDirty                          Boolean                                  @default(true)
  branch_delivery_product                branch_delivery_product[]
  branch_delivery_promotion_product      branch_delivery_promotion_product[]
  agent_product                          agent_product                            @relation(fields: [agentProductId], references: [id], onUpdate: Restrict, map: "fK_branch_product_agent_product_agentProductId")
  branch                                 branch                                   @relation(fields: [branchId], references: [id], onUpdate: Restrict, map: "fK_branch_product_branch_branchId")
  product_variant                        product_variant?                         @relation(fields: [productVariantId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_branch_product_productVariants_productVariantId")
  branch_product_not_promotion_delivery  branch_product_not_promotion_delivery[]
  cart_item                              cart_item[]
  delivery_order_item                    delivery_order_item[]
  delivery_promotion_area_product_branch delivery_promotion_area_product_branch[]
  log_cart_item                          log_cart_item[]
  order_item                             order_item[]
  order_product_detail_item              order_product_detail_item[]
  quotation_bargain_detail               quotation_bargain_detail[]
  quotation_delivery_item                quotation_delivery_item[]
  quotation_item                         quotation_item[]
  quotation_item_detail                  quotation_item_detail[]
  quotation_product_detail_item          quotation_product_detail_item[]
  sale_order_item                        sale_order_item[]
  sub_order_item                         sub_order_item[]

  @@index([agentProductId], map: "iX_branch_product_agentProductId")
  @@index([branchId], map: "iX_branch_product_branchId")
  @@index([branchProductStatus], map: "iX_branch_product_branchProductStatus")
  @@index([createdAt], map: "iX_branch_product_createdAt")
  @@index([productVariantId], map: "iX_branch_product_productVariantId")
  @@index([status], map: "iX_branch_product_status")
  @@index([updatedAt], map: "iX_branch_product_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model branch_product_not_promotion_delivery {
  id              Int             @id @default(autoincrement())
  branchProductId Int?
  createdAt       DateTime?       @default(now()) @db.Timestamp(0)
  createdBy       String?         @db.VarChar(256)
  updatedAt       DateTime?       @default(now()) @db.Timestamp(0)
  updatedBy       String?         @db.VarChar(256)
  branch_product  branch_product? @relation(fields: [branchProductId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_branch_product_not_promotion_delivery_branch_product_branchP~")

  @@index([branchProductId], map: "iX_branch_product_not_promotion_delivery_branchProductId")
  @@index([createdAt], map: "iX_branch_product_not_promotion_delivery_createdAt")
  @@index([updatedAt], map: "iX_branch_product_not_promotion_delivery_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model branch_prompt_pay_account {
  id                       Int                      @id @default(autoincrement())
  branchId                 Int
  agentPromptPayAccountId  Int
  isActive                 Boolean
  createdAt                DateTime?                @default(now()) @db.Timestamp(0)
  createdBy                String?                  @db.VarChar(256)
  updatedAt                DateTime?                @default(now()) @db.Timestamp(0)
  updatedBy                String?                  @db.VarChar(256)
  agent_prompt_pay_account agent_prompt_pay_account @relation(fields: [agentPromptPayAccountId], references: [id], onUpdate: Restrict, map: "fK_branch_prompt_pay_account_agent_prompt_pay_account_agentProm~")
  branch                   branch                   @relation(fields: [branchId], references: [id], onUpdate: Restrict, map: "fK_branch_prompt_pay_account_branch_branchId")

  @@index([agentPromptPayAccountId], map: "iX_branch_prompt_pay_account_agentPromptPayAccountId")
  @@index([branchId], map: "iX_branch_prompt_pay_account_branchId")
  @@index([createdAt], map: "iX_branch_prompt_pay_account_createdAt")
  @@index([updatedAt], map: "iX_branch_prompt_pay_account_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model branch_prompt_pay_account_config {
  id                       Int                                             @id @default(autoincrement())
  branchId                 Int
  paymentChannel           branch_prompt_pay_account_config_paymentChannel @default(PaymentGateway)
  promptPayAccountId       Int
  status                   branch_prompt_pay_account_config_status         @default(Active)
  createdAt                DateTime?                                       @default(now()) @db.Timestamp(0)
  createdBy                String?                                         @db.VarChar(256)
  updatedAt                DateTime?                                       @default(now()) @db.Timestamp(0)
  updatedBy                String?                                         @db.VarChar(256)
  agent_prompt_pay_account agent_prompt_pay_account                        @relation(fields: [promptPayAccountId], references: [id], onUpdate: Restrict, map: "fK_branch_prompt_pay_account_config_agent_prompt_pay_account_pr~")
  branch                   branch                                          @relation(fields: [branchId], references: [id], onUpdate: Restrict, map: "fK_branch_prompt_pay_account_config_branch_branchId")

  @@index([branchId], map: "iX_branch_prompt_pay_account_config_branchId")
  @@index([createdAt], map: "iX_branch_prompt_pay_account_config_createdAt")
  @@index([paymentChannel], map: "iX_branch_prompt_pay_account_config_paymentChannel")
  @@index([promptPayAccountId], map: "iX_branch_prompt_pay_account_config_promptPayAccountId")
  @@index([status], map: "iX_branch_prompt_pay_account_config_status")
  @@index([updatedAt], map: "iX_branch_prompt_pay_account_config_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model branch_province {
  id         Int       @id @default(autoincrement())
  provinceId Int
  branchId   Int
  createdAt  DateTime? @default(now()) @db.Timestamp(0)
  createdBy  String?   @db.VarChar(256)
  branch     branch    @relation(fields: [branchId], references: [id], onUpdate: Restrict, map: "fK_branch_province_branch_branchId")
  province   province  @relation(fields: [provinceId], references: [id], onUpdate: Restrict, map: "fK_branch_province_provinces_provinceId")

  @@index([branchId], map: "iX_branch_province_branchId")
  @@index([createdAt], map: "iX_branch_province_createdAt")
  @@index([provinceId], map: "iX_branch_province_provinceId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model branch_sub_district {
  id            Int          @id @default(autoincrement())
  subDistrictId Int
  branchId      Int
  createdAt     DateTime?    @default(now()) @db.Timestamp(0)
  createdBy     String?      @db.VarChar(256)
  branch        branch       @relation(fields: [branchId], references: [id], onUpdate: Restrict, map: "fK_branch_sub_district_branch_branchId")
  sub_district  sub_district @relation(fields: [subDistrictId], references: [id], onUpdate: Restrict, map: "fK_branch_sub_district_subDistricts_subDistrictId")

  @@index([branchId], map: "iX_branch_sub_district_branchId")
  @@index([createdAt], map: "iX_branch_sub_district_createdAt")
  @@index([subDistrictId], map: "iX_branch_sub_district_subDistrictId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model branch_warehouse_pickup {
  id          Int       @id @default(autoincrement())
  branchId    Int
  warehouseId Int
  createdAt   DateTime? @default(now()) @db.Timestamp(0)
  createdBy   String?   @db.VarChar(256)
  branch      branch    @relation(fields: [branchId], references: [id], onUpdate: Restrict, map: "fK_branch_warehouse_pickup_branch_branchId")
  warehouse   warehouse @relation(fields: [warehouseId], references: [id], onUpdate: Restrict, map: "fK_branch_warehouse_pickup_warehouse_warehouseId")

  @@index([branchId], map: "iX_branch_warehouse_pickup_branchId")
  @@index([createdAt], map: "iX_branch_warehouse_pickup_createdAt")
  @@index([warehouseId], map: "iX_branch_warehouse_pickup_warehouseId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model brand {
  id                       Int                        @id @default(autoincrement())
  name                     String?                    @db.VarChar(256)
  description              String?                    @db.LongText
  logoId                   Int?
  companyName              String?                    @db.VarChar(1024)
  companyAddress           String?                    @db.VarChar(2048)
  countryId                Int?
  status                   brand_status               @default(Active)
  createdAt                DateTime?                  @default(now()) @db.Timestamp(0)
  createdBy                String?                    @db.VarChar(256)
  updatedAt                DateTime?                  @default(now()) @db.Timestamp(0)
  updatedBy                String?                    @db.VarChar(256)
  name_th                  String?                    @db.VarChar(256)
  isSearchDirty            Boolean                    @default(true)
  skuUUID                  String?                    @db.VarChar(128)
  country                  country?                   @relation(fields: [countryId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_brand_countries_countryId")
  document                 document?                  @relation(fields: [logoId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_brand_documents_logoId")
  brand_synonym            brand_synonym[]
  cal_brand_category       cal_brand_category[]
  product                  product[]
  product_variant_category product_variant_category[]

  @@index([countryId], map: "iX_brand_countryId")
  @@index([createdAt], map: "iX_brand_createdAt")
  @@index([logoId], map: "iX_brand_logoId")
  @@index([status], map: "iX_brand_status")
  @@index([updatedAt], map: "iX_brand_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model brand_synonym {
  id        Int       @id @default(autoincrement())
  brandId   Int
  synonym   String?   @db.LongText
  createdAt DateTime? @default(now()) @db.Timestamp(0)
  createdBy String?   @db.VarChar(256)
  updatedAt DateTime? @default(now()) @db.Timestamp(0)
  updatedBy String?   @db.VarChar(256)
  brand     brand     @relation(fields: [brandId], references: [id], onUpdate: Restrict, map: "fK_brand_synonym_brand_brandId")

  @@index([brandId], map: "iX_brand_synonym_brandId")
  @@index([createdAt], map: "iX_brand_synonym_createdAt")
  @@index([updatedAt], map: "iX_brand_synonym_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cal_brand_category {
  id            Int      @id @default(autoincrement())
  brandId       Int
  categoryId    Int
  isSearchDirty Boolean  @default(true)
  brand         brand    @relation(fields: [brandId], references: [id], onUpdate: Restrict, map: "fK_cal_brand_category_brands_brandId")
  category      category @relation(fields: [categoryId], references: [id], onUpdate: Restrict, map: "fK_cal_brand_category_categories_categoryId")

  @@index([brandId], map: "iX_cal_brand_category_brandId")
  @@index([categoryId], map: "iX_cal_brand_category_categoryId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cart {
  id                 Int         @id @default(autoincrement())
  projectId          Int?
  agentId            Int
  createdAt          DateTime?   @default(now()) @db.Timestamp(0)
  createdBy          String?     @db.VarChar(256)
  updatedAt          DateTime?   @default(now()) @db.Timestamp(0)
  updatedBy          String?     @db.VarChar(256)
  branchId           Int         @default(0)
  customerOrganizeId Int?
  agent              agent       @relation(fields: [agentId], references: [id], onUpdate: Restrict, map: "fK_cart_agent_agentId")
  branch             branch      @relation(fields: [branchId], references: [id], onUpdate: Restrict, map: "fK_cart_branch_branchId")
  project            project?    @relation(fields: [projectId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_cart_projects_projectId")
  cart_item          cart_item[]

  @@index([agentId], map: "iX_cart_agentId")
  @@index([branchId], map: "iX_cart_branchId")
  @@index([createdAt], map: "iX_cart_createdAt")
  @@index([projectId], map: "iX_cart_projectId")
  @@index([updatedAt], map: "iX_cart_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cart_item {
  id                  Int                   @id @default(autoincrement())
  cartId              Int
  productId           Int?
  promotionBranchId   Int?
  amount              Int
  createdAt           DateTime?             @default(now()) @db.Timestamp(0)
  createdBy           String?               @db.VarChar(256)
  updatedAt           DateTime?             @default(now()) @db.Timestamp(0)
  updatedBy           String?               @db.VarChar(256)
  branch_product      branch_product?       @relation(fields: [productId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_cart_item_branch_product_productId")
  cart                cart                  @relation(fields: [cartId], references: [id], onUpdate: Restrict, map: "fK_cart_item_cart_cartId")
  promotion_branch    promotion_branch?     @relation(fields: [promotionBranchId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_cart_item_promotionBranches_promotionBranchId")
  cart_item_promotion cart_item_promotion[]

  @@index([cartId], map: "iX_cart_item_cartId")
  @@index([createdAt], map: "iX_cart_item_createdAt")
  @@index([productId], map: "iX_cart_item_productId")
  @@index([promotionBranchId], map: "iX_cart_item_promotionBranchId")
  @@index([updatedAt], map: "iX_cart_item_updatedAt")
}

model cart_item_premium {
  id               Int       @id @default(autoincrement())
  cartId           Int
  cartItemId       Int
  productVariantId Int?
  promotionId      Int?
  qty              Int
  createdBy        String?   @db.VarChar(255)
  createdAt        DateTime? @default(now()) @db.DateTime(0)
  updatedBy        String?   @db.VarChar(255)
  updatedAt        DateTime? @default(now()) @db.DateTime(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cart_item_promotion {
  id               Int              @id @default(autoincrement())
  cartItemId       Int?
  productVariantId Int?
  promotionId      Int?
  qty              Int
  price            Decimal          @db.Decimal(18, 2)
  createdAt        DateTime?        @default(now()) @db.Timestamp(0)
  createdBy        String?          @db.VarChar(256)
  updatedAt        DateTime?        @default(now()) @db.Timestamp(0)
  updatedBy        String?          @db.VarChar(256)
  cart_item        cart_item?       @relation(fields: [cartItemId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_cart_item_promotion_cart_item_cartItemId")
  product_variant  product_variant? @relation(fields: [productVariantId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_cart_item_promotion_product_variant_productVariantId")
  promotion        promotion?       @relation(fields: [promotionId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_cart_item_promotion_promotions_promotionId")

  @@index([cartItemId], map: "iX_cart_item_promotion_cartItemId")
  @@index([createdAt], map: "iX_cart_item_promotion_createdAt")
  @@index([productVariantId], map: "iX_cart_item_promotion_productVariantId")
  @@index([promotionId], map: "iX_cart_item_promotion_promotionId")
  @@index([updatedAt], map: "iX_cart_item_promotion_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model category {
  id                       Int                        @id @default(autoincrement())
  name                     String?                    @db.VarChar(256)
  description              String?                    @db.LongText
  d365CategoryCode         String?                    @db.VarChar(128)
  status                   category_status            @default(Active)
  imageId                  Int?
  parentCategoryId         Int?
  createdAt                DateTime?                  @default(now()) @db.Timestamp(0)
  createdBy                String?                    @db.VarChar(256)
  updatedAt                DateTime?                  @default(now()) @db.Timestamp(0)
  updatedBy                String?                    @db.VarChar(256)
  isSearchDirty            Boolean                    @default(true)
  skuUUID                  String?                    @db.VarChar(128)
  cal_brand_category       cal_brand_category[]
  category                 category?                  @relation("categoryTocategory", fields: [parentCategoryId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_category_category_parentCategoryId")
  other_category           category[]                 @relation("categoryTocategory")
  document                 document?                  @relation(fields: [imageId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_category_documents_imageId")
  category_tag             category_tag[]
  customer_category        customer_category[]
  occupation_category      occupation_category[]
  product_category         product_category[]
  product_variant_category product_variant_category[]

  @@index([createdAt], map: "iX_category_createdAt")
  @@index([imageId], map: "iX_category_imageId")
  @@index([parentCategoryId], map: "iX_category_parentCategoryId")
  @@index([updatedAt], map: "iX_category_updatedAt")
}

model category_common_display {
  id           Int                              @id @default(autoincrement())
  hierarchy    String?                          @db.VarChar(255)
  commonType   String?                          @db.VarChar(255)
  displayName  String?                          @db.VarChar(255)
  displayOrder Int?
  display      category_common_display_display?
  updatedBy    String?                          @db.VarChar(255)
  updatedAt    DateTime?                        @db.DateTime(0)
  createdBy    String?                          @db.VarChar(255)
  createdAt    DateTime?                        @db.DateTime(0)
}

model category_feature_display {
  id           Int       @id @default(autoincrement())
  hierarchy    String?   @db.VarChar(255)
  feature      String?   @db.VarChar(255)
  featureName  String?   @db.VarChar(255)
  displayOrder Int?
  supplier     String?   @db.VarChar(255)
  updatedBy    String?   @db.VarChar(255)
  updatedAt    DateTime? @db.Timestamp(0)
  createdBy    String?   @db.VarChar(255)
  createdAt    DateTime? @default(now()) @db.Timestamp(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model category_tag {
  id            Int       @id @default(autoincrement())
  categoryId    Int
  tagName       String?   @db.VarChar(64)
  createdAt     DateTime? @default(now()) @db.Timestamp(0)
  createdBy     String?   @db.VarChar(256)
  updatedAt     DateTime? @default(now()) @db.Timestamp(0)
  updatedBy     String?   @db.VarChar(256)
  isSearchDirty Boolean   @default(true)
  category      category  @relation(fields: [categoryId], references: [id], onUpdate: Restrict, map: "fK_category_tag_category_categoryId")

  @@index([categoryId], map: "iX_category_tag_categoryId")
  @@index([createdAt], map: "iX_category_tag_createdAt")
  @@index([updatedAt], map: "iX_category_tag_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model chat_history {
  id                 Int                             @id @default(autoincrement())
  chatRoomId         Int
  customerId         Int?
  branchId           Int?
  documentId         Int?
  message            String?                         @db.LongText
  chatType           chat_history_chatType           @default(Text)
  statusChatCustomer chat_history_statusChatCustomer @default(Active)
  latitude           Float?
  longitude          Float?
  createdAt          DateTime?                       @default(now()) @db.Timestamp(0)
  createdBy          String?                         @db.VarChar(256)
  read               Boolean                         @default(false)
  statusChatAgent    chat_history_statusChatAgent    @default(Active)
  cancel             Boolean                         @default(false)
  branch             branch?                         @relation(fields: [branchId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_chat_history_branch_branchId")
  customer           customer?                       @relation(fields: [customerId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_chat_history_customer_customerId")
  document           document?                       @relation(fields: [documentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_chat_history_documents_documentId")
  chat_room          chat_room                       @relation(fields: [chatRoomId], references: [id], onUpdate: Restrict, map: "fK_chat_history_tbChatRoom_chatRoomId")

  @@index([branchId], map: "iX_chat_history_branchId")
  @@index([chatRoomId], map: "iX_chat_history_chatRoomId")
  @@index([chatType], map: "iX_chat_history_chatType")
  @@index([createdAt], map: "iX_chat_history_createdAt")
  @@index([customerId], map: "iX_chat_history_customerId")
  @@index([documentId], map: "iX_chat_history_documentId")
  @@index([statusChatAgent], map: "iX_chat_history_statusChatAgent")
  @@index([statusChatCustomer], map: "iX_chat_history_statusChatCustomer")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model chat_room {
  id               Int              @id @default(autoincrement())
  customerId       Int?
  branchId         Int?
  status           chat_room_status @default(Active)
  createdAt        DateTime?        @default(now()) @db.Timestamp(0)
  createdBy        String?          @db.VarChar(256)
  agentUserId      Int?
  clientIdBranch   String?          @db.LongText
  clientIdCustomer String?          @db.LongText
  isActive         Boolean          @default(false)
  chat_history     chat_history[]
  agent_user       agent_user?      @relation(fields: [agentUserId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_chat_room_agent_user_agentUserId")
  branch           branch?          @relation(fields: [branchId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_chat_room_branch_branchId")
  customer         customer?        @relation(fields: [customerId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_chat_room_customer_customerId")

  @@index([agentUserId], map: "iX_chat_room_agentUserId")
  @@index([branchId], map: "iX_chat_room_branchId")
  @@index([createdAt], map: "iX_chat_room_createdAt")
  @@index([customerId], map: "iX_chat_room_customerId")
  @@index([status], map: "iX_chat_room_status")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model client {
  id                Int                 @id @default(autoincrement())
  clientId          String              @db.VarChar(100)
  clientName        String              @db.VarChar(100)
  createdAt         DateTime?           @default(now()) @db.Timestamp(0)
  createdBy         String?             @db.VarChar(256)
  updatedAt         DateTime?           @default(now()) @db.Timestamp(0)
  updatedBy         String?             @db.VarChar(256)
  client_permission client_permission[]
  client_secret     client_secret[]

  @@index([createdAt], map: "iX_client_createdAt")
  @@index([updatedAt], map: "iX_client_updatedAt")
}

model client_log {
  id           Int       @id @default(autoincrement())
  clientId     String    @db.VarChar(255)
  clientSecret String    @db.VarChar(255)
  httpMethod   String    @db.LongText
  path         String    @db.LongText
  header       String?   @db.LongText
  request      String?   @db.LongText
  response     String?   @db.LongText
  statusCode   String?   @db.LongText
  createdAt    DateTime? @db.Timestamp(0)
  createdBy    String?   @db.VarChar(256)
  updatedAt    DateTime? @db.Timestamp(0)
  updatedBy    String?   @db.VarChar(256)

  @@index([clientId, clientSecret], map: "IX_ClientId_ClientSecret")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model client_permission {
  id            Int       @id @default(autoincrement())
  clientId      Int
  host          String    @db.VarChar(50)
  endpointRegex String    @db.VarChar(100)
  method        String    @db.VarChar(40)
  createdAt     DateTime? @default(now()) @db.Timestamp(0)
  createdBy     String?   @db.VarChar(256)
  updatedAt     DateTime? @default(now()) @db.Timestamp(0)
  updatedBy     String?   @db.VarChar(256)
  client        client    @relation(fields: [clientId], references: [id], onUpdate: Restrict, map: "fK_client_permission_client_clientId")

  @@unique([clientId, host, endpointRegex, method], map: "iX_client_permission_clientId_host_endpointRegex_method")
  @@index([createdAt], map: "iX_client_permission_createdAt")
  @@index([updatedAt], map: "iX_client_permission_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model client_secret {
  id           Int                  @id @default(autoincrement())
  clientId     Int
  clientSecret String               @db.VarChar(100)
  expireDate   DateTime?            @db.DateTime(6)
  createdAt    DateTime?            @default(now()) @db.Timestamp(0)
  createdBy    String?              @db.VarChar(256)
  status       client_secret_status @default(Active)
  updatedAt    DateTime?            @default(now()) @db.Timestamp(0)
  updatedBy    String?              @db.VarChar(256)
  client       client               @relation(fields: [clientId], references: [id], onUpdate: Restrict, map: "fK_client_secret_client_clientId")

  @@index([clientId], map: "iX_client_secret_clientId")
  @@index([createdAt], map: "iX_client_secret_createdAt")
  @@index([status], map: "iX_client_secret_status")
  @@index([updatedAt], map: "iX_client_secret_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cm_user {
  id               Int       @id @default(autoincrement())
  accountId        Int
  firstName        String?   @db.VarChar(128)
  lastName         String?   @db.VarChar(128)
  phoneNo          String?   @db.VarChar(128)
  lineID           String?   @db.VarChar(128)
  email            String?   @db.VarChar(128)
  createdAt        DateTime? @default(now()) @db.Timestamp(0)
  createdBy        String?   @db.VarChar(256)
  updatedAt        DateTime? @default(now()) @db.Timestamp(0)
  updatedBy        String?   @db.VarChar(256)
  allkonsAccountId Int?
  account          account   @relation(fields: [accountId], references: [id], onUpdate: Restrict, map: "fK_cm_user_accounts_accountId")

  @@index([accountId], map: "iX_cm_user_accountId")
  @@index([createdAt], map: "iX_cm_user_createdAt")
  @@index([updatedAt], map: "iX_cm_user_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model company_type {
  id                           Int                            @id @default(autoincrement())
  createdAt                    DateTime?                      @default(now()) @db.Timestamp(0)
  createdBy                    String?                        @db.VarChar(256)
  updatedAt                    DateTime?                      @default(now()) @db.Timestamp(0)
  updatedBy                    String?                        @db.VarChar(256)
  name                         String?                        @db.VarChar(256)
  description                  String?                        @db.VarChar(1024)
  displayOrder                 Int
  customer_tax_invoice_address customer_tax_invoice_address[]
  sub_boq                      sub_boq[]
  sub_order                    sub_order[]
  tax_invoice                  tax_invoice[]
  tax_invoice_and_delivery     tax_invoice_and_delivery[]

  @@index([createdAt], map: "iX_company_type_createdAt")
  @@index([updatedAt], map: "iX_company_type_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model compare_product {
  id               Int                    @id @default(autoincrement())
  productVariantId Int
  isMatch          Boolean                @default(false)
  isError          Boolean                @default(false)
  note             String?                @db.LongText
  status           compare_product_status @default(Active)
  createdAt        DateTime?              @default(now()) @db.Timestamp(0)
  createdBy        String?                @db.VarChar(256)
  updatedAt        DateTime?              @default(now()) @db.Timestamp(0)
  updatedBy        String?                @db.VarChar(256)
  masterSkuId      String?                @db.LongText
  product_variant  product_variant        @relation(fields: [productVariantId], references: [id], onUpdate: Restrict, map: "fK_compare_product_product_variant_productVariantId")

  @@index([createdAt], map: "iX_compare_product_createdAt")
  @@index([productVariantId], map: "iX_compare_product_productVariantId")
  @@index([status], map: "iX_compare_product_status")
  @@index([updatedAt], map: "iX_compare_product_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model compare_product_tracking {
  id                Int              @id @default(autoincrement())
  productVariantId  Int?
  watchTimeInSecond Float
  note              String?          @db.LongText
  createdAt         DateTime?        @default(now()) @db.Timestamp(0)
  createdBy         String?          @db.VarChar(256)
  updatedAt         DateTime?        @default(now()) @db.Timestamp(0)
  updatedBy         String?          @db.VarChar(256)
  product_variant   product_variant? @relation(fields: [productVariantId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_compare_product_tracking_product_variant_productVariantId")

  @@index([createdAt], map: "iX_compare_product_tracking_createdAt")
  @@index([productVariantId], map: "iX_compare_product_tracking_productVariantId")
  @@index([updatedAt], map: "iX_compare_product_tracking_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model country {
  id                                                                                             Int                                  @id @default(autoincrement())
  name                                                                                           String?                              @db.VarChar(256)
  nameEn                                                                                         String?                              @db.VarChar(256)
  createdAt                                                                                      DateTime?                            @default(now()) @db.Timestamp(0)
  createdBy                                                                                      String?                              @db.VarChar(256)
  agent                                                                                          agent[]
  branch                                                                                         branch[]
  brand                                                                                          brand[]
  credit_customer                                                                                credit_customer[]
  customer_address                                                                               customer_address[]
  customer_data                                                                                  customer_data[]
  customer_delivery_address                                                                      customer_delivery_address[]
  customer_location_delivery_address                                                             customer_location_delivery_address[]
  customer_tax_invoice_address_customer_tax_invoice_address_taxInvoiceCountryIdTocountry         customer_tax_invoice_address[]       @relation("customer_tax_invoice_address_taxInvoiceCountryIdTocountry")
  customer_tax_invoice_address_customer_tax_invoice_address_taxInvoiceDeliveryCountryIdTocountry customer_tax_invoice_address[]       @relation("customer_tax_invoice_address_taxInvoiceDeliveryCountryIdTocountry")
  delivery_order                                                                                 delivery_order[]
  order                                                                                          order[]
  product_variant                                                                                product_variant[]
  project                                                                                        project[]
  province                                                                                       province[]
  quotation_delivery                                                                             quotation_delivery[]
  sub_boq_sub_boq_countryIdTocountry                                                             sub_boq[]                            @relation("sub_boq_countryIdTocountry")
  sub_boq_sub_boq_taxInvoiceCountryIdTocountry                                                   sub_boq[]                            @relation("sub_boq_taxInvoiceCountryIdTocountry")
  sub_boq_sub_boq_taxInvoiceDeliveryCountryIdTocountry                                           sub_boq[]                            @relation("sub_boq_taxInvoiceDeliveryCountryIdTocountry")
  sub_order_sub_order_countryIdTocountry                                                         sub_order[]                          @relation("sub_order_countryIdTocountry")
  sub_order_sub_order_taxInvoiceCountryIdTocountry                                               sub_order[]                          @relation("sub_order_taxInvoiceCountryIdTocountry")
  sub_order_sub_order_taxInvoiceDeliveryCountryIdTocountry                                       sub_order[]                          @relation("sub_order_taxInvoiceDeliveryCountryIdTocountry")
  sub_quotation                                                                                  sub_quotation[]
  tax_invoice_tax_invoice_taxInvoiceCountryIdTocountry                                           tax_invoice[]                        @relation("tax_invoice_taxInvoiceCountryIdTocountry")
  tax_invoice_tax_invoice_taxInvoiceDeliveryCountryIdTocountry                                   tax_invoice[]                        @relation("tax_invoice_taxInvoiceDeliveryCountryIdTocountry")
  tax_invoice_and_delivery_tax_invoice_and_delivery_taxInvoiceCountryIdTocountry                 tax_invoice_and_delivery[]           @relation("tax_invoice_and_delivery_taxInvoiceCountryIdTocountry")
  tax_invoice_and_delivery_tax_invoice_and_delivery_taxInvoiceDeliveryCountryIdTocountry         tax_invoice_and_delivery[]           @relation("tax_invoice_and_delivery_taxInvoiceDeliveryCountryIdTocountry")
  warehouse                                                                                      warehouse[]

  @@index([createdAt], map: "iX_country_createdAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model credit_agent {
  id                    Int                             @id @default(autoincrement())
  agentId               Int?
  totalCreditLimit      Decimal?                        @db.Decimal(18, 2)
  creditAmount          Decimal?                        @db.Decimal(18, 2)
  customerCreditType    credit_agent_customerCreditType @default(Personal)
  remainingCreditLimit  Float
  createdAt             DateTime?                       @default(now()) @db.Timestamp(0)
  createdBy             String?                         @db.VarChar(256)
  updatedAt             DateTime?                       @default(now()) @db.Timestamp(0)
  updatedBy             String?                         @db.VarChar(256)
  isOrganize            Boolean                         @default(false)
  isPersonal            Boolean                         @default(false)
  agent                 agent?                          @relation(fields: [agentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_credit_agent_agent_agentId")
  credit_agent_policy   credit_agent_policy[]
  credit_document_agent credit_document_agent[]

  @@index([agentId], map: "iX_credit_agent_agentId")
  @@index([createdAt], map: "iX_credit_agent_createdAt")
  @@index([customerCreditType], map: "iX_credit_agent_customerCreditType")
  @@index([updatedAt], map: "iX_credit_agent_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model credit_agent_policy {
  id              Int                        @id @default(autoincrement())
  creditAgentId   Int
  policyDetail    String?                    @db.LongText
  policyVersion   Int
  status          credit_agent_policy_status @default(Active)
  createdAt       DateTime?                  @default(now()) @db.Timestamp(0)
  createdBy       String?                    @db.VarChar(256)
  updatedAt       DateTime?                  @default(now()) @db.Timestamp(0)
  updatedBy       String?                    @db.VarChar(256)
  credit_agent    credit_agent               @relation(fields: [creditAgentId], references: [id], onUpdate: Restrict, map: "fK_credit_agent_policy_credit_agent_creditAgentId")
  credit_customer credit_customer[]

  @@index([createdAt], map: "iX_credit_agent_policy_createdAt")
  @@index([creditAgentId], map: "iX_credit_agent_policy_creditAgentId")
  @@index([status], map: "iX_credit_agent_policy_status")
  @@index([updatedAt], map: "iX_credit_agent_policy_updatedAt")
}

model credit_consent {
  id         Int       @id @default(autoincrement())
  isAgree    Int?      @db.TinyInt
  createdAt  DateTime? @db.Timestamp(0)
  createdBy  String?   @db.VarChar(255)
  updatedAt  DateTime? @db.Timestamp(0)
  updatedBy  String?   @db.VarChar(255)
  customerId Int?
  version    Int?
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model credit_customer {
  id                        Int                               @id @default(autoincrement())
  agentId                   Int?
  customerId                Int
  creditAmount              Decimal?                          @db.Decimal(18, 2)
  creditTempAmount          Decimal?                          @db.Decimal(18, 2)
  creditSpentAmount         Decimal?                          @db.Decimal(18, 2)
  creditRemainingAmount     Decimal?                          @db.Decimal(18, 2)
  paymentTerms              Int?
  creditTempPeriod          Int?
  creditStatus              credit_customer_creditStatus      @default(Approve)
  documentAddress           String?                           @db.VarChar(256)
  countryId                 Int?
  districtId                Int?
  phoneNo                   String?                           @db.LongText
  provinceId                Int?
  subDistrictId             Int?
  zipCodeId                 Int?
  addressCreditType         credit_customer_addressCreditType @default(Reference)
  creditTempExpiredAt       DateTime?                         @db.DateTime(6)
  createdAt                 DateTime?                         @default(now()) @db.Timestamp(0)
  createdBy                 String?                           @db.VarChar(256)
  updatedAt                 DateTime?                         @default(now()) @db.Timestamp(0)
  updatedBy                 String?                           @db.VarChar(256)
  agentNote                 String?                           @db.LongText
  branchId                  Int?
  creditTempRemainingAmount Decimal?                          @db.Decimal(18, 2)
  creditTempSpentAmount     Decimal?                          @db.Decimal(18, 2)
  customerNote              String?                           @db.LongText
  gpsLocation               Unsupported("point")?
  latitude                  Float?
  longitude                 Float?
  creditTempUsedAmount      Decimal?                          @db.Decimal(18, 2)
  creditUsedAmount          Decimal?                          @db.Decimal(18, 2)
  creditAgentPolicyId       Int?
  policyVersion             Int?
  isAgree                   Int?                              @db.TinyInt
  agent                     agent?                            @relation(fields: [agentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_credit_customer_agent_agentId")
  branch                    branch?                           @relation(fields: [branchId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_credit_customer_branch_branchId")
  country                   country?                          @relation(fields: [countryId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_credit_customer_countries_countryId")
  credit_agent_policy       credit_agent_policy?              @relation(fields: [creditAgentPolicyId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_credit_customer_credit_agent_policy_creditAgentPolicyId")
  customer                  customer                          @relation(fields: [customerId], references: [id], onUpdate: Restrict, map: "fK_credit_customer_customers_customerId")
  district                  district?                         @relation(fields: [districtId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_credit_customer_districts_districtId")
  province                  province?                         @relation(fields: [provinceId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_credit_customer_provinces_provinceId")
  sub_district              sub_district?                     @relation(fields: [subDistrictId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_credit_customer_subDistricts_subDistrictId")
  zip_code                  zip_code?                         @relation(fields: [zipCodeId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_credit_customer_zipCodes_zipCodeId")
  credit_customer_document  credit_customer_document[]
  credit_order              credit_order[]
  credit_penalty_fee        credit_penalty_fee[]

  @@index([addressCreditType], map: "iX_credit_customer_addressCreditType")
  @@index([agentId], map: "iX_credit_customer_agentId")
  @@index([branchId], map: "iX_credit_customer_branchId")
  @@index([countryId], map: "iX_credit_customer_countryId")
  @@index([createdAt], map: "iX_credit_customer_createdAt")
  @@index([creditAgentPolicyId], map: "iX_credit_customer_creditAgentPolicyId")
  @@index([creditStatus], map: "iX_credit_customer_creditStatus")
  @@index([customerId], map: "iX_credit_customer_customerId")
  @@index([districtId], map: "iX_credit_customer_districtId")
  @@index([gpsLocation(length: 25)], map: "iX_credit_customer_gpsLocation")
  @@index([provinceId], map: "iX_credit_customer_provinceId")
  @@index([subDistrictId], map: "iX_credit_customer_subDistrictId")
  @@index([updatedAt], map: "iX_credit_customer_updatedAt")
  @@index([zipCodeId], map: "iX_credit_customer_zipCodeId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model credit_customer_document {
  id                      Int                                    @id @default(autoincrement())
  creditDocumentId        Int?
  creditCustomerId        Int?
  creditDocumentAgentId   Int                                    @default(0)
  documentFileName        String?                                @db.LongText
  approveStatus           credit_customer_document_approveStatus @default(WaitingForApprove)
  documentExpiredDate     DateTime?                              @db.DateTime(6)
  documentId              Int
  status                  credit_customer_document_status        @default(Active)
  note                    String?                                @db.LongText
  customerId              Int?
  createdAt               DateTime?                              @default(now()) @db.Timestamp(0)
  createdBy               String?                                @db.VarChar(256)
  updatedAt               DateTime?                              @default(now()) @db.Timestamp(0)
  updatedBy               String?                                @db.VarChar(256)
  version                 Int?                                   @default(1)
  credit_document_agent   credit_document_agent                  @relation(fields: [creditDocumentAgentId], references: [id], onUpdate: Restrict, map: "fK_credit_customer_document_creditDocumentAgents_creditDocument~")
  credit_document         credit_document?                       @relation(fields: [creditDocumentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_credit_customer_document_creditDocuments_creditDocumentId")
  credit_customer         credit_customer?                       @relation(fields: [creditCustomerId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_credit_customer_document_credit_customer_creditCustomerId")
  customer                customer?                              @relation(fields: [customerId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_credit_customer_document_customers_customerId")
  document                document                               @relation(fields: [documentId], references: [id], onUpdate: Restrict, map: "fK_credit_customer_document_documents_documentId")
  credit_request_document credit_request_document[]

  @@index([approveStatus], map: "iX_credit_customer_document_approveStatus")
  @@index([createdAt], map: "iX_credit_customer_document_createdAt")
  @@index([creditCustomerId], map: "iX_credit_customer_document_creditCustomerId")
  @@index([creditDocumentAgentId], map: "iX_credit_customer_document_creditDocumentAgentId")
  @@index([creditDocumentId], map: "iX_credit_customer_document_creditDocumentId")
  @@index([customerId], map: "iX_credit_customer_document_customerId")
  @@index([documentId], map: "iX_credit_customer_document_documentId")
  @@index([status], map: "iX_credit_customer_document_status")
  @@index([updatedAt], map: "iX_credit_customer_document_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model credit_delivery_order {
  id                        Int                                             @id @default(autoincrement())
  creditOrderId             Int?
  deliveryOrderId           Int
  invoiceNo                 String?                                         @db.LongText
  deliveryOrderAmount       Decimal?                                        @db.Decimal(18, 2)
  deliveryOrderStatus       credit_delivery_order_deliveryOrderStatus       @default(PrepareForDelivery)
  deliveryOrderQuantity     Int?
  orderDueDate              DateTime?                                       @db.DateTime(6)
  creditDeliveryOrderStatus credit_delivery_order_creditDeliveryOrderStatus @default(WaitForDelivery)
  createdAt                 DateTime?                                       @default(now()) @db.Timestamp(0)
  createdBy                 String?                                         @db.VarChar(256)
  updatedAt                 DateTime?                                       @default(now()) @db.Timestamp(0)
  updatedBy                 String?                                         @db.VarChar(256)
  creditPeriod              Int?
  startCreditAt             DateTime?                                       @db.DateTime(6)
  credit_order              credit_order?                                   @relation(fields: [creditOrderId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_credit_delivery_order_creditOrders_creditOrderId")
  delivery_order            delivery_order                                  @relation(fields: [deliveryOrderId], references: [id], onUpdate: Restrict, map: "fK_credit_delivery_order_deliveryOrders_deliveryOrderId")
  credit_notification       credit_notification[]
  credit_order_payment      credit_order_payment[]
  credit_penalty_fee        credit_penalty_fee[]

  @@index([createdAt], map: "iX_credit_delivery_order_createdAt")
  @@index([creditDeliveryOrderStatus], map: "iX_credit_delivery_order_creditDeliveryOrderStatus")
  @@index([creditOrderId], map: "iX_credit_delivery_order_creditOrderId")
  @@index([deliveryOrderId], map: "iX_credit_delivery_order_deliveryOrderId")
  @@index([deliveryOrderStatus], map: "iX_credit_delivery_order_deliveryOrderStatus")
  @@index([updatedAt], map: "iX_credit_delivery_order_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model credit_document {
  id                       Int                                @id @default(autoincrement())
  documentName             String?                            @db.LongText
  documentType             credit_document_documentType       @default(Master)
  customerCreditType       credit_document_customerCreditType @default(Personal)
  creditDocumentType       credit_document_creditDocumentType @default(Permanent)
  documentRequired         Boolean
  status                   credit_document_status             @default(Active)
  createdAt                DateTime?                          @default(now()) @db.Timestamp(0)
  createdBy                String?                            @db.VarChar(256)
  updatedAt                DateTime?                          @default(now()) @db.Timestamp(0)
  updatedBy                String?                            @db.VarChar(256)
  note                     String?                            @db.LongText
  isDefault                Boolean                            @default(false)
  mapping                  String?                            @db.VarChar(126)
  credit_customer_document credit_customer_document[]
  credit_document_agent    credit_document_agent[]
  credit_document_file     credit_document_file[]

  @@index([createdAt], map: "iX_credit_document_createdAt")
  @@index([creditDocumentType], map: "iX_credit_document_creditDocumentType")
  @@index([customerCreditType], map: "iX_credit_document_customerCreditType")
  @@index([documentType], map: "iX_credit_document_documentType")
  @@index([mapping], map: "iX_credit_document_mapping")
  @@index([status], map: "iX_credit_document_status")
  @@index([updatedAt], map: "iX_credit_document_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model credit_document_agent {
  id                       Int                          @id @default(autoincrement())
  creditDocumentId         Int?
  creditAgentId            Int?
  status                   credit_document_agent_status @default(Active)
  createdAt                DateTime?                    @default(now()) @db.Timestamp(0)
  createdBy                String?                      @db.VarChar(256)
  updatedAt                DateTime?                    @default(now()) @db.Timestamp(0)
  updatedBy                String?                      @db.VarChar(256)
  credit_customer_document credit_customer_document[]
  credit_agent             credit_agent?                @relation(fields: [creditAgentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_credit_document_agent_credit_agent_creditAgentId")
  credit_document          credit_document?             @relation(fields: [creditDocumentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_credit_document_agent_credit_document_creditDocumentId")
  credit_document_file     credit_document_file[]

  @@index([createdAt], map: "iX_credit_document_agent_createdAt")
  @@index([creditAgentId], map: "iX_credit_document_agent_creditAgentId")
  @@index([creditDocumentId], map: "iX_credit_document_agent_creditDocumentId")
  @@index([status], map: "iX_credit_document_agent_status")
  @@index([updatedAt], map: "iX_credit_document_agent_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model credit_document_file {
  id                    Int                         @id @default(autoincrement())
  creditDocumentId      Int                         @default(0)
  createdAt             DateTime?                   @default(now()) @db.Timestamp(0)
  createdBy             String?                     @db.VarChar(256)
  documentId            Int                         @default(0)
  status                credit_document_file_status @default(Active)
  updatedAt             DateTime?                   @default(now()) @db.Timestamp(0)
  updatedBy             String?                     @db.VarChar(256)
  creditDocumentAgentId Int?
  documentExpiredDate   DateTime?                   @db.DateTime(6)
  credit_document_agent credit_document_agent?      @relation(fields: [creditDocumentAgentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_credit_document_file_credit_document_agent_creditDocumentAge~")
  credit_document       credit_document             @relation(fields: [creditDocumentId], references: [id], onUpdate: Restrict, map: "fK_credit_document_file_credit_document_creditDocumentId")
  document              document                    @relation(fields: [documentId], references: [id], onUpdate: Restrict, map: "fK_credit_document_file_documents_documentId")

  @@index([createdAt], map: "iX_credit_document_file_createdAt")
  @@index([creditDocumentAgentId], map: "iX_credit_document_file_creditDocumentAgentId")
  @@index([creditDocumentId], map: "iX_credit_document_file_creditDocumentId")
  @@index([documentId], map: "iX_credit_document_file_documentId")
  @@index([status], map: "iX_credit_document_file_status")
  @@index([updatedAt], map: "iX_credit_document_file_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model credit_notification {
  id                       Int                                          @id @default(autoincrement())
  creditOrderId            Int?
  sentDate                 DateTime?                                    @db.DateTime(6)
  createdAt                DateTime?                                    @default(now()) @db.Timestamp(0)
  createdBy                String?                                      @db.VarChar(256)
  updatedAt                DateTime?                                    @default(now()) @db.Timestamp(0)
  updatedBy                String?                                      @db.VarChar(256)
  documentId               Int?
  isRead                   Boolean                                      @default(false)
  agentId                  Int?
  creditNotificationStatus credit_notification_creditNotificationStatus @default(None)
  creditRequestId          Int?
  customerId               Int?
  description              String?                                      @db.LongText
  status                   credit_notification_status                   @default(Active)
  creditPenaltyFeeId       Int?
  creditDeliveryOrderId    Int?
  creditPaymentId          Int?
  agent                    agent?                                       @relation(fields: [agentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_credit_notification_agent_agentId")
  credit_order             credit_order?                                @relation(fields: [creditOrderId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_credit_notification_creditOrders_creditOrderId")
  credit_payment           credit_payment?                              @relation(fields: [creditPaymentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_credit_notification_creditPayments_creditPaymentId")
  credit_penalty_fee       credit_penalty_fee?                          @relation(fields: [creditPenaltyFeeId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_credit_notification_creditPenaltyFees_creditPenaltyFeeId")
  credit_request           credit_request?                              @relation(fields: [creditRequestId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_credit_notification_creditRequests_creditRequestId")
  credit_delivery_order    credit_delivery_order?                       @relation(fields: [creditDeliveryOrderId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_credit_notification_credit_delivery_order_creditDeliveryOrde~")
  customer                 customer?                                    @relation(fields: [customerId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_credit_notification_customers_customerId")
  document                 document?                                    @relation(fields: [documentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_credit_notification_documents_documentId")

  @@index([agentId], map: "iX_credit_notification_agentId")
  @@index([createdAt], map: "iX_credit_notification_createdAt")
  @@index([creditDeliveryOrderId], map: "iX_credit_notification_creditDeliveryOrderId")
  @@index([creditNotificationStatus], map: "iX_credit_notification_creditNotificationStatus")
  @@index([creditOrderId], map: "iX_credit_notification_creditOrderId")
  @@index([creditPaymentId], map: "iX_credit_notification_creditPaymentId")
  @@index([creditPenaltyFeeId], map: "iX_credit_notification_creditPenaltyFeeId")
  @@index([creditRequestId], map: "iX_credit_notification_creditRequestId")
  @@index([customerId], map: "iX_credit_notification_customerId")
  @@index([documentId], map: "iX_credit_notification_documentId")
  @@index([sentDate], map: "iX_credit_notification_sentDate")
  @@index([updatedAt], map: "iX_credit_notification_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model credit_order {
  id                    Int                     @id @default(autoincrement())
  creditCustomerId      Int?
  orderId               Int?
  invoiceNo             String?                 @db.LongText
  orderAmount           Decimal?                @db.Decimal(18, 2)
  orderDueDate          DateTime?               @db.DateTime(6)
  createdAt             DateTime?               @default(now()) @db.Timestamp(0)
  createdBy             String?                 @db.VarChar(256)
  updatedAt             DateTime?               @default(now()) @db.Timestamp(0)
  updatedBy             String?                 @db.VarChar(256)
  creditType            credit_order_creditType @default(Permanent)
  creditPeriod          Int?
  startCreditAt         DateTime?               @db.DateTime(6)
  note                  String?                 @db.LongText
  credit_delivery_order credit_delivery_order[]
  credit_notification   credit_notification[]
  credit_customer       credit_customer?        @relation(fields: [creditCustomerId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_credit_order_credit_customer_creditCustomerId")
  order                 order?                  @relation(fields: [orderId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_credit_order_orders_orderId")
  credit_order_payment  credit_order_payment[]
  credit_penalty_fee    credit_penalty_fee[]
  credit_transaction    credit_transaction[]

  @@index([createdAt], map: "iX_credit_order_createdAt")
  @@index([creditCustomerId], map: "iX_credit_order_creditCustomerId")
  @@index([creditType], map: "iX_credit_order_creditType")
  @@index([orderId], map: "iX_credit_order_orderId")
  @@index([updatedAt], map: "iX_credit_order_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model credit_order_payment {
  id                    Int                    @id @default(autoincrement())
  creditOrderId         Int?
  creditPaymentId       Int?
  creditDeliveryOrderId Int?
  createdAt             DateTime?              @default(now()) @db.Timestamp(0)
  createdBy             String?                @db.VarChar(256)
  updatedAt             DateTime?              @default(now()) @db.Timestamp(0)
  updatedBy             String?                @db.VarChar(256)
  creditPenaltyFeeId    Int?
  credit_payment        credit_payment?        @relation(fields: [creditPaymentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_credit_order_payment_creditPayments_creditPaymentId")
  credit_penalty_fee    credit_penalty_fee?    @relation(fields: [creditPenaltyFeeId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_credit_order_payment_creditPenaltyFees_creditPenaltyFeeId")
  credit_delivery_order credit_delivery_order? @relation(fields: [creditDeliveryOrderId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_credit_order_payment_credit_delivery_order_creditDeliveryOrd~")
  credit_order          credit_order?          @relation(fields: [creditOrderId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_credit_order_payment_credit_order_creditOrderId")

  @@index([createdAt], map: "iX_credit_order_payment_createdAt")
  @@index([creditDeliveryOrderId], map: "iX_credit_order_payment_creditDeliveryOrderId")
  @@index([creditOrderId], map: "iX_credit_order_payment_creditOrderId")
  @@index([creditPaymentId], map: "iX_credit_order_payment_creditPaymentId")
  @@index([creditPenaltyFeeId], map: "iX_credit_order_payment_creditPenaltyFeeId")
  @@index([updatedAt], map: "iX_credit_order_payment_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model credit_pay_image {
  id              Int             @id @default(autoincrement())
  creditPaymentId Int?
  documentId      Int?
  createdAt       DateTime?       @default(now()) @db.Timestamp(0)
  createdBy       String?         @db.VarChar(256)
  updatedAt       DateTime?       @default(now()) @db.Timestamp(0)
  updatedBy       String?         @db.VarChar(256)
  credit_payment  credit_payment? @relation(fields: [creditPaymentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_credit_pay_image_creditPayments_creditPaymentId")
  document        document?       @relation(fields: [documentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_credit_pay_image_documents_documentId")

  @@index([createdAt], map: "iX_credit_pay_image_createdAt")
  @@index([creditPaymentId], map: "iX_credit_pay_image_creditPaymentId")
  @@index([documentId], map: "iX_credit_pay_image_documentId")
  @@index([updatedAt], map: "iX_credit_pay_image_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model credit_payment {
  id                   Int                          @id @default(autoincrement())
  invoiceNo            String?                      @db.LongText
  recieveAmount        Decimal?                     @db.Decimal(18, 2)
  recieveDate          DateTime?                    @db.DateTime(6)
  receiveTime          DateTime?                    @db.DateTime(6)
  paymentType          credit_payment_paymentType   @default(BankAccount)
  ref1                 String?                      @db.LongText
  ref2                 String?                      @db.LongText
  paymentStatus        credit_payment_paymentStatus @default(New)
  billingDate          DateTime?                    @db.DateTime(6)
  createdAt            DateTime?                    @default(now()) @db.Timestamp(0)
  createdBy            String?                      @db.VarChar(256)
  updatedAt            DateTime?                    @default(now()) @db.Timestamp(0)
  updatedBy            String?                      @db.VarChar(256)
  note                 String?                      @db.LongText
  agentNote            String?                      @db.LongText
  agentId              Int?
  customerId           Int?
  credit_notification  credit_notification[]
  credit_order_payment credit_order_payment[]
  credit_pay_image     credit_pay_image[]
  agent                agent?                       @relation(fields: [agentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_credit_payment_agent_agentId")
  customer             customer?                    @relation(fields: [customerId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_credit_payment_customers_customerId")
  notification_credit  notification_credit[]

  @@index([agentId], map: "iX_credit_payment_agentId")
  @@index([createdAt], map: "iX_credit_payment_createdAt")
  @@index([customerId], map: "iX_credit_payment_customerId")
  @@index([paymentStatus], map: "iX_credit_payment_paymentStatus")
  @@index([paymentType], map: "iX_credit_payment_paymentType")
  @@index([updatedAt], map: "iX_credit_payment_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model credit_penalty_fee {
  id                           Int                                    @id @default(autoincrement())
  creditOrderId                Int?
  creditCustomerId             Int?
  creditPenaltyType            credit_penalty_fee_creditPenaltyType   @default(FeePercentRate)
  penaltyFeePercentRate        Decimal?                               @db.Decimal(18, 2)
  penaltyFeeRate               Decimal?                               @db.Decimal(18, 2)
  penaltyFeeAmount             Decimal?                               @db.Decimal(18, 2)
  creditPaymentDate            DateTime?                              @db.DateTime(6)
  creditDueDate                DateTime?                              @db.DateTime(6)
  billingDate                  DateTime?                              @db.DateTime(6)
  creditPenaltyStatus          credit_penalty_fee_creditPenaltyStatus @default(WaitForPayment)
  createdAt                    DateTime?                              @default(now()) @db.Timestamp(0)
  createdBy                    String?                                @db.VarChar(256)
  updatedAt                    DateTime?                              @default(now()) @db.Timestamp(0)
  updatedBy                    String?                                @db.VarChar(256)
  status                       credit_penalty_fee_status              @default(Active)
  endInterestCalculationDate   DateTime?                              @db.DateTime(6)
  startInterestCalculationDate DateTime?                              @db.DateTime(6)
  creditDeliveryOrderId        Int?
  note                         String?                                @db.VarChar(256)
  credit_notification          credit_notification[]
  credit_order_payment         credit_order_payment[]
  credit_customer              credit_customer?                       @relation(fields: [creditCustomerId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_credit_penalty_fee_credit_customer_creditCustomerId")
  credit_delivery_order        credit_delivery_order?                 @relation(fields: [creditDeliveryOrderId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_credit_penalty_fee_credit_delivery_order_creditDeliveryOrder~")
  credit_order                 credit_order?                          @relation(fields: [creditOrderId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_credit_penalty_fee_credit_order_creditOrderId")

  @@index([createdAt], map: "iX_credit_penalty_fee_createdAt")
  @@index([creditCustomerId], map: "iX_credit_penalty_fee_creditCustomerId")
  @@index([creditDeliveryOrderId], map: "iX_credit_penalty_fee_creditDeliveryOrderId")
  @@index([creditOrderId], map: "iX_credit_penalty_fee_creditOrderId")
  @@index([creditPenaltyStatus], map: "iX_credit_penalty_fee_creditPenaltyStatus")
  @@index([creditPenaltyType], map: "iX_credit_penalty_fee_creditPenaltyType")
  @@index([status], map: "iX_credit_penalty_fee_status")
  @@index([updatedAt], map: "iX_credit_penalty_fee_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model credit_request {
  id                      Int                                @id @default(autoincrement())
  customerId              Int?
  agentId                 Int?
  creditRequestType       credit_request_creditRequestType   @default(PermanentCreditLimit)
  creditRequestAmount     Decimal?                           @db.Decimal(18, 2)
  creditRequestStatus     credit_request_creditRequestStatus @default(WaitForApprove)
  creditRequestDate       DateTime?                          @db.DateTime(6)
  createdAt               DateTime?                          @default(now()) @db.Timestamp(0)
  createdBy               String?                            @db.VarChar(256)
  updatedAt               DateTime?                          @default(now()) @db.Timestamp(0)
  updatedBy               String?                            @db.VarChar(256)
  status                  credit_request_status              @default(Active)
  approvedAt              DateTime?                          @db.DateTime(6)
  approvedBy              String?                            @db.LongText
  paymentTerms            Decimal?                           @db.Decimal(18, 2)
  note                    String?                            @db.LongText
  isRequestBySeller       Boolean                            @default(false)
  creditTempExpireDate    DateTime?                          @db.DateTime(6)
  credit_notification     credit_notification[]
  agent                   agent?                             @relation(fields: [agentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_credit_request_agent_agentId")
  customer                customer?                          @relation(fields: [customerId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_credit_request_customers_customerId")
  credit_request_document credit_request_document[]
  notification_credit     notification_credit[]

  @@index([agentId], map: "iX_credit_request_agentId")
  @@index([createdAt], map: "iX_credit_request_createdAt")
  @@index([creditRequestStatus], map: "iX_credit_request_creditRequestStatus")
  @@index([creditRequestType], map: "iX_credit_request_creditRequestType")
  @@index([customerId], map: "iX_credit_request_customerId")
  @@index([status], map: "iX_credit_request_status")
  @@index([updatedAt], map: "iX_credit_request_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model credit_request_document {
  id                       Int                            @id @default(autoincrement())
  creditCustomerDocumentId Int
  creditRequestId          Int
  status                   credit_request_document_status @default(Active)
  createdAt                DateTime?                      @default(now()) @db.Timestamp(0)
  createdBy                String?                        @db.VarChar(256)
  updatedAt                DateTime?                      @default(now()) @db.Timestamp(0)
  updatedBy                String?                        @db.VarChar(256)
  credit_customer_document credit_customer_document       @relation(fields: [creditCustomerDocumentId], references: [id], onUpdate: Restrict, map: "fK_credit_request_document_credit_customer_document_creditCusto~")
  credit_request           credit_request                 @relation(fields: [creditRequestId], references: [id], onUpdate: Restrict, map: "fK_credit_request_document_credit_request_creditRequestId")

  @@index([createdAt], map: "iX_credit_request_document_createdAt")
  @@index([creditCustomerDocumentId], map: "iX_credit_request_document_creditCustomerDocumentId")
  @@index([creditRequestId], map: "iX_credit_request_document_creditRequestId")
  @@index([status], map: "iX_credit_request_document_status")
  @@index([updatedAt], map: "iX_credit_request_document_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model credit_transaction {
  id                   Int          @id @default(autoincrement())
  creditRemaningAmount Decimal?     @db.Decimal(18, 2)
  creditSpendingAmount Decimal?     @db.Decimal(18, 2)
  creditPaybackAmount  Decimal?     @db.Decimal(18, 2)
  createdAt            DateTime?    @default(now()) @db.Timestamp(0)
  createdBy            String?      @db.VarChar(256)
  updatedAt            DateTime?    @default(now()) @db.Timestamp(0)
  updatedBy            String?      @db.VarChar(256)
  creditOrderId        Int          @default(0)
  credit_order         credit_order @relation(fields: [creditOrderId], references: [id], onUpdate: Restrict, map: "fK_credit_transaction_credit_order_creditOrderId")

  @@index([createdAt], map: "iX_credit_transaction_createdAt")
  @@index([creditOrderId], map: "iX_credit_transaction_creditOrderId")
  @@index([updatedAt], map: "iX_credit_transaction_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model customer {
  id                                                           Int                                  @id @default(autoincrement())
  customerCode                                                 String?                              @db.VarChar(128)
  corporateName                                                String?                              @db.VarChar(256)
  corporateOwnerIdentityDocumentId                             Int?
  corporateIdentityDocumentId                                  Int?
  taxDocumentId                                                Int?
  financialDocumentId                                          Int?
  bookBankDocumentId                                           Int?
  corporateImageDocumentId                                     Int?
  trademarkDocumentId                                          Int?
  authorizeDocumentId                                          Int?
  authorizePersonDocumentId                                    Int?
  otherDocumentId                                              Int?
  corporatePhoneNo                                             String?                              @db.VarChar(10)
  personalIdentityCardNo                                       String?                              @db.VarChar(16)
  personalFirstName                                            String?                              @db.VarChar(128)
  personalLastName                                             String?                              @db.VarChar(128)
  personalPhoneNo                                              String?                              @db.VarChar(128)
  personalEmail                                                String?                              @db.VarChar(64)
  personalIdentityDocumentId                                   Int?
  accountId                                                    Int?
  customerType                                                 customer_customerType                @default(PERSONAL)
  haveCredit                                                   Boolean
  createdAt                                                    DateTime?                            @default(now()) @db.Timestamp(0)
  createdBy                                                    String?                              @db.VarChar(256)
  updatedAt                                                    DateTime?                            @default(now()) @db.Timestamp(0)
  updatedBy                                                    String?                              @db.VarChar(256)
  allkonsAccountId                                             Int?
  houseRegisterDocumentId                                      Int?
  organizeAllkonsId                                            String?                              @db.VarChar(255)
  isOrganize                                                   Int?
  corporateNo                                                  String?                              @db.VarChar(255)
  grandTotal                                                   Decimal?                             @db.Decimal(18, 2)
  successedGrandTotal                                          Decimal?                             @db.Decimal(18, 2)
  isCheckOccupation                                            Int?                                 @default(0)
  encryptAccountId                                             String?                              @db.VarChar(255)
  cisNumber                                                    String?                              @db.VarChar(256)
  boq                                                          boq[]
  chat_history                                                 chat_history[]
  chat_room                                                    chat_room[]
  credit_customer                                              credit_customer[]
  credit_customer_document                                     credit_customer_document[]
  credit_notification                                          credit_notification[]
  credit_payment                                               credit_payment[]
  credit_request                                               credit_request[]
  account                                                      account?                             @relation(fields: [accountId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_accounts_accountId")
  document_customer_authorizeDocumentIdTodocument              document?                            @relation("customer_authorizeDocumentIdTodocument", fields: [authorizeDocumentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_documents_authorizeDocumentId")
  document_customer_authorizePersonDocumentIdTodocument        document?                            @relation("customer_authorizePersonDocumentIdTodocument", fields: [authorizePersonDocumentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_documents_authorizePersonDocumentId")
  document_customer_bookBankDocumentIdTodocument               document?                            @relation("customer_bookBankDocumentIdTodocument", fields: [bookBankDocumentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_documents_bookBankDocumentId")
  document_customer_corporateIdentityDocumentIdTodocument      document?                            @relation("customer_corporateIdentityDocumentIdTodocument", fields: [corporateIdentityDocumentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_documents_corporateIdentityDocumentId")
  document_customer_corporateImageDocumentIdTodocument         document?                            @relation("customer_corporateImageDocumentIdTodocument", fields: [corporateImageDocumentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_documents_corporateImageDocumentId")
  document_customer_corporateOwnerIdentityDocumentIdTodocument document?                            @relation("customer_corporateOwnerIdentityDocumentIdTodocument", fields: [corporateOwnerIdentityDocumentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_documents_corporateOwnerIdentityDocumentId")
  document_customer_financialDocumentIdTodocument              document?                            @relation("customer_financialDocumentIdTodocument", fields: [financialDocumentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_documents_financialDocumentId")
  document_customer_houseRegisterDocumentIdTodocument          document?                            @relation("customer_houseRegisterDocumentIdTodocument", fields: [houseRegisterDocumentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_documents_houseRegisterDocumentId")
  document_customer_otherDocumentIdTodocument                  document?                            @relation("customer_otherDocumentIdTodocument", fields: [otherDocumentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_documents_otherDocumentId")
  document_customer_personalIdentityDocumentIdTodocument       document?                            @relation("customer_personalIdentityDocumentIdTodocument", fields: [personalIdentityDocumentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_documents_personalIdentityDocumentId")
  document_customer_taxDocumentIdTodocument                    document?                            @relation("customer_taxDocumentIdTodocument", fields: [taxDocumentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_documents_taxDocumentId")
  document_customer_trademarkDocumentIdTodocument              document?                            @relation("customer_trademarkDocumentIdTodocument", fields: [trademarkDocumentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_documents_trademarkDocumentId")
  customer_address                                             customer_address[]
  customer_advisor                                             customer_advisor[]
  customer_category                                            customer_category[]
  customer_credit_agent                                        customer_credit_agent[]
  customer_credit_card                                         customer_credit_card[]
  customer_favorite_agent                                      customer_favorite_agent[]
  customer_favorite_agent_display                              customer_favorite_agent_display[]
  customer_img                                                 customer_img[]
  customer_location_delivery_address                           customer_location_delivery_address[]
  customer_occupation                                          customer_occupation[]
  customer_tax_invoice_address                                 customer_tax_invoice_address[]
  notification_customer_data                                   notification_customer_data[]
  notification_status_order                                    notification_status_order[]
  product_search_history                                       product_search_history[]
  product_variant_review                                       product_variant_review[]
  project                                                      project[]
  promotion_customer                                           promotion_customer[]
  quotation                                                    quotation[]
  regular_customer                                             regular_customer[]

  @@index([accountId], map: "iX_customer_accountId")
  @@index([authorizeDocumentId], map: "iX_customer_authorizeDocumentId")
  @@index([authorizePersonDocumentId], map: "iX_customer_authorizePersonDocumentId")
  @@index([bookBankDocumentId], map: "iX_customer_bookBankDocumentId")
  @@index([corporateIdentityDocumentId], map: "iX_customer_corporateIdentityDocumentId")
  @@index([corporateImageDocumentId], map: "iX_customer_corporateImageDocumentId")
  @@index([corporateOwnerIdentityDocumentId], map: "iX_customer_corporateOwnerIdentityDocumentId")
  @@index([createdAt], map: "iX_customer_createdAt")
  @@index([customerType], map: "iX_customer_customerType")
  @@index([financialDocumentId], map: "iX_customer_financialDocumentId")
  @@index([houseRegisterDocumentId], map: "iX_customer_houseRegisterDocumentId")
  @@index([otherDocumentId], map: "iX_customer_otherDocumentId")
  @@index([personalIdentityDocumentId], map: "iX_customer_personalIdentityDocumentId")
  @@index([taxDocumentId], map: "iX_customer_taxDocumentId")
  @@index([trademarkDocumentId], map: "iX_customer_trademarkDocumentId")
  @@index([updatedAt], map: "iX_customer_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model customer_address {
  id            Int                   @id @default(autoincrement())
  customerId    Int
  address       String?               @db.VarChar(256)
  countryId     Int?
  provinceId    Int?
  districtId    Int?
  subDistrictId Int?
  zipCodeId     Int?
  latitude      Float?
  longitude     Float?
  createdAt     DateTime?             @default(now()) @db.Timestamp(0)
  createdBy     String?               @db.VarChar(256)
  updatedAt     DateTime?             @default(now()) @db.Timestamp(0)
  updatedBy     String?               @db.VarChar(256)
  gpsLocation   Unsupported("point")?
  cisNumber     String?               @db.VarChar(256)
  cisContactId  String?               @db.VarChar(256)
  country       country?              @relation(fields: [countryId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_address_countries_countryId")
  customer      customer              @relation(fields: [customerId], references: [id], onUpdate: Restrict, map: "fK_customer_address_customer_customerId")
  district      district?             @relation(fields: [districtId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_address_districts_districtId")
  province      province?             @relation(fields: [provinceId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_address_provinces_provinceId")
  sub_district  sub_district?         @relation(fields: [subDistrictId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_address_subDistricts_subDistrictId")
  zip_code      zip_code?             @relation(fields: [zipCodeId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_address_zipCodes_zipCodeId")

  @@index([countryId], map: "iX_customer_address_countryId")
  @@index([createdAt], map: "iX_customer_address_createdAt")
  @@index([customerId], map: "iX_customer_address_customerId")
  @@index([districtId], map: "iX_customer_address_districtId")
  @@index([gpsLocation(length: 25)], map: "iX_customer_address_gpsLocation")
  @@index([provinceId], map: "iX_customer_address_provinceId")
  @@index([subDistrictId], map: "iX_customer_address_subDistrictId")
  @@index([updatedAt], map: "iX_customer_address_updatedAt")
  @@index([zipCodeId], map: "iX_customer_address_zipCodeId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model customer_advisor {
  id         Int        @id @default(autoincrement())
  customerId Int
  advisorId  Int
  createdAt  DateTime?  @default(now()) @db.Timestamp(0)
  createdBy  String?    @db.VarChar(256)
  updatedAt  DateTime?  @default(now()) @db.Timestamp(0)
  updatedBy  String?    @db.VarChar(256)
  agent_user agent_user @relation(fields: [advisorId], references: [id], onUpdate: Restrict, map: "fK_customer_advisor_agent_user_advisorId")
  customer   customer   @relation(fields: [customerId], references: [id], onUpdate: Restrict, map: "fK_customer_advisor_customer_customerId")

  @@index([advisorId], map: "iX_customer_advisor_advisorId")
  @@index([createdAt], map: "iX_customer_advisor_createdAt")
  @@index([customerId], map: "iX_customer_advisor_customerId")
  @@index([updatedAt], map: "iX_customer_advisor_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model customer_category {
  id                 Int                     @id @default(autoincrement())
  customerId         Int?
  type               customer_category_type? @default(PERSONAL)
  categoryId         Int?
  createdAt          DateTime?               @default(now()) @db.DateTime(0)
  createdBy          String?                 @db.VarChar(255)
  updatedAt          DateTime?               @default(now()) @db.DateTime(0)
  updatedBy          String?                 @db.VarChar(255)
  customerOrganizeId Int?
  category           category?               @relation(fields: [categoryId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fkCategoryId")
  customer           customer?               @relation(fields: [customerId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fkCustomerId")

  @@index([categoryId], map: "fkCategoryId")
  @@index([customerId], map: "fkCustomerId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model customer_credit_agent {
  id                   Int       @id @default(autoincrement())
  agentId              Int
  customerId           Int
  paymentTerms         Boolean?
  totalCreditLimit     Boolean
  remainingCreditLimit Boolean
  createdAt            DateTime? @default(now()) @db.Timestamp(0)
  createdBy            String?   @db.VarChar(256)
  updatedAt            DateTime? @default(now()) @db.Timestamp(0)
  updatedBy            String?   @db.VarChar(256)
  agent                agent     @relation(fields: [agentId], references: [id], onUpdate: Restrict, map: "fK_customer_credit_agent_agent_agentId")
  customer             customer  @relation(fields: [customerId], references: [id], onUpdate: Restrict, map: "fK_customer_credit_agent_customer_customerId")

  @@index([agentId], map: "iX_customer_credit_agent_agentId")
  @@index([createdAt], map: "iX_customer_credit_agent_createdAt")
  @@index([customerId], map: "iX_customer_credit_agent_customerId")
  @@index([updatedAt], map: "iX_customer_credit_agent_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model customer_credit_card {
  id         Int       @id @default(autoincrement())
  customerId Int
  cardNumber String?   @db.VarChar(64)
  holderName String?   @db.VarChar(256)
  expireDate String?   @db.VarChar(4)
  cCV        String?   @db.VarChar(8)
  createdAt  DateTime? @default(now()) @db.Timestamp(0)
  createdBy  String?   @db.VarChar(256)
  updatedAt  DateTime? @default(now()) @db.Timestamp(0)
  updatedBy  String?   @db.VarChar(256)
  customer   customer  @relation(fields: [customerId], references: [id], onUpdate: Restrict, map: "fK_customer_credit_card_customer_customerId")

  @@index([createdAt], map: "iX_customer_credit_card_createdAt")
  @@index([customerId], map: "iX_customer_credit_card_customerId")
  @@index([updatedAt], map: "iX_customer_credit_card_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model customer_data {
  id                          Int                           @id @default(autoincrement())
  agentId                     Int
  regularCustomerId           Int
  customerCode                String?                       @db.VarChar(128)
  customerType                customer_data_customerType    @default(PERSONAL)
  corporateName               String?                       @db.VarChar(256)
  corporateNumber             String?                       @db.VarChar(16)
  corporatePhoneNumber        String?                       @db.VarChar(10)
  personalIdentityCardNo      String?                       @db.VarChar(16)
  personalFirstName           String?                       @db.VarChar(128)
  personalLastName            String?                       @db.VarChar(128)
  personalPhoneNo             String?                       @db.VarChar(10)
  personalEmail               String?                       @db.VarChar(64)
  address                     String?                       @db.VarChar(256)
  countryId                   Int?
  provinceId                  Int?
  districtId                  Int?
  subDistrictId               Int?
  zipCodeId                   Int?
  note                        String?                       @db.LongText
  version                     Int
  status                      customer_data_status          @default(Active)
  statusApproved              customer_data_statusApproved  @default(WaitCustomerApproved)
  createdAt                   DateTime?                     @default(now()) @db.Timestamp(0)
  createdBy                   String?                       @db.VarChar(256)
  updatedAt                   DateTime?                     @default(now()) @db.Timestamp(0)
  updatedBy                   String?                       @db.VarChar(256)
  phoneNumber                 String?                       @db.VarChar(10)
  agent                       agent                         @relation(fields: [agentId], references: [id], onUpdate: Restrict, map: "fK_customer_data_agent_agentId")
  country                     country?                      @relation(fields: [countryId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_data_countries_countryId")
  district                    district?                     @relation(fields: [districtId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_data_districts_districtId")
  province                    province?                     @relation(fields: [provinceId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_data_provinces_provinceId")
  regular_customer            regular_customer              @relation(fields: [regularCustomerId], references: [id], onUpdate: Restrict, map: "fK_customer_data_regular_customer_regularCustomerId")
  sub_district                sub_district?                 @relation(fields: [subDistrictId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_data_subDistricts_subDistrictId")
  zip_code                    zip_code?                     @relation(fields: [zipCodeId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_data_zipCodes_zipCodeId")
  customer_data_document_type customer_data_document_type[]

  @@index([agentId], map: "iX_customer_data_agentId")
  @@index([countryId], map: "iX_customer_data_countryId")
  @@index([createdAt], map: "iX_customer_data_createdAt")
  @@index([customerType], map: "iX_customer_data_customerType")
  @@index([districtId], map: "iX_customer_data_districtId")
  @@index([provinceId], map: "iX_customer_data_provinceId")
  @@index([regularCustomerId], map: "iX_customer_data_regularCustomerId")
  @@index([status], map: "iX_customer_data_status")
  @@index([statusApproved], map: "iX_customer_data_statusApproved")
  @@index([subDistrictId], map: "iX_customer_data_subDistrictId")
  @@index([updatedAt], map: "iX_customer_data_updatedAt")
  @@index([zipCodeId], map: "iX_customer_data_zipCodeId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model customer_data_document {
  id                          Int                         @id @default(autoincrement())
  documentId                  Int
  createdAt                   DateTime?                   @default(now()) @db.Timestamp(0)
  createdBy                   String?                     @db.VarChar(256)
  updatedAt                   DateTime?                   @default(now()) @db.Timestamp(0)
  updatedBy                   String?                     @db.VarChar(256)
  customerDataDocumentTypeId  Int                         @default(0)
  document                    document                    @relation(fields: [documentId], references: [id], onUpdate: Restrict, map: "fK_customer_data_document_documents_documentId")
  customer_data_document_type customer_data_document_type @relation(fields: [customerDataDocumentTypeId], references: [id], onUpdate: Restrict, map: "fK_customer_data_document_tbCustomerDataDocumentType_customerDa~")

  @@index([createdAt], map: "iX_customer_data_document_createdAt")
  @@index([customerDataDocumentTypeId], map: "iX_customer_data_document_customerDataDocumentTypeId")
  @@index([documentId], map: "iX_customer_data_document_documentId")
  @@index([updatedAt], map: "iX_customer_data_document_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model customer_data_document_type {
  id                     Int                                         @id @default(autoincrement())
  name                   String?                                     @db.VarChar(256)
  customerUseType        customer_data_document_type_customerUseType @default(PERSONAL)
  isDefault              Boolean
  customerDataId         Int
  createdAt              DateTime?                                   @default(now()) @db.Timestamp(0)
  createdBy              String?                                     @db.VarChar(256)
  updatedAt              DateTime?                                   @default(now()) @db.Timestamp(0)
  updatedBy              String?                                     @db.VarChar(256)
  customer_data_document customer_data_document[]
  customer_data          customer_data                               @relation(fields: [customerDataId], references: [id], onUpdate: Restrict, map: "fK_customer_data_document_type_customer_data_customerDataId")

  @@index([createdAt], map: "iX_customer_data_document_type_createdAt")
  @@index([customerDataId], map: "iX_customer_data_document_type_customerDataId")
  @@index([customerUseType], map: "iX_customer_data_document_type_customerUseType")
  @@index([updatedAt], map: "iX_customer_data_document_type_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model customer_delivery_address {
  id            Int                              @id @default(autoincrement())
  projectId     Int
  locationName  String?                          @db.LongText
  address       String?                          @db.LongText
  countryId     Int?
  provinceId    Int?
  districtId    Int?
  subDistrictId Int?
  zipCodeId     Int?
  receiverName  String?                          @db.VarChar(200)
  receiverPhone String?                          @db.VarChar(255)
  description   String?                          @db.LongText
  latitude      Float?
  longitude     Float?
  usage         customer_delivery_address_usage  @default(Active)
  status        customer_delivery_address_status @default(Active)
  createdAt     DateTime?                        @default(now()) @db.Timestamp(0)
  createdBy     String?                          @db.VarChar(256)
  updatedAt     DateTime?                        @default(now()) @db.Timestamp(0)
  updatedBy     String?                          @db.VarChar(256)
  cisNumber     String?                          @db.VarChar(255)
  country       country?                         @relation(fields: [countryId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_delivery_address_countries_countryId")
  district      district?                        @relation(fields: [districtId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_delivery_address_districts_districtId")
  project       project                          @relation(fields: [projectId], references: [id], onUpdate: Restrict, map: "fK_customer_delivery_address_projects_projectId")
  province      province?                        @relation(fields: [provinceId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_delivery_address_provinces_provinceId")
  sub_district  sub_district?                    @relation(fields: [subDistrictId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_delivery_address_subDistricts_subDistrictId")
  zip_code      zip_code?                        @relation(fields: [zipCodeId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_delivery_address_zipCodes_zipCodeId")

  @@index([countryId], map: "iX_customer_delivery_address_countryId")
  @@index([createdAt], map: "iX_customer_delivery_address_createdAt")
  @@index([districtId], map: "iX_customer_delivery_address_districtId")
  @@index([projectId], map: "iX_customer_delivery_address_projectId")
  @@index([provinceId], map: "iX_customer_delivery_address_provinceId")
  @@index([status], map: "iX_customer_delivery_address_status")
  @@index([subDistrictId], map: "iX_customer_delivery_address_subDistrictId")
  @@index([updatedAt], map: "iX_customer_delivery_address_updatedAt")
  @@index([usage], map: "iX_customer_delivery_address_usage")
  @@index([zipCodeId], map: "iX_customer_delivery_address_zipCodeId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model customer_favorite_agent {
  id                              Int                               @id @default(autoincrement())
  customerId                      Int
  agentId                         Int
  projectId                       Int
  createdAt                       DateTime?                         @default(now()) @db.Timestamp(0)
  createdBy                       String?                           @db.VarChar(256)
  branchId                        Int                               @default(0)
  useStatus                       Int?
  updatedAt                       DateTime?                         @default(now()) @db.Timestamp(0)
  updatedBy                       String?                           @db.VarChar(256)
  agent                           agent                             @relation(fields: [agentId], references: [id], onUpdate: Restrict, map: "fK_customer_favorite_agent_agent_agentId")
  branch                          branch                            @relation(fields: [branchId], references: [id], onUpdate: Restrict, map: "fK_customer_favorite_agent_branch_branchId")
  customer                        customer                          @relation(fields: [customerId], references: [id], onUpdate: Restrict, map: "fK_customer_favorite_agent_customer_customerId")
  project                         project                           @relation(fields: [projectId], references: [id], onUpdate: Restrict, map: "fK_customer_favorite_agent_projects_projectId")
  customer_favorite_agent_display customer_favorite_agent_display[]
  notification_customer_favorite  notification_customer_favorite[]

  @@index([agentId], map: "iX_customer_favorite_agent_agentId")
  @@index([branchId], map: "iX_customer_favorite_agent_branchId")
  @@index([createdAt], map: "iX_customer_favorite_agent_createdAt")
  @@index([customerId], map: "iX_customer_favorite_agent_customerId")
  @@index([projectId], map: "iX_customer_favorite_agent_projectId")
  @@index([updatedAt], map: "iX_customer_favorite_agent_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model customer_favorite_agent_display {
  id                      Int                      @id @default(autoincrement())
  favoriteAgentId         Int
  customerFavoriteAgentId Int?
  customerId              Int
  display                 Int
  createdAt               DateTime?                @default(now()) @db.Timestamp(0)
  createdBy               String?                  @db.VarChar(256)
  updatedAt               DateTime?                @default(now()) @db.Timestamp(0)
  updatedBy               String?                  @db.VarChar(256)
  customer                customer                 @relation(fields: [customerId], references: [id], onUpdate: Restrict, map: "fK_customer_favorite_agent_display_customer_customerId")
  customer_favorite_agent customer_favorite_agent? @relation(fields: [customerFavoriteAgentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_favorite_agent_display_customer_favorite_agent_cust~")

  @@index([createdAt], map: "iX_customer_favorite_agent_display_createdAt")
  @@index([customerFavoriteAgentId], map: "iX_customer_favorite_agent_display_customerFavoriteAgentId")
  @@index([customerId], map: "iX_customer_favorite_agent_display_customerId")
  @@index([updatedAt], map: "iX_customer_favorite_agent_display_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model customer_favorite_branch {
  id                Int              @id @default(autoincrement())
  regularCustomerId Int              @unique(map: "iX_customer_favorite_branch_regularCustomerId") @default(0)
  branchId          Int
  createdAt         DateTime?        @default(now()) @db.Timestamp(0)
  createdBy         String?          @db.VarChar(256)
  branch            branch           @relation(fields: [branchId], references: [id], onUpdate: Restrict, map: "fK_customer_favorite_branch_branch_branchId")
  regular_customer  regular_customer @relation(fields: [regularCustomerId], references: [id], onUpdate: Restrict, map: "fK_customer_favorite_branch_regular_customer_regularCustomerId")

  @@index([branchId], map: "iX_customer_favorite_branch_branchId")
  @@index([createdAt], map: "iX_customer_favorite_branch_createdAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model customer_group {
  id                                      Int                                       @id @default(autoincrement())
  agentId                                 Int
  name                                    String?                                   @db.VarChar(256)
  count                                   Int
  condition                               String?                                   @db.VarChar(2048)
  status                                  customer_group_status                     @default(Active)
  createdAt                               DateTime?                                 @default(now()) @db.Timestamp(0)
  createdBy                               String?                                   @db.VarChar(256)
  updatedAt                               DateTime?                                 @default(now()) @db.Timestamp(0)
  updatedBy                               String?                                   @db.VarChar(256)
  agent                                   agent                                     @relation(fields: [agentId], references: [id], onUpdate: Restrict, map: "fK_customer_group_agent_agentId")
  customer_group_customer                 customer_group_customer[]
  product_pricing_by_customer_group       product_pricing_by_customer_group[]
  product_pricing_by_customer_group_agent product_pricing_by_customer_group_agent[]
  promotion_customer_group                promotion_customer_group[]

  @@index([agentId], map: "iX_customer_group_agentId")
  @@index([createdAt], map: "iX_customer_group_createdAt")
  @@index([status], map: "iX_customer_group_status")
  @@index([updatedAt], map: "iX_customer_group_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model customer_group_customer {
  id                Int              @id @default(autoincrement())
  customerGroupId   Int
  createdAt         DateTime?        @default(now()) @db.Timestamp(0)
  createdBy         String?          @db.VarChar(256)
  updatedAt         DateTime?        @default(now()) @db.Timestamp(0)
  updatedBy         String?          @db.VarChar(256)
  regularCustomerId Int              @default(0)
  customer_group    customer_group   @relation(fields: [customerGroupId], references: [id], onUpdate: Restrict, map: "fK_customer_group_customer_customer_group_customerGroupId")
  regular_customer  regular_customer @relation(fields: [regularCustomerId], references: [id], onUpdate: Restrict, map: "fK_customer_group_customer_regular_customer_regularCustomerId")

  @@index([createdAt], map: "iX_customer_group_customer_createdAt")
  @@index([customerGroupId], map: "iX_customer_group_customer_customerGroupId")
  @@index([regularCustomerId], map: "iX_customer_group_customer_regularCustomerId")
  @@index([updatedAt], map: "iX_customer_group_customer_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model customer_img {
  id         Int       @id @default(autoincrement())
  customerId Int
  imagesId   Int
  createdAt  DateTime? @default(now()) @db.Timestamp(0)
  createdBy  String?   @db.VarChar(256)
  updatedAt  DateTime? @default(now()) @db.Timestamp(0)
  updatedBy  String?   @db.VarChar(256)
  customer   customer  @relation(fields: [customerId], references: [id], onUpdate: Restrict, map: "fK_customer_img_customer_customerId")
  document   document  @relation(fields: [imagesId], references: [id], onUpdate: Restrict, map: "fK_customer_img_documents_imagesId")

  @@index([createdAt], map: "iX_customer_img_createdAt")
  @@index([customerId], map: "iX_customer_img_customerId")
  @@index([imagesId], map: "iX_customer_img_imagesId")
  @@index([updatedAt], map: "iX_customer_img_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model customer_location_delivery_address {
  id                                 Int                                                @id @default(autoincrement())
  projectId                          Int?
  customerId                         Int
  name                               String?                                            @db.VarChar(128)
  phoneNo                            String?                                            @db.VarChar(10)
  locationName                       String?                                            @db.VarChar(256)
  address                            String?                                            @db.VarChar(256)
  countryId                          Int?
  provinceId                         Int?
  districtId                         Int?
  subDistrictId                      Int?
  zipCode                            Int
  deliveryDefault                    customer_location_delivery_address_deliveryDefault @default(Active)
  status                             customer_location_delivery_address_status          @default(Active)
  createdAt                          DateTime?                                          @default(now()) @db.Timestamp(0)
  createdBy                          String?                                            @db.VarChar(256)
  updatedAt                          DateTime?                                          @default(now()) @db.Timestamp(0)
  updatedBy                          String?                                            @db.VarChar(256)
  cisNumber                          String?                                            @db.VarChar(255)
  country                            country?                                           @relation(fields: [countryId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_location_delivery_address_countries_countryId")
  customer                           customer                                           @relation(fields: [customerId], references: [id], onUpdate: Restrict, map: "fK_customer_location_delivery_address_customer_customerId")
  district                           district?                                          @relation(fields: [districtId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_location_delivery_address_districts_districtId")
  project                            project?                                           @relation(fields: [projectId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_location_delivery_address_projects_projectId")
  province                           province?                                          @relation(fields: [provinceId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_location_delivery_address_provinces_provinceId")
  sub_district                       sub_district?                                      @relation(fields: [subDistrictId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_location_delivery_address_subDistricts_subDistrictId")
  customer_project_location_delivery customer_project_location_delivery[]

  @@index([countryId], map: "iX_customer_location_delivery_address_countryId")
  @@index([createdAt], map: "iX_customer_location_delivery_address_createdAt")
  @@index([customerId], map: "iX_customer_location_delivery_address_customerId")
  @@index([deliveryDefault], map: "iX_customer_location_delivery_address_deliveryDefault")
  @@index([districtId], map: "iX_customer_location_delivery_address_districtId")
  @@index([projectId], map: "iX_customer_location_delivery_address_projectId")
  @@index([provinceId], map: "iX_customer_location_delivery_address_provinceId")
  @@index([status], map: "iX_customer_location_delivery_address_status")
  @@index([subDistrictId], map: "iX_customer_location_delivery_address_subDistrictId")
  @@index([updatedAt], map: "iX_customer_location_delivery_address_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model customer_master {
  id                             Int                       @id @default(autoincrement())
  custId                         String?                   @db.VarChar(20)
  cusInvAccout                   String?                   @db.VarChar(20)
  customerGroupId                String?                   @db.VarChar(20)
  partyType                      customer_master_partyType @default(PERSONAL)
  organizationName               String?                   @db.VarChar(120)
  nameAlias                      String?                   @db.VarChar(120)
  taxExemptNumber                String?                   @db.VarChar(13)
  knowAs                         String?                   @db.VarChar(20)
  primaryContactEMailDescription String?                   @db.VarChar(60)
  primaryContactEMail            String?                   @db.VarChar(60)
  primaryContactFaxDescription   String?                   @db.VarChar(60)
  primaryContactFax              String?                   @db.VarChar(60)
  primaryContactPhoneDescription String?                   @db.VarChar(60)
  primaryContactPhone            String?                   @db.VarChar(60)
  employeeResponsibleNumber      String?                   @db.VarChar(100)
  saleTaxGroup                   String?                   @db.VarChar(5)
  saleCurrencyCode               String?                   @db.VarChar(5)
  companyChain                   String?                   @db.VarChar(20)
  paymentMethod                  String?                   @db.VarChar(10)
  paymentTerms                   String?                   @db.VarChar(10)
  finCostCenter                  String?                   @db.VarChar(20)
  finCustomerAccount             String?                   @db.VarChar(20)
  interCompany                   String?                   @db.VarChar(20)
  taxBranch                      String?                   @db.VarChar(20)
  credManGroupId                 String?                   @db.VarChar(10)
  totalCreditLimit               Decimal                   @db.Decimal(18, 2)
  customerCreditGroup            String?                   @db.VarChar(10)
  customerCreditGroupDes         String?                   @db.VarChar(60)
  customerCreditGroupCreditLimit String?                   @db.VarChar(20)
  createdAt                      DateTime?                 @default(now()) @db.Timestamp(0)
  createdBy                      String?                   @db.VarChar(256)
  updatedAt                      DateTime?                 @default(now()) @db.Timestamp(0)
  updatedBy                      String?                   @db.VarChar(256)
  haveUpdate                     Boolean?

  @@index([createdAt], map: "iX_customer_master_createdAt")
  @@index([partyType], map: "iX_customer_master_partyType")
  @@index([updatedAt], map: "iX_customer_master_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model customer_menu {
  menuId    Int                   @id @default(autoincrement())
  name      String?               @db.VarChar(255)
  codeMenu  Int?
  status    customer_menu_status? @default(Active)
  createdBy String?               @db.VarChar(255)
  createdAt DateTime?             @default(now()) @db.Timestamp(0)
  updatedBy String?               @db.VarChar(255)
  updatedAt DateTime?             @default(now()) @db.Timestamp(0)
}

model customer_occupation {
  id                 Int                       @id @default(autoincrement())
  customerId         Int?
  type               customer_occupation_type? @default(PERSONAL)
  occupationId       Int?
  createdAt          DateTime?                 @default(now()) @db.DateTime(0)
  createdBy          String?                   @db.VarChar(255)
  updatedAt          DateTime?                 @default(now()) @db.DateTime(0)
  updatedBy          String?                   @db.VarChar(255)
  customerOrganizeId Int?
  customer           customer?                 @relation(fields: [customerId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fkCustomerOccupationCustomerId")
  occupation         occupation?               @relation(fields: [occupationId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fkCustomerOccupationOccupationId")

  @@index([customerId], map: "fkCustomerOccupationCustomerId")
  @@index([occupationId], map: "fkCustomerOccupationOccupationId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model customer_organize {
  customerOrganizeId Int                       @id @default(autoincrement())
  accountAllkonsId   String?                   @db.VarChar(255)
  fullName           String?                   @db.VarChar(255)
  phone              String?                   @db.VarChar(255)
  organizeId         Int
  organizeRoleId     Int?
  organizeRole       String?                   @db.VarChar(255)
  organizeStatus     String?                   @db.VarChar(255)
  roleId             Int?
  owner              Int?                      @default(0)
  isProjectAll       Int?                      @default(0)
  status             customer_organize_status? @default(Active)
  accountFilePath    String?                   @db.Text
  createdBy          String?                   @db.VarChar(255)
  createdAt          DateTime?                 @default(now()) @db.Timestamp(0)
  updatedBy          String?                   @db.VarChar(255)
  updatedAt          DateTime?                 @default(now()) @db.Timestamp(0)

  @@index([accountAllkonsId], map: "idx_customer_organize_accountAllkonsId")
  @@index([customerOrganizeId], map: "idx_customer_organize_customerOrganizeId")
  @@index([fullName], map: "idx_customer_organize_fullName")
  @@index([organizeId], map: "idx_customer_organize_organizeId")
  @@index([organizeRole], map: "idx_customer_organize_organizeRole")
  @@index([organizeRoleId], map: "idx_customer_organize_organizeRoleId")
  @@index([phone], map: "idx_customer_organize_phone")
  @@index([roleId], map: "idx_customer_organize_roleId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model customer_organize_project {
  id                 Int                               @id @default(autoincrement())
  customerOrganizeId Int?
  projectId          Int?
  isUsed             customer_organize_project_isUsed?
  status             customer_organize_project_status? @default(Active)
  createdBy          String?                           @db.VarChar(255)
  createdAt          DateTime?                         @default(now()) @db.Timestamp(0)
  updatedBy          DateTime?                         @db.DateTime(0)
  updatedAt          DateTime?                         @default(now()) @db.Timestamp(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model customer_project_invoice {
  id                   Int                             @id @default(autoincrement())
  projectId            Int?
  customerTaxInvoiceId Int
  status               customer_project_invoice_status @default(Active)
  createdAt            DateTime?                       @default(now()) @db.Timestamp(0)
  createdBy            String?                         @db.VarChar(256)
  updatedAt            DateTime?                       @default(now()) @db.Timestamp(0)
  updatedBy            String?                         @db.VarChar(256)
  project              project?                        @relation(fields: [projectId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_project_invoice_projects_projectId")

  @@index([createdAt], map: "iX_customer_project_invoice_createdAt")
  @@index([projectId], map: "iX_customer_project_invoice_projectId")
  @@index([status], map: "iX_customer_project_invoice_status")
  @@index([updatedAt], map: "iX_customer_project_invoice_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model customer_project_location_delivery {
  id                                 Int                                       @id @default(autoincrement())
  projectId                          Int
  customerLocationId                 Int
  status                             customer_project_location_delivery_status @default(Active)
  createdAt                          DateTime?                                 @default(now()) @db.Timestamp(0)
  createdBy                          String?                                   @db.VarChar(256)
  updatedAt                          DateTime?                                 @default(now()) @db.Timestamp(0)
  updatedBy                          String?                                   @db.VarChar(256)
  customer_location_delivery_address customer_location_delivery_address        @relation(fields: [customerLocationId], references: [id], onUpdate: Restrict, map: "fK_customer_project_location_delivery_customer_location_deliver~")
  project                            project                                   @relation(fields: [projectId], references: [id], onUpdate: Restrict, map: "fK_customer_project_location_delivery_projects_projectId")

  @@index([createdAt], map: "iX_customer_project_location_delivery_createdAt")
  @@index([customerLocationId], map: "iX_customer_project_location_delivery_customerLocationId")
  @@index([projectId], map: "iX_customer_project_location_delivery_projectId")
  @@index([status], map: "iX_customer_project_location_delivery_status")
  @@index([updatedAt], map: "iX_customer_project_location_delivery_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model customer_request_notification {
  id                    Int                                  @id @default(autoincrement())
  boqId                 Int?
  quotationId           Int?
  isReaded              Boolean
  boqStatus             Int?
  qTStatus              Int?
  status                customer_request_notification_status @default(Active)
  createdAt             DateTime?                            @default(now()) @db.Timestamp(0)
  createdBy             String?                              @db.VarChar(256)
  updatedAt             DateTime?                            @default(now()) @db.Timestamp(0)
  updatedBy             String?                              @db.VarChar(256)
  branchId              Int?
  boq                   boq?                                 @relation(fields: [boqId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_request_notification_boq_boqId")
  branch                branch?                              @relation(fields: [branchId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_request_notification_branch_branchId")
  quotation             quotation?                           @relation(fields: [quotationId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_request_notification_quotation_quotationId")
  quotation_history_log quotation_history_log[]

  @@index([boqId], map: "iX_customer_request_notification_boqId")
  @@index([branchId], map: "iX_customer_request_notification_branchId")
  @@index([createdAt], map: "iX_customer_request_notification_createdAt")
  @@index([quotationId], map: "iX_customer_request_notification_quotationId")
  @@index([status], map: "iX_customer_request_notification_status")
  @@index([updatedAt], map: "iX_customer_request_notification_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model customer_tax_invoice_address {
  id                                                                                      Int                                            @id @default(autoincrement())
  customerId                                                                              Int
  projectId                                                                               Int?
  branch                                                                                  String?                                        @db.LongText
  companyTypeId                                                                           Int?
  taxInvoiceCompanyName                                                                   String?                                        @db.LongText
  taxInvoiceName                                                                          String?                                        @db.LongText
  taxInvoiceType                                                                          customer_tax_invoice_address_taxInvoiceType    @default(NotSpecified)
  taxInvoiceDefault                                                                       customer_tax_invoice_address_taxInvoiceDefault @default(Active)
  contactType                                                                             customer_tax_invoice_address_contactType       @default(PERSONAL)
  taxInvoiceZipCode                                                                       String?                                        @db.LongText
  taxInvoiceCustomer                                                                      String?                                        @db.LongText
  taxInvoicePhone                                                                         String?                                        @db.LongText
  taxInvoiceTaxId                                                                         String?                                        @db.LongText
  taxInvoiceAddress                                                                       String?                                        @db.LongText
  status                                                                                  customer_tax_invoice_address_status            @default(Active)
  taxInvoiceCountryId                                                                     Int?
  taxInvoiceProvinceId                                                                    Int?
  taxInvoiceDistrictId                                                                    Int?
  taxInvoiceSubDistrictId                                                                 Int?
  taxInvoiceDeliveryAddress                                                               String?                                        @db.LongText
  taxInvoiceDeliveryCountryId                                                             Int?
  taxInvoiceDeliveryProvinceId                                                            Int?
  taxInvoiceDeliveryDistrictId                                                            Int?
  taxInvoiceDeliverySubDistrictId                                                         Int?
  tbBranchId                                                                              Int?
  createdAt                                                                               DateTime?                                      @default(now()) @db.Timestamp(0)
  createdBy                                                                               String?                                        @db.VarChar(256)
  updatedAt                                                                               DateTime?                                      @default(now()) @db.Timestamp(0)
  updatedBy                                                                               String?                                        @db.VarChar(256)
  taxInvoiceBranchNumber                                                                  String?                                        @db.VarChar(256)
  taxInvoiceBranch                                                                        String?                                        @db.VarChar(256)
  kycAddress                                                                              Int?                                           @default(0)
  cisNumber                                                                               String?                                        @db.VarChar(255)
  branch_customer_tax                                                                     branch?                                        @relation(fields: [tbBranchId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_tax_invoice_address_branch_tbBranchId")
  company_type                                                                            company_type?                                  @relation(fields: [companyTypeId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_tax_invoice_address_companyTypes_companyTypeId")
  country_customer_tax_invoice_address_taxInvoiceCountryIdTocountry                       country?                                       @relation("customer_tax_invoice_address_taxInvoiceCountryIdTocountry", fields: [taxInvoiceCountryId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_tax_invoice_address_countries_taxInvoiceCountryId")
  country_customer_tax_invoice_address_taxInvoiceDeliveryCountryIdTocountry               country?                                       @relation("customer_tax_invoice_address_taxInvoiceDeliveryCountryIdTocountry", fields: [taxInvoiceDeliveryCountryId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_tax_invoice_address_countries_taxInvoiceDeliveryCou~")
  customer                                                                                customer                                       @relation(fields: [customerId], references: [id], onUpdate: Restrict, map: "fK_customer_tax_invoice_address_customer_customerId")
  district_customer_tax_invoice_address_taxInvoiceDeliveryDistrictIdTodistrict            district?                                      @relation("customer_tax_invoice_address_taxInvoiceDeliveryDistrictIdTodistrict", fields: [taxInvoiceDeliveryDistrictId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_tax_invoice_address_districts_taxInvoiceDeliveryDis~")
  district_customer_tax_invoice_address_taxInvoiceDistrictIdTodistrict                    district?                                      @relation("customer_tax_invoice_address_taxInvoiceDistrictIdTodistrict", fields: [taxInvoiceDistrictId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_tax_invoice_address_districts_taxInvoiceDistrictId")
  project                                                                                 project?                                       @relation(fields: [projectId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_tax_invoice_address_projects_projectId")
  province_customer_tax_invoice_address_taxInvoiceDeliveryProvinceIdToprovince            province?                                      @relation("customer_tax_invoice_address_taxInvoiceDeliveryProvinceIdToprovince", fields: [taxInvoiceDeliveryProvinceId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_tax_invoice_address_provinces_taxInvoiceDeliveryPro~")
  province_customer_tax_invoice_address_taxInvoiceProvinceIdToprovince                    province?                                      @relation("customer_tax_invoice_address_taxInvoiceProvinceIdToprovince", fields: [taxInvoiceProvinceId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_tax_invoice_address_provinces_taxInvoiceProvinceId")
  sub_district_customer_tax_invoice_address_taxInvoiceDeliverySubDistrictIdTosub_district sub_district?                                  @relation("customer_tax_invoice_address_taxInvoiceDeliverySubDistrictIdTosub_district", fields: [taxInvoiceDeliverySubDistrictId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_tax_invoice_address_subDistricts_taxInvoiceDelivery~")
  sub_district_customer_tax_invoice_address_taxInvoiceSubDistrictIdTosub_district         sub_district?                                  @relation("customer_tax_invoice_address_taxInvoiceSubDistrictIdTosub_district", fields: [taxInvoiceSubDistrictId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_customer_tax_invoice_address_subDistricts_taxInvoiceSubDistr~")

  @@index([companyTypeId], map: "iX_customer_tax_invoice_address_companyTypeId")
  @@index([contactType], map: "iX_customer_tax_invoice_address_contactType")
  @@index([createdAt], map: "iX_customer_tax_invoice_address_createdAt")
  @@index([customerId], map: "iX_customer_tax_invoice_address_customerId")
  @@index([projectId], map: "iX_customer_tax_invoice_address_projectId")
  @@index([status], map: "iX_customer_tax_invoice_address_status")
  @@index([taxInvoiceCountryId], map: "iX_customer_tax_invoice_address_taxInvoiceCountryId")
  @@index([taxInvoiceDefault], map: "iX_customer_tax_invoice_address_taxInvoiceDefault")
  @@index([taxInvoiceDeliveryCountryId], map: "iX_customer_tax_invoice_address_taxInvoiceDeliveryCountryId")
  @@index([taxInvoiceDeliveryDistrictId], map: "iX_customer_tax_invoice_address_taxInvoiceDeliveryDistrictId")
  @@index([taxInvoiceDeliveryProvinceId], map: "iX_customer_tax_invoice_address_taxInvoiceDeliveryProvinceId")
  @@index([taxInvoiceDeliverySubDistrictId], map: "iX_customer_tax_invoice_address_taxInvoiceDeliverySubDistrictId")
  @@index([taxInvoiceDistrictId], map: "iX_customer_tax_invoice_address_taxInvoiceDistrictId")
  @@index([taxInvoiceProvinceId], map: "iX_customer_tax_invoice_address_taxInvoiceProvinceId")
  @@index([taxInvoiceSubDistrictId], map: "iX_customer_tax_invoice_address_taxInvoiceSubDistrictId")
  @@index([taxInvoiceType], map: "iX_customer_tax_invoice_address_taxInvoiceType")
  @@index([tbBranchId], map: "iX_customer_tax_invoice_address_tbBranchId")
  @@index([updatedAt], map: "iX_customer_tax_invoice_address_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model d365branch_dimension {
  id              Int       @id @default(autoincrement())
  branchId        Int
  agentId         Int
  dimDepartment   String?   @db.VarChar(100)
  dimDivision     String?   @db.VarChar(100)
  dimSubdivision  String?   @db.VarChar(100)
  dimEmployeeArea String?   @db.VarChar(100)
  createdAt       DateTime? @default(now()) @db.Timestamp(0)
  createdBy       String?   @db.VarChar(256)
  updatedAt       DateTime? @default(now()) @db.Timestamp(0)
  updatedBy       String?   @db.VarChar(256)

  @@index([createdAt], map: "iX_d365branch_dimension_createdAt")
  @@index([updatedAt], map: "iX_d365branch_dimension_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model d365combo_set {
  d365ComboSetNumber String               @id @db.VarChar(128)
  status             d365combo_set_status @default(Active)
  createdAt          DateTime?            @default(now()) @db.Timestamp(0)
  createdBy          String?              @db.VarChar(256)
  updatedAt          DateTime?            @default(now()) @db.Timestamp(0)
  updatedBy          String?              @db.VarChar(256)
  promotion          promotion[]

  @@index([createdAt], map: "iX_d365combo_set_createdAt")
  @@index([status], map: "iX_d365combo_set_status")
  @@index([updatedAt], map: "iX_d365combo_set_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model d365country {
  countryCode String    @id @db.VarChar(255)
  countryName String?   @db.VarChar(200)
  createdAt   DateTime? @default(now()) @db.Timestamp(0)
  createdBy   String?   @db.VarChar(256)
  updatedAt   DateTime? @default(now()) @db.Timestamp(0)
  updatedBy   String?   @db.VarChar(256)

  @@index([createdAt], map: "iX_d365country_createdAt")
  @@index([updatedAt], map: "iX_d365country_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model d365customer_address_master {
  id                       Int       @id @default(autoincrement())
  custId                   String    @db.VarChar(100)
  addLocationRoles         String?   @db.VarChar(100)
  addCountryRegionId       String?   @db.LongText
  addDescription           String?   @db.VarChar(200)
  addressStreet            String?   @db.VarChar(200)
  addressCity              String?   @db.LongText
  addressCityDescription   String?   @db.VarChar(150)
  addressCounty            String?   @db.LongText
  addressCountyDescription String?   @db.VarChar(200)
  addressState             String?   @db.LongText
  addressStateDescription  String?   @db.VarChar(256)
  addressZipcode           String?   @db.VarChar(100)
  countryDescription       String?   @db.VarChar(200)
  stateDescription         String?   @db.VarChar(256)
  primary                  String?   @db.VarChar(256)
  latitude                 String?   @db.VarChar(256)
  longitude                String?   @db.VarChar(256)
  createdAt                DateTime? @default(now()) @db.Timestamp(0)
  createdBy                String?   @db.VarChar(256)
  updatedAt                DateTime? @default(now()) @db.Timestamp(0)
  updatedBy                String?   @db.VarChar(256)

  @@index([createdAt], map: "iX_d365customer_address_master_createdAt")
  @@index([updatedAt], map: "iX_d365customer_address_master_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model d365district {
  districtCode String    @id @db.VarChar(255)
  districtName String?   @db.VarChar(200)
  provinceCode String?   @db.LongText
  countryCode  String?   @db.LongText
  createdAt    DateTime? @default(now()) @db.Timestamp(0)
  createdBy    String?   @db.VarChar(256)
  updatedAt    DateTime? @default(now()) @db.Timestamp(0)
  updatedBy    String?   @db.VarChar(256)

  @@index([createdAt], map: "iX_d365district_createdAt")
  @@index([updatedAt], map: "iX_d365district_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model d365geography {
  geold     String    @id @db.VarChar(255)
  geoName   String?   @db.VarChar(100)
  createdAt DateTime? @default(now()) @db.Timestamp(0)
  createdBy String?   @db.VarChar(256)
  updatedAt DateTime? @default(now()) @db.Timestamp(0)
  updatedBy String?   @db.VarChar(256)

  @@index([createdAt], map: "iX_d365geography_createdAt")
  @@index([updatedAt], map: "iX_d365geography_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model d365item_master {
  id                       Int       @id @default(autoincrement())
  itemId                   String    @db.VarChar(100)
  itemDescription          String?   @db.VarChar(256)
  searchName               String?   @db.VarChar(256)
  producDim                String?   @db.VarChar(100)
  itemConfigID             String?   @db.VarChar(100)
  itemConfigName           String?   @db.VarChar(100)
  itemSizeID               String?   @db.VarChar(100)
  itemSizeName             String?   @db.VarChar(100)
  itemColorID              String?   @db.VarChar(100)
  itemColorName            String?   @db.VarChar(100)
  itemStyleID              String?   @db.VarChar(100)
  itemStyleName            String?   @db.VarChar(100)
  itemText                 String?   @db.VarChar(256)
  itemBarcode              String?   @db.VarChar(100)
  countUOMINV              String?   @db.VarChar(100)
  countUOMINVName          String?   @db.VarChar(100)
  countUOMSO               String?   @db.VarChar(100)
  countUOMSOName           String?   @db.VarChar(100)
  countUOMPO               String?   @db.VarChar(100)
  countUOMPOName           String?   @db.VarChar(100)
  countUOMBOM              String?   @db.VarChar(100)
  countUOMBOMName          String?   @db.VarChar(100)
  purchStopped             String?   @db.VarChar(100)
  inventStopped            String?   @db.VarChar(100)
  saleStopped              String?   @db.VarChar(100)
  madeToOrder              String?   @db.VarChar(100)
  productVariantSearchName String?   @db.VarChar(200)
  productVariantModel      String?   @db.VarChar(100)
  createdAt                DateTime? @default(now()) @db.Timestamp(0)
  createdBy                String?   @db.VarChar(256)
  updatedAt                DateTime? @default(now()) @db.Timestamp(0)
  updatedBy                String?   @db.VarChar(256)

  @@index([createdAt], map: "iX_d365item_master_createdAt")
  @@index([updatedAt], map: "iX_d365item_master_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model d365item_master_copy1 {
  id                       Int       @id @default(autoincrement())
  itemId                   String    @db.VarChar(100)
  itemDescription          String?   @db.VarChar(256)
  searchName               String?   @db.VarChar(256)
  producDim                String?   @db.VarChar(100)
  itemConfigID             String?   @db.VarChar(100)
  itemConfigName           String?   @db.VarChar(100)
  itemSizeID               String?   @db.VarChar(100)
  itemSizeName             String?   @db.VarChar(100)
  itemColorID              String?   @db.VarChar(100)
  itemColorName            String?   @db.VarChar(100)
  itemStyleID              String?   @db.VarChar(100)
  itemStyleName            String?   @db.VarChar(100)
  itemText                 String?   @db.VarChar(256)
  itemBarcode              String?   @db.VarChar(100)
  countUOMINV              String?   @db.VarChar(100)
  countUOMINVName          String?   @db.VarChar(100)
  countUOMSO               String?   @db.VarChar(100)
  countUOMSOName           String?   @db.VarChar(100)
  countUOMPO               String?   @db.VarChar(100)
  countUOMPOName           String?   @db.VarChar(100)
  countUOMBOM              String?   @db.VarChar(100)
  countUOMBOMName          String?   @db.VarChar(100)
  purchStopped             String?   @db.VarChar(100)
  inventStopped            String?   @db.VarChar(100)
  saleStopped              String?   @db.VarChar(100)
  madeToOrder              String?   @db.VarChar(100)
  productVariantSearchName String?   @db.VarChar(200)
  productVariantModel      String?   @db.VarChar(100)
  createdAt                DateTime? @default(now()) @db.Timestamp(0)
  createdBy                String?   @db.VarChar(256)
  updatedAt                DateTime? @default(now()) @db.Timestamp(0)
  updatedBy                String?   @db.VarChar(256)

  @@index([createdAt], map: "iX_d365item_master_createdAt")
  @@index([updatedAt], map: "iX_d365item_master_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model d365logistic_pickup {
  id                   Int       @id @default(autoincrement())
  transactionReference String?   @db.VarChar(100)
  vehicleRegister      String?   @db.VarChar(100)
  driverName           String?   @db.VarChar(100)
  driverPhone          String?   @db.VarChar(100)
  tripCode             String?   @db.VarChar(100)
  shipDate             DateTime? @db.Date
  shipmentNumber       String?   @db.VarChar(100)
  shipTime             String?   @db.VarChar(100)
  reference            String?   @db.VarChar(100)
  doNumber             String?   @db.VarChar(100)
  createdAt            DateTime? @default(now()) @db.Timestamp(0)
  createdBy            String?   @db.VarChar(256)
  updatedAt            DateTime? @default(now()) @db.Timestamp(0)
  updatedBy            String?   @db.VarChar(256)
  referenceNumber      String?   @db.VarChar(100)

  @@index([createdAt], map: "iX_d365logistic_pickup_createdAt")
  @@index([updatedAt], map: "iX_d365logistic_pickup_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model d365logistic_shipment {
  id               Int       @id @default(autoincrement())
  reference        String?   @db.VarChar(100)
  referenceNumber  String?   @db.VarChar(100)
  poReference      String?   @db.VarChar(100)
  shipmentNumber   String?   @db.VarChar(100)
  orderAccount     String?   @db.VarChar(100)
  orderAccountName String?   @db.VarChar(100)
  invoiceAccount   String?   @db.VarChar(100)
  itemNumber       String?   @db.VarChar(100)
  jsonData         String?   @db.LongText
  createdAt        DateTime? @default(now()) @db.Timestamp(0)
  createdBy        String?   @db.VarChar(256)
  updatedAt        DateTime? @default(now()) @db.Timestamp(0)
  updatedBy        String?   @db.VarChar(256)

  @@index([createdAt], map: "iX_d365logistic_shipment_createdAt")
  @@index([updatedAt], map: "iX_d365logistic_shipment_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model d365province {
  provinceCode String    @id @db.VarChar(255)
  provinceName String?   @db.VarChar(256)
  countryCode  String?   @db.LongText
  createdAt    DateTime? @default(now()) @db.Timestamp(0)
  createdBy    String?   @db.VarChar(256)
  updatedAt    DateTime? @default(now()) @db.Timestamp(0)
  updatedBy    String?   @db.VarChar(256)

  @@index([createdAt], map: "iX_d365province_createdAt")
  @@index([updatedAt], map: "iX_d365province_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model d365so_cancelled {
  id                 Int       @id @default(autoincrement())
  salesOrder         String?   @db.VarChar(100)
  orderAccount       String?   @db.VarChar(100)
  orderAccountName   String?   @db.VarChar(100)
  invoiceAccount     String?   @db.VarChar(100)
  invoiceAccountName String?   @db.VarChar(100)
  itemNumber         String?   @db.VarChar(100)
  salesCategories    String?   @db.VarChar(100)
  itemName           String?   @db.VarChar(200)
  text               String?   @db.VarChar(256)
  configId           String?   @db.VarChar(100)
  configName         String?   @db.VarChar(150)
  sizeId             String?   @db.VarChar(100)
  sizeName           String?   @db.VarChar(100)
  styleId            String?   @db.VarChar(100)
  styleName          String?   @db.VarChar(100)
  colorId            String?   @db.VarChar(100)
  colorName          String?   @db.VarChar(100)
  statusId           String?   @db.VarChar(100)
  statusName         String?   @db.VarChar(100)
  siteId             String?   @db.VarChar(100)
  warehouseId        String?   @db.VarChar(100)
  quantity           String?   @db.VarChar(100)
  unit               String?   @db.VarChar(100)
  netAmount          String?   @db.VarChar(100)
  status             String?   @db.VarChar(100)
  sOCancelRemark     String?   @db.VarChar(100)
  createdAt          DateTime? @default(now()) @db.Timestamp(0)
  createdBy          String?   @db.VarChar(256)
  updatedAt          DateTime? @default(now()) @db.Timestamp(0)
  updatedBy          String?   @db.VarChar(256)

  @@index([createdAt], map: "iX_d365so_cancelled_createdAt")
  @@index([updatedAt], map: "iX_d365so_cancelled_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model d365sub_district {
  subDistrictCode String    @id @db.VarChar(255)
  subDistrictName String?   @db.LongText
  districtCode    String?   @db.LongText
  provinceCode    String?   @db.LongText
  countryCode     String?   @db.LongText
  createdAt       DateTime? @default(now()) @db.Timestamp(0)
  createdBy       String?   @db.VarChar(256)
  updatedAt       DateTime? @default(now()) @db.Timestamp(0)
  updatedBy       String?   @db.VarChar(256)

  @@index([createdAt], map: "iX_d365sub_district_createdAt")
  @@index([updatedAt], map: "iX_d365sub_district_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model d365transaction_log {
  id           Int       @id @default(autoincrement())
  method       String?   @db.VarChar(100)
  header       String?   @db.LongText
  functionName String?   @db.LongText
  request      String?   @db.LongText
  response     String?   @db.LongText
  statusCode   Int?
  remark       String?   @db.LongText
  createdAt    DateTime? @default(now()) @db.Timestamp(0)
  createdBy    String?   @db.VarChar(256)
  updatedAt    DateTime? @default(now()) @db.Timestamp(0)
  updatedBy    String?   @db.VarChar(256)

  @@index([createdAt], map: "iX_d365transaction_log_createdAt")
  @@index([updatedAt], map: "iX_d365transaction_log_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model d365zip_codes {
  id              Int       @id @default(autoincrement())
  zipcode         String?   @db.LongText
  subDistrictCode String?   @db.LongText
  districtCode    String?   @db.LongText
  provinceCode    String?   @db.LongText
  countryCode     String?   @db.LongText
  createdAt       DateTime? @default(now()) @db.Timestamp(0)
  createdBy       String?   @db.VarChar(256)
  updatedAt       DateTime? @default(now()) @db.Timestamp(0)
  updatedBy       String?   @db.VarChar(256)

  @@index([createdAt], map: "iX_d365zip_codes_createdAt")
  @@index([updatedAt], map: "iX_d365zip_codes_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model delivery_order {
  id                        Int                                @id @default(autoincrement())
  saleOrderId               Int?
  subOrderId                Int?
  referenceNumber1          String?                            @db.LongText
  referenceNumber2          String?                            @db.LongText
  deliveryDate              DateTime?                          @db.DateTime(6)
  transportService          String?                            @db.LongText
  trackingNumber            String?                            @db.LongText
  deliveryType              delivery_order_deliveryType        @default(AgentService)
  deliveryNumber            String?                            @db.LongText
  deliveryOrderStatus       delivery_order_deliveryOrderStatus @default(PrepareForDelivery)
  isAgentConfirm            Boolean
  isCustomerConfirm         Boolean
  deliveryPrice             Decimal?                           @db.Decimal(18, 2)
  timePeriod                delivery_order_timePeriod          @default(NotSpecified)
  receiverName              String?                            @db.VarChar(128)
  receiverPhone             String?                            @db.VarChar(128)
  description               String?                            @db.VarChar(2048)
  address                   String?                            @db.LongText
  countryId                 Int?
  provinceId                Int?
  districtId                Int?
  subDistrictId             Int?
  zipCodeId                 Int?
  latitude                  Float?
  longitude                 Float?
  createdAt                 DateTime?                          @default(now()) @db.Timestamp(0)
  createdBy                 String?                            @db.VarChar(256)
  updatedAt                 DateTime?                          @default(now()) @db.Timestamp(0)
  updatedBy                 String?                            @db.VarChar(256)
  locationName              String?                            @db.VarChar(256)
  employeeCode              String?                            @db.VarChar(256)
  landNumber                String?                            @db.VarChar(256)
  credit_delivery_order     credit_delivery_order[]
  country                   country?                           @relation(fields: [countryId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_delivery_order_country_countryId")
  district                  district?                          @relation(fields: [districtId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_delivery_order_district_districtId")
  province                  province?                          @relation(fields: [provinceId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_delivery_order_province_provinceId")
  sale_order                sale_order?                        @relation(fields: [saleOrderId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_delivery_order_saleOrders_saleOrderId")
  sub_order                 sub_order?                         @relation(fields: [subOrderId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_delivery_order_subOrders_subOrderId")
  sub_district              sub_district?                      @relation(fields: [subDistrictId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_delivery_order_sub_district_subDistrictId")
  zip_code                  zip_code?                          @relation(fields: [zipCodeId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_delivery_order_zip_code_zipCodeId")
  delivery_order_document   delivery_order_document[]
  delivery_order_image      delivery_order_image[]
  delivery_order_item       delivery_order_item[]
  notification_status_order notification_status_order[]
  order_status_tracking     order_status_tracking[]

  @@index([countryId], map: "iX_delivery_order_countryId")
  @@index([createdAt], map: "iX_delivery_order_createdAt")
  @@index([deliveryOrderStatus], map: "iX_delivery_order_deliveryOrderStatus")
  @@index([deliveryType], map: "iX_delivery_order_deliveryType")
  @@index([districtId], map: "iX_delivery_order_districtId")
  @@index([provinceId], map: "iX_delivery_order_provinceId")
  @@index([saleOrderId], map: "iX_delivery_order_saleOrderId")
  @@index([subDistrictId], map: "iX_delivery_order_subDistrictId")
  @@index([subOrderId], map: "iX_delivery_order_subOrderId")
  @@index([timePeriod], map: "iX_delivery_order_timePeriod")
  @@index([updatedAt], map: "iX_delivery_order_updatedAt")
  @@index([zipCodeId], map: "iX_delivery_order_zipCodeId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model delivery_order_document {
  id              Int            @id @default(autoincrement())
  deliveryOrderId Int
  documentId      Int
  createdAt       DateTime?      @default(now()) @db.Timestamp(0)
  createdBy       String?        @db.VarChar(256)
  updatedAt       DateTime?      @default(now()) @db.Timestamp(0)
  updatedBy       String?        @db.VarChar(256)
  delivery_order  delivery_order @relation(fields: [deliveryOrderId], references: [id], onUpdate: Restrict, map: "fK_delivery_order_document_delivery_order_deliveryOrderId")
  document        document       @relation(fields: [documentId], references: [id], onUpdate: Restrict, map: "fK_delivery_order_document_documents_documentId")

  @@index([createdAt], map: "iX_delivery_order_document_createdAt")
  @@index([deliveryOrderId], map: "iX_delivery_order_document_deliveryOrderId")
  @@index([documentId], map: "iX_delivery_order_document_documentId")
  @@index([updatedAt], map: "iX_delivery_order_document_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model delivery_order_image {
  id              Int                               @id @default(autoincrement())
  deliveryOrderId Int
  imageId         Int
  orderImgType    delivery_order_image_orderImgType @default(PrepareForDelivery)
  createdAt       DateTime?                         @default(now()) @db.Timestamp(0)
  createdBy       String?                           @db.VarChar(256)
  updatedAt       DateTime?                         @default(now()) @db.Timestamp(0)
  updatedBy       String?                           @db.VarChar(256)
  delivery_order  delivery_order                    @relation(fields: [deliveryOrderId], references: [id], onUpdate: Restrict, map: "fK_delivery_order_image_delivery_order_deliveryOrderId")
  document        document                          @relation(fields: [imageId], references: [id], onUpdate: Restrict, map: "fK_delivery_order_image_documents_imageId")

  @@index([createdAt], map: "iX_delivery_order_image_createdAt")
  @@index([deliveryOrderId], map: "iX_delivery_order_image_deliveryOrderId")
  @@index([imageId], map: "iX_delivery_order_image_imageId")
  @@index([orderImgType], map: "iX_delivery_order_image_orderImgType")
  @@index([updatedAt], map: "iX_delivery_order_image_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model delivery_order_item {
  id                                                                                  Int                            @id @default(autoincrement())
  deliveryOrderId                                                                     Int
  productId                                                                           Int?
  promotionBranchId                                                                   Int?
  qty                                                                                 Int
  price                                                                               Decimal                        @db.Decimal(18, 2)
  createdAt                                                                           DateTime?                      @default(now()) @db.Timestamp(0)
  createdBy                                                                           String?                        @db.VarChar(256)
  updatedAt                                                                           DateTime?                      @default(now()) @db.Timestamp(0)
  updatedBy                                                                           String?                        @db.VarChar(256)
  volumePricePromotionBranchId                                                        Int?
  d365Status                                                                          delivery_order_item_d365Status @default(PrepareForDelivery)
  orderItemId                                                                         Int?
  branch_product                                                                      branch_product?                @relation(fields: [productId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_delivery_order_item_branch_product_productId")
  delivery_order                                                                      delivery_order                 @relation(fields: [deliveryOrderId], references: [id], onUpdate: Restrict, map: "fK_delivery_order_item_delivery_order_deliveryOrderId")
  order_item                                                                          order_item?                    @relation(fields: [orderItemId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_delivery_order_item_orderItems_orderItemId")
  promotion_branch_delivery_order_item_promotionBranchIdTopromotion_branch            promotion_branch?              @relation("delivery_order_item_promotionBranchIdTopromotion_branch", fields: [promotionBranchId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_delivery_order_item_promotionBranches_promotionBranchId")
  promotion_branch_delivery_order_item_volumePricePromotionBranchIdTopromotion_branch promotion_branch?              @relation("delivery_order_item_volumePricePromotionBranchIdTopromotion_branch", fields: [volumePricePromotionBranchId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_delivery_order_item_promotionBranches_volumePricePromotionBr~")
  order_product_detail_item                                                           order_product_detail_item[]

  @@index([createdAt], map: "iX_delivery_order_item_createdAt")
  @@index([d365Status], map: "iX_delivery_order_item_d365Status")
  @@index([deliveryOrderId], map: "iX_delivery_order_item_deliveryOrderId")
  @@index([orderItemId], map: "iX_delivery_order_item_orderItemId")
  @@index([productId], map: "iX_delivery_order_item_productId")
  @@index([promotionBranchId], map: "iX_delivery_order_item_promotionBranchId")
  @@index([updatedAt], map: "iX_delivery_order_item_updatedAt")
  @@index([volumePricePromotionBranchId], map: "iX_delivery_order_item_volumePricePromotionBranchId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model delivery_product_codition {
  id                       Int                                           @id @default(autoincrement())
  deliveryProductPricingId Int
  beginDeliveryKm          Int?
  endDeliveryKm            Int?
  deliveryPricingType      delivery_product_codition_deliveryPricingType @default(PricingKm)
  deliveryPrice            Int?
  createdAt                DateTime?                                     @default(now()) @db.Timestamp(0)
  createdBy                String?                                       @db.VarChar(256)
  updatedAt                DateTime?                                     @default(now()) @db.Timestamp(0)
  updatedBy                String?                                       @db.VarChar(256)
  delivery_product_pricing delivery_product_pricing                      @relation(fields: [deliveryProductPricingId], references: [id], onUpdate: Restrict, map: "fK_delivery_product_codition_deliveryProductPricings_deliveryPr~")

  @@index([createdAt], map: "iX_delivery_product_codition_createdAt")
  @@index([deliveryPricingType], map: "iX_delivery_product_codition_deliveryPricingType")
  @@index([deliveryProductPricingId], map: "iX_delivery_product_codition_deliveryProductPricingId")
  @@index([updatedAt], map: "iX_delivery_product_codition_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model delivery_product_pricing {
  id                        Int                         @id @default(autoincrement())
  agentId                   Int?
  branchId                  Int?
  createdAt                 DateTime?                   @default(now()) @db.Timestamp(0)
  createdBy                 String?                     @db.VarChar(256)
  updatedAt                 DateTime?                   @default(now()) @db.Timestamp(0)
  updatedBy                 String?                     @db.VarChar(256)
  agent_delivery_product    agent_delivery_product[]
  branch_delivery_product   branch_delivery_product[]
  delivery_product_codition delivery_product_codition[]
  agent                     agent?                      @relation(fields: [agentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_delivery_product_pricing_agent_agentId")
  branch                    branch?                     @relation(fields: [branchId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_delivery_product_pricing_branch_branchId")

  @@index([agentId], map: "iX_delivery_product_pricing_agentId")
  @@index([branchId], map: "iX_delivery_product_pricing_branchId")
  @@index([createdAt], map: "iX_delivery_product_pricing_createdAt")
  @@index([updatedAt], map: "iX_delivery_product_pricing_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model delivery_promotion_area {
  id                              Int                               @id @default(autoincrement())
  agentId                         Int?
  branchId                        Int?
  isEditAreable                   Boolean
  isHaveCondition                 Boolean
  minimumCost                     Int?
  createdAt                       DateTime?                         @default(now()) @db.Timestamp(0)
  createdBy                       String?                           @db.VarChar(256)
  updatedAt                       DateTime?                         @default(now()) @db.Timestamp(0)
  updatedBy                       String?                           @db.VarChar(256)
  isHaveConditionProduct          Boolean                           @default(false)
  agent                           agent?                            @relation(fields: [agentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_delivery_promotion_area_agent_agentId")
  branch                          branch?                           @relation(fields: [branchId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_delivery_promotion_area_branch_branchId")
  delivery_promotion_area_product delivery_promotion_area_product[]
  delivery_promotion_district     delivery_promotion_district[]
  delivery_promotion_province     delivery_promotion_province[]
  delivery_promotion_sub_district delivery_promotion_sub_district[]

  @@index([agentId], map: "iX_delivery_promotion_area_agentId")
  @@index([branchId], map: "iX_delivery_promotion_area_branchId")
  @@index([createdAt], map: "iX_delivery_promotion_area_createdAt")
  @@index([updatedAt], map: "iX_delivery_promotion_area_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model delivery_promotion_area_product {
  id                                     Int                                      @id @default(autoincrement())
  agentId                                Int?
  branchId                               Int?
  minimumCost                            Int
  tbDeliveryPromotionAreaId              Int?
  createdAt                              DateTime?                                @default(now()) @db.Timestamp(0)
  createdBy                              String?                                  @db.VarChar(256)
  updatedAt                              DateTime?                                @default(now()) @db.Timestamp(0)
  updatedBy                              String?                                  @db.VarChar(256)
  agent                                  agent?                                   @relation(fields: [agentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_delivery_promotion_area_product_agent_agentId")
  branch                                 branch?                                  @relation(fields: [branchId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_delivery_promotion_area_product_branch_branchId")
  delivery_promotion_area                delivery_promotion_area?                 @relation(fields: [tbDeliveryPromotionAreaId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_delivery_promotion_area_product_delivery_promotion_area_tbDe~")
  delivery_promotion_area_product_agent  delivery_promotion_area_product_agent[]
  delivery_promotion_area_product_branch delivery_promotion_area_product_branch[]

  @@index([agentId], map: "iX_delivery_promotion_area_product_agentId")
  @@index([branchId], map: "iX_delivery_promotion_area_product_branchId")
  @@index([createdAt], map: "iX_delivery_promotion_area_product_createdAt")
  @@index([tbDeliveryPromotionAreaId], map: "iX_delivery_promotion_area_product_tbDeliveryPromotionAreaId")
  @@index([updatedAt], map: "iX_delivery_promotion_area_product_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model delivery_promotion_area_product_agent {
  id                              Int                              @id @default(autoincrement())
  agentProductId                  Int
  deliveryPromotionAreaProductId  Int?
  createdAt                       DateTime?                        @default(now()) @db.Timestamp(0)
  createdBy                       String?                          @db.VarChar(256)
  updatedAt                       DateTime?                        @default(now()) @db.Timestamp(0)
  updatedBy                       String?                          @db.VarChar(256)
  agent_product                   agent_product                    @relation(fields: [agentProductId], references: [id], onUpdate: Restrict, map: "fK_delivery_promotion_area_product_agent_agent_product_agentPro~")
  delivery_promotion_area_product delivery_promotion_area_product? @relation(fields: [deliveryPromotionAreaProductId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_delivery_promotion_area_product_agent_delivery_promotion_are~")

  @@index([agentProductId], map: "iX_delivery_promotion_area_product_agent_agentProductId")
  @@index([createdAt], map: "iX_delivery_promotion_area_product_agent_createdAt")
  @@index([deliveryPromotionAreaProductId], map: "iX_delivery_promotion_area_product_agent_deliveryPromotionAreaP~")
  @@index([updatedAt], map: "iX_delivery_promotion_area_product_agent_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model delivery_promotion_area_product_branch {
  id                              Int                              @id @default(autoincrement())
  branchProductId                 Int?
  deliveryPromotionAreaProductId  Int?
  createdAt                       DateTime?                        @default(now()) @db.Timestamp(0)
  createdBy                       String?                          @db.VarChar(256)
  updatedAt                       DateTime?                        @default(now()) @db.Timestamp(0)
  updatedBy                       String?                          @db.VarChar(256)
  branch_product                  branch_product?                  @relation(fields: [branchProductId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_delivery_promotion_area_product_branch_branch_product_branch~")
  delivery_promotion_area_product delivery_promotion_area_product? @relation(fields: [deliveryPromotionAreaProductId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_delivery_promotion_area_product_branch_delivery_promotion_ar~")

  @@index([branchProductId], map: "iX_delivery_promotion_area_product_branch_branchProductId")
  @@index([createdAt], map: "iX_delivery_promotion_area_product_branch_createdAt")
  @@index([deliveryPromotionAreaProductId], map: "iX_delivery_promotion_area_product_branch_deliveryPromotionArea~")
  @@index([updatedAt], map: "iX_delivery_promotion_area_product_branch_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model delivery_promotion_district {
  id                      Int                     @id @default(autoincrement())
  districtId              Int
  deliveryPromotionAreaId Int
  createdAt               DateTime?               @default(now()) @db.Timestamp(0)
  createdBy               String?                 @db.VarChar(256)
  updatedAt               DateTime?               @default(now()) @db.Timestamp(0)
  updatedBy               String?                 @db.VarChar(256)
  delivery_promotion_area delivery_promotion_area @relation(fields: [deliveryPromotionAreaId], references: [id], onUpdate: Restrict, map: "fK_delivery_promotion_district_delivery_promotion_area_delivery~")
  district                district                @relation(fields: [districtId], references: [id], onUpdate: Restrict, map: "fK_delivery_promotion_district_districts_districtId")

  @@index([createdAt], map: "iX_delivery_promotion_district_createdAt")
  @@index([deliveryPromotionAreaId], map: "iX_delivery_promotion_district_deliveryPromotionAreaId")
  @@index([districtId], map: "iX_delivery_promotion_district_districtId")
  @@index([updatedAt], map: "iX_delivery_promotion_district_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model delivery_promotion_product {
  id                                   Int                                    @id @default(autoincrement())
  agentId                              Int?
  branchId                             Int?
  createdAt                            DateTime?                              @default(now()) @db.Timestamp(0)
  createdBy                            String?                                @db.VarChar(256)
  updatedAt                            DateTime?                              @default(now()) @db.Timestamp(0)
  updatedBy                            String?                                @db.VarChar(256)
  agent_delivery_promotion_product     agent_delivery_promotion_product[]
  branch_delivery_promotion_product    branch_delivery_promotion_product[]
  agent                                agent?                                 @relation(fields: [agentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_delivery_promotion_product_agent_agentId")
  branch                               branch?                                @relation(fields: [branchId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_delivery_promotion_product_branch_branchId")
  delivery_promotion_product_condition delivery_promotion_product_condition[]

  @@index([agentId], map: "iX_delivery_promotion_product_agentId")
  @@index([branchId], map: "iX_delivery_promotion_product_branchId")
  @@index([createdAt], map: "iX_delivery_promotion_product_createdAt")
  @@index([updatedAt], map: "iX_delivery_promotion_product_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model delivery_promotion_product_condition {
  id                         Int                         @id @default(autoincrement())
  deliveryPromotionProductId Int?
  minimumCost                Int
  freeDeliveryKm             Int
  createdAt                  DateTime?                   @default(now()) @db.Timestamp(0)
  createdBy                  String?                     @db.VarChar(256)
  updatedAt                  DateTime?                   @default(now()) @db.Timestamp(0)
  updatedBy                  String?                     @db.VarChar(256)
  delivery_promotion_product delivery_promotion_product? @relation(fields: [deliveryPromotionProductId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_delivery_promotion_product_condition_delivery_promotion_prod~")

  @@index([createdAt], map: "iX_delivery_promotion_product_condition_createdAt")
  @@index([deliveryPromotionProductId], map: "iX_delivery_promotion_product_condition_deliveryPromotionProduc~")
  @@index([updatedAt], map: "iX_delivery_promotion_product_condition_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model delivery_promotion_province {
  id                      Int                     @id @default(autoincrement())
  provinceId              Int
  deliveryPromotionAreaId Int
  createdAt               DateTime?               @default(now()) @db.Timestamp(0)
  createdBy               String?                 @db.VarChar(256)
  updatedAt               DateTime?               @default(now()) @db.Timestamp(0)
  updatedBy               String?                 @db.VarChar(256)
  delivery_promotion_area delivery_promotion_area @relation(fields: [deliveryPromotionAreaId], references: [id], onUpdate: Restrict, map: "fK_delivery_promotion_province_delivery_promotion_area_delivery~")
  province                province                @relation(fields: [provinceId], references: [id], onUpdate: Restrict, map: "fK_delivery_promotion_province_provinces_provinceId")

  @@index([createdAt], map: "iX_delivery_promotion_province_createdAt")
  @@index([deliveryPromotionAreaId], map: "iX_delivery_promotion_province_deliveryPromotionAreaId")
  @@index([provinceId], map: "iX_delivery_promotion_province_provinceId")
  @@index([updatedAt], map: "iX_delivery_promotion_province_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model delivery_promotion_sub_district {
  id                      Int                     @id @default(autoincrement())
  subDistrictId           Int
  deliveryPromotionAreaId Int
  createdAt               DateTime?               @default(now()) @db.Timestamp(0)
  createdBy               String?                 @db.VarChar(256)
  updatedAt               DateTime?               @default(now()) @db.Timestamp(0)
  updatedBy               String?                 @db.VarChar(256)
  delivery_promotion_area delivery_promotion_area @relation(fields: [deliveryPromotionAreaId], references: [id], onUpdate: Restrict, map: "fK_delivery_promotion_sub_district_delivery_promotion_area_deli~")
  sub_district            sub_district            @relation(fields: [subDistrictId], references: [id], onUpdate: Restrict, map: "fK_delivery_promotion_sub_district_subDistricts_subDistrictId")

  @@index([createdAt], map: "iX_delivery_promotion_sub_district_createdAt")
  @@index([deliveryPromotionAreaId], map: "iX_delivery_promotion_sub_district_deliveryPromotionAreaId")
  @@index([subDistrictId], map: "iX_delivery_promotion_sub_district_subDistrictId")
  @@index([updatedAt], map: "iX_delivery_promotion_sub_district_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model district {
  id                                                                                               Int                                  @id @default(autoincrement())
  code                                                                                             Int
  name                                                                                             String?                              @db.VarChar(256)
  provinceId                                                                                       Int
  createdAt                                                                                        DateTime?                            @default(now()) @db.Timestamp(0)
  createdBy                                                                                        String?                              @db.VarChar(256)
  agent                                                                                            agent[]
  branch                                                                                           branch[]
  branch_district                                                                                  branch_district[]
  credit_customer                                                                                  credit_customer[]
  customer_address                                                                                 customer_address[]
  customer_data                                                                                    customer_data[]
  customer_delivery_address                                                                        customer_delivery_address[]
  customer_location_delivery_address                                                               customer_location_delivery_address[]
  customer_tax_invoice_address_customer_tax_invoice_address_taxInvoiceDeliveryDistrictIdTodistrict customer_tax_invoice_address[]       @relation("customer_tax_invoice_address_taxInvoiceDeliveryDistrictIdTodistrict")
  customer_tax_invoice_address_customer_tax_invoice_address_taxInvoiceDistrictIdTodistrict         customer_tax_invoice_address[]       @relation("customer_tax_invoice_address_taxInvoiceDistrictIdTodistrict")
  delivery_order                                                                                   delivery_order[]
  delivery_promotion_district                                                                      delivery_promotion_district[]
  province                                                                                         province                             @relation(fields: [provinceId], references: [id], onUpdate: Restrict, map: "fK_district_provinces_provinceId")
  order                                                                                            order[]
  project                                                                                          project[]
  quotation_delivery                                                                               quotation_delivery[]
  sub_boq_sub_boq_districtIdTodistrict                                                             sub_boq[]                            @relation("sub_boq_districtIdTodistrict")
  sub_boq_sub_boq_taxInvoiceDeliveryDistrictIdTodistrict                                           sub_boq[]                            @relation("sub_boq_taxInvoiceDeliveryDistrictIdTodistrict")
  sub_boq_sub_boq_taxInvoiceDistrictIdTodistrict                                                   sub_boq[]                            @relation("sub_boq_taxInvoiceDistrictIdTodistrict")
  sub_district                                                                                     sub_district[]
  sub_order_sub_order_districtIdTodistrict                                                         sub_order[]                          @relation("sub_order_districtIdTodistrict")
  sub_order_sub_order_taxInvoiceDeliveryDistrictIdTodistrict                                       sub_order[]                          @relation("sub_order_taxInvoiceDeliveryDistrictIdTodistrict")
  sub_order_sub_order_taxInvoiceDistrictIdTodistrict                                               sub_order[]                          @relation("sub_order_taxInvoiceDistrictIdTodistrict")
  sub_quotation                                                                                    sub_quotation[]
  tax_invoice_tax_invoice_taxInvoiceDeliveryDistrictIdTodistrict                                   tax_invoice[]                        @relation("tax_invoice_taxInvoiceDeliveryDistrictIdTodistrict")
  tax_invoice_tax_invoice_taxInvoiceDistrictIdTodistrict                                           tax_invoice[]                        @relation("tax_invoice_taxInvoiceDistrictIdTodistrict")
  tax_invoice_and_delivery_tax_invoice_and_delivery_taxInvoiceDeliveryDistrictIdTodistrict         tax_invoice_and_delivery[]           @relation("tax_invoice_and_delivery_taxInvoiceDeliveryDistrictIdTodistrict")
  tax_invoice_and_delivery_tax_invoice_and_delivery_taxInvoiceDistrictIdTodistrict                 tax_invoice_and_delivery[]           @relation("tax_invoice_and_delivery_taxInvoiceDistrictIdTodistrict")
  warehouse                                                                                        warehouse[]
  zip_code                                                                                         zip_code[]

  @@index([createdAt], map: "iX_district_createdAt")
  @@index([provinceId], map: "iX_district_provinceId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model document {
  id                                                           Int                           @id @default(autoincrement())
  fileSize                                                     Int
  fileName                                                     String?                       @db.VarChar(1024)
  filePath                                                     String?                       @db.VarChar(1024)
  fileExtension                                                String?                       @db.VarChar(64)
  status                                                       document_status               @default(Active)
  reference1                                                   String?                       @db.VarChar(64)
  reference2                                                   String?                       @db.VarChar(64)
  createdAt                                                    DateTime?                     @default(now()) @db.Timestamp(0)
  createdBy                                                    String?                       @db.VarChar(256)
  updatedAt                                                    DateTime?                     @default(now()) @db.Timestamp(0)
  updatedBy                                                    String?                       @db.VarChar(256)
  cisNumber                                                    String?                       @db.VarChar(256)
  cisContactId                                                 String?                       @db.VarChar(256)
  agent_agent_corporateOwnerDocumentChangeIdTodocument         agent[]                       @relation("agent_corporateOwnerDocumentChangeIdTodocument")
  agent_agent_corporateOwnerDocumentIdTodocument               agent[]                       @relation("agent_corporateOwnerDocumentIdTodocument")
  agent_bank_account                                           agent_bank_account[]
  agent_img                                                    agent_img[]
  agent_kyc_document                                           agent_kyc_document[]
  agent_profile_contact_img                                    agent_profile_contact_img[]
  agent_q_rcode                                                agent_q_rcode[]
  agent_user                                                   agent_user[]
  agent_user_contact                                           agent_user_contact[]
  boq_document                                                 boq_document[]
  branch                                                       branch[]
  brand                                                        brand[]
  category                                                     category[]
  chat_history                                                 chat_history[]
  credit_customer_document                                     credit_customer_document[]
  credit_document_file                                         credit_document_file[]
  credit_notification                                          credit_notification[]
  credit_pay_image                                             credit_pay_image[]
  customer_customer_authorizeDocumentIdTodocument              customer[]                    @relation("customer_authorizeDocumentIdTodocument")
  customer_customer_authorizePersonDocumentIdTodocument        customer[]                    @relation("customer_authorizePersonDocumentIdTodocument")
  customer_customer_bookBankDocumentIdTodocument               customer[]                    @relation("customer_bookBankDocumentIdTodocument")
  customer_customer_corporateIdentityDocumentIdTodocument      customer[]                    @relation("customer_corporateIdentityDocumentIdTodocument")
  customer_customer_corporateImageDocumentIdTodocument         customer[]                    @relation("customer_corporateImageDocumentIdTodocument")
  customer_customer_corporateOwnerIdentityDocumentIdTodocument customer[]                    @relation("customer_corporateOwnerIdentityDocumentIdTodocument")
  customer_customer_financialDocumentIdTodocument              customer[]                    @relation("customer_financialDocumentIdTodocument")
  customer_customer_houseRegisterDocumentIdTodocument          customer[]                    @relation("customer_houseRegisterDocumentIdTodocument")
  customer_customer_otherDocumentIdTodocument                  customer[]                    @relation("customer_otherDocumentIdTodocument")
  customer_customer_personalIdentityDocumentIdTodocument       customer[]                    @relation("customer_personalIdentityDocumentIdTodocument")
  customer_customer_taxDocumentIdTodocument                    customer[]                    @relation("customer_taxDocumentIdTodocument")
  customer_customer_trademarkDocumentIdTodocument              customer[]                    @relation("customer_trademarkDocumentIdTodocument")
  customer_data_document                                       customer_data_document[]
  customer_img                                                 customer_img[]
  delivery_order_document                                      delivery_order_document[]
  delivery_order_image                                         delivery_order_image[]
  job_document                                                 job_document[]
  matching_import_file                                         matching_import_file[]
  order_document                                               order_document[]
  order_payment                                                order_payment[]
  order_payment_img                                            order_payment_img[]
  product_image                                                product_image[]
  product_variant_document                                     product_variant_document[]
  product_variant_image                                        product_variant_image[]
  promotion_document                                           promotion_document[]
  promotion_image                                              promotion_image[]
  quotation                                                    quotation[]
  quotation_document                                           quotation_document[]
  rating_review_image                                          rating_review_image[]
  sub_order_document                                           sub_order_document[]
  suggestion_product_document                                  suggestion_product_document[]
  tax_invoice_document                                         tax_invoice_document[]

  @@index([createdAt], map: "iX_document_createdAt")
  @@index([status], map: "iX_document_status")
  @@index([updatedAt], map: "iX_document_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model feature_flag {
  id        Int                @id @default(autoincrement())
  topic     feature_flag_topic @default(CIS)
  isEnable  Boolean
  createdAt DateTime?          @default(now()) @db.Timestamp(0)
  createdBy String?            @db.VarChar(256)
  updatedAt DateTime?          @default(now()) @db.Timestamp(0)
  updatedBy String?            @db.VarChar(256)

  @@index([createdAt], map: "iX_feature_flag_createdAt")
  @@index([topic], map: "iX_feature_flag_topic")
  @@index([updatedAt], map: "iX_feature_flag_updatedAt")
}

model hangfireagentaggregatedcounter {
  Id       Int       @id @default(autoincrement())
  Key      String    @unique(map: "IX_hangfireagentCounterAggregated_Key") @db.VarChar(100)
  Value    Int
  ExpireAt DateTime? @db.DateTime(0)
}

model hangfireagentcounter {
  Id       Int       @id @default(autoincrement())
  Key      String    @db.VarChar(100)
  Value    Int
  ExpireAt DateTime? @db.DateTime(0)

  @@index([Key], map: "IX_hangfireagentCounter_Key")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model hangfireagentdistributedlock {
  Resource  String   @db.VarChar(100)
  CreatedAt DateTime @db.DateTime(6)

  @@ignore
}

model hangfireagenthash {
  Id       Int       @id @default(autoincrement())
  Key      String    @db.VarChar(100)
  Field    String    @db.VarChar(40)
  Value    String?   @db.LongText
  ExpireAt DateTime? @db.DateTime(6)

  @@unique([Key, Field], map: "IX_hangfireagentHash_Key_Field")
}

model hangfireagentjob {
  Id                        Int                         @id @default(autoincrement())
  StateId                   Int?
  StateName                 String?                     @db.VarChar(20)
  InvocationData            String                      @db.LongText
  Arguments                 String                      @db.LongText
  CreatedAt                 DateTime                    @db.DateTime(6)
  ExpireAt                  DateTime?                   @db.DateTime(6)
  hangfireagentjobparameter hangfireagentjobparameter[]
  hangfireagentjobstate     hangfireagentjobstate[]
  hangfireagentstate        hangfireagentstate[]

  @@index([StateName], map: "IX_hangfireagentJob_StateName")
}

model hangfireagentjobparameter {
  Id               Int              @id @default(autoincrement())
  JobId            Int
  Name             String           @db.VarChar(40)
  Value            String?          @db.LongText
  hangfireagentjob hangfireagentjob @relation(fields: [JobId], references: [Id], onDelete: Cascade, map: "FK_hangfireagentJobParameter_Job")

  @@unique([JobId, Name], map: "IX_hangfireagentJobParameter_JobId_Name")
  @@index([JobId], map: "FK_hangfireagentJobParameter_Job")
}

model hangfireagentjobqueue {
  Id         Int       @id @default(autoincrement())
  JobId      Int
  FetchedAt  DateTime? @db.DateTime(6)
  Queue      String    @db.VarChar(50)
  FetchToken String?   @db.VarChar(36)

  @@index([Queue, FetchedAt], map: "IX_hangfireagentJobQueue_QueueAndFetchedAt")
}

model hangfireagentjobstate {
  Id               Int              @id @default(autoincrement())
  JobId            Int
  CreatedAt        DateTime         @db.DateTime(6)
  Name             String           @db.VarChar(20)
  Reason           String?          @db.VarChar(100)
  Data             String?          @db.LongText
  hangfireagentjob hangfireagentjob @relation(fields: [JobId], references: [Id], onDelete: Cascade, map: "FK_hangfireagentJobState_Job")

  @@index([JobId], map: "FK_hangfireagentJobState_Job")
}

model hangfireagentlist {
  Id       Int       @id @default(autoincrement())
  Key      String    @db.VarChar(100)
  Value    String?   @db.LongText
  ExpireAt DateTime? @db.DateTime(6)
}

model hangfireagentserver {
  Id            String    @id @db.VarChar(100)
  Data          String    @db.LongText
  LastHeartbeat DateTime? @db.DateTime(6)
}

model hangfireagentset {
  Id       Int       @id @default(autoincrement())
  Key      String    @db.VarChar(100)
  Value    String    @db.VarChar(256)
  Score    Float     @db.Float
  ExpireAt DateTime? @db.DateTime(0)

  @@unique([Key, Value], map: "IX_hangfireagentSet_Key_Value")
}

model hangfireagentstate {
  Id               Int              @id @default(autoincrement())
  JobId            Int
  Name             String           @db.VarChar(20)
  Reason           String?          @db.VarChar(100)
  CreatedAt        DateTime         @db.DateTime(6)
  Data             String?          @db.LongText
  hangfireagentjob hangfireagentjob @relation(fields: [JobId], references: [Id], onDelete: Cascade, map: "FK_hangfireagentHangFire_State_Job")

  @@index([JobId], map: "FK_hangfireagentHangFire_State_Job")
}

model hangfireaggregatedcounter {
  Id       Int       @id @default(autoincrement())
  Key      String    @unique(map: "IX_HangfireCounterAggregated_Key") @db.VarChar(100)
  Value    Int
  ExpireAt DateTime? @db.DateTime(0)
}

model hangfirecatalogaggregatedcounter {
  Id       Int       @id @default(autoincrement())
  Key      String    @unique(map: "IX_hangfirecatalogCounterAggregated_Key") @db.VarChar(100)
  Value    Int
  ExpireAt DateTime? @db.DateTime(0)
}

model hangfirecatalogcounter {
  Id       Int       @id @default(autoincrement())
  Key      String    @db.VarChar(100)
  Value    Int
  ExpireAt DateTime? @db.DateTime(0)

  @@index([Key], map: "IX_hangfirecatalogCounter_Key")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model hangfirecatalogdistributedlock {
  Resource  String   @db.VarChar(100)
  CreatedAt DateTime @db.DateTime(6)

  @@ignore
}

model hangfirecataloghash {
  Id       Int       @id @default(autoincrement())
  Key      String    @db.VarChar(100)
  Field    String    @db.VarChar(40)
  Value    String?   @db.LongText
  ExpireAt DateTime? @db.DateTime(6)

  @@unique([Key, Field], map: "IX_hangfirecatalogHash_Key_Field")
}

model hangfirecatalogjob {
  Id                          Int                           @id @default(autoincrement())
  StateId                     Int?
  StateName                   String?                       @db.VarChar(20)
  InvocationData              String                        @db.LongText
  Arguments                   String                        @db.LongText
  CreatedAt                   DateTime                      @db.DateTime(6)
  ExpireAt                    DateTime?                     @db.DateTime(6)
  hangfirecatalogjobparameter hangfirecatalogjobparameter[]
  hangfirecatalogjobstate     hangfirecatalogjobstate[]
  hangfirecatalogstate        hangfirecatalogstate[]

  @@index([StateName], map: "IX_hangfirecatalogJob_StateName")
}

model hangfirecatalogjobparameter {
  Id                 Int                @id @default(autoincrement())
  JobId              Int
  Name               String             @db.VarChar(40)
  Value              String?            @db.LongText
  hangfirecatalogjob hangfirecatalogjob @relation(fields: [JobId], references: [Id], onDelete: Cascade, map: "FK_hangfirecatalogJobParameter_Job")

  @@unique([JobId, Name], map: "IX_hangfirecatalogJobParameter_JobId_Name")
  @@index([JobId], map: "FK_hangfirecatalogJobParameter_Job")
}

model hangfirecatalogjobqueue {
  Id         Int       @id @default(autoincrement())
  JobId      Int
  FetchedAt  DateTime? @db.DateTime(6)
  Queue      String    @db.VarChar(50)
  FetchToken String?   @db.VarChar(36)

  @@index([Queue, FetchedAt], map: "IX_hangfirecatalogJobQueue_QueueAndFetchedAt")
}

model hangfirecatalogjobstate {
  Id                 Int                @id @default(autoincrement())
  JobId              Int
  CreatedAt          DateTime           @db.DateTime(6)
  Name               String             @db.VarChar(20)
  Reason             String?            @db.VarChar(100)
  Data               String?            @db.LongText
  hangfirecatalogjob hangfirecatalogjob @relation(fields: [JobId], references: [Id], onDelete: Cascade, map: "FK_hangfirecatalogJobState_Job")

  @@index([JobId], map: "FK_hangfirecatalogJobState_Job")
}

model hangfirecataloglist {
  Id       Int       @id @default(autoincrement())
  Key      String    @db.VarChar(100)
  Value    String?   @db.LongText
  ExpireAt DateTime? @db.DateTime(6)
}

model hangfirecatalogserver {
  Id            String    @id @db.VarChar(100)
  Data          String    @db.LongText
  LastHeartbeat DateTime? @db.DateTime(6)
}

model hangfirecatalogset {
  Id       Int       @id @default(autoincrement())
  Key      String    @db.VarChar(100)
  Value    String    @db.VarChar(256)
  Score    Float     @db.Float
  ExpireAt DateTime? @db.DateTime(0)

  @@unique([Key, Value], map: "IX_hangfirecatalogSet_Key_Value")
}

model hangfirecatalogstate {
  Id                 Int                @id @default(autoincrement())
  JobId              Int
  Name               String             @db.VarChar(20)
  Reason             String?            @db.VarChar(100)
  CreatedAt          DateTime           @db.DateTime(6)
  Data               String?            @db.LongText
  hangfirecatalogjob hangfirecatalogjob @relation(fields: [JobId], references: [Id], onDelete: Cascade, map: "FK_hangfirecatalogHangFire_State_Job")

  @@index([JobId], map: "FK_hangfirecatalogHangFire_State_Job")
}

model hangfirecounter {
  Id       Int       @id @default(autoincrement())
  Key      String    @db.VarChar(100)
  Value    Int
  ExpireAt DateTime? @db.DateTime(0)

  @@index([Key], map: "IX_HangfireCounter_Key")
}

model hangfirecreditaggregatedcounter {
  Id       Int       @id @default(autoincrement())
  Key      String    @unique(map: "IX_hangfirecreditCounterAggregated_Key") @db.VarChar(100)
  Value    Int
  ExpireAt DateTime? @db.DateTime(0)
}

model hangfirecreditcounter {
  Id       Int       @id @default(autoincrement())
  Key      String    @db.VarChar(100)
  Value    Int
  ExpireAt DateTime? @db.DateTime(0)

  @@index([Key], map: "IX_hangfirecreditCounter_Key")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model hangfirecreditdistributedlock {
  Resource  String   @db.VarChar(100)
  CreatedAt DateTime @db.DateTime(6)

  @@ignore
}

model hangfirecredithash {
  Id       Int       @id @default(autoincrement())
  Key      String    @db.VarChar(100)
  Field    String    @db.VarChar(40)
  Value    String?   @db.LongText
  ExpireAt DateTime? @db.DateTime(6)

  @@unique([Key, Field], map: "IX_hangfirecreditHash_Key_Field")
}

model hangfirecreditjob {
  Id                         Int                          @id @default(autoincrement())
  StateId                    Int?
  StateName                  String?                      @db.VarChar(20)
  InvocationData             String                       @db.LongText
  Arguments                  String                       @db.LongText
  CreatedAt                  DateTime                     @db.DateTime(6)
  ExpireAt                   DateTime?                    @db.DateTime(6)
  hangfirecreditjobparameter hangfirecreditjobparameter[]
  hangfirecreditjobstate     hangfirecreditjobstate[]
  hangfirecreditstate        hangfirecreditstate[]

  @@index([StateName], map: "IX_hangfirecreditJob_StateName")
}

model hangfirecreditjobparameter {
  Id                Int               @id @default(autoincrement())
  JobId             Int
  Name              String            @db.VarChar(40)
  Value             String?           @db.LongText
  hangfirecreditjob hangfirecreditjob @relation(fields: [JobId], references: [Id], onDelete: Cascade, map: "FK_hangfirecreditJobParameter_Job")

  @@unique([JobId, Name], map: "IX_hangfirecreditJobParameter_JobId_Name")
  @@index([JobId], map: "FK_hangfirecreditJobParameter_Job")
}

model hangfirecreditjobqueue {
  Id         Int       @id @default(autoincrement())
  JobId      Int
  FetchedAt  DateTime? @db.DateTime(6)
  Queue      String    @db.VarChar(50)
  FetchToken String?   @db.VarChar(36)

  @@index([Queue, FetchedAt], map: "IX_hangfirecreditJobQueue_QueueAndFetchedAt")
}

model hangfirecreditjobstate {
  Id                Int               @id @default(autoincrement())
  JobId             Int
  CreatedAt         DateTime          @db.DateTime(6)
  Name              String            @db.VarChar(20)
  Reason            String?           @db.VarChar(100)
  Data              String?           @db.LongText
  hangfirecreditjob hangfirecreditjob @relation(fields: [JobId], references: [Id], onDelete: Cascade, map: "FK_hangfirecreditJobState_Job")

  @@index([JobId], map: "FK_hangfirecreditJobState_Job")
}

model hangfirecreditlist {
  Id       Int       @id @default(autoincrement())
  Key      String    @db.VarChar(100)
  Value    String?   @db.LongText
  ExpireAt DateTime? @db.DateTime(6)
}

model hangfirecreditserver {
  Id            String    @id @db.VarChar(100)
  Data          String    @db.LongText
  LastHeartbeat DateTime? @db.DateTime(6)
}

model hangfirecreditset {
  Id       Int       @id @default(autoincrement())
  Key      String    @db.VarChar(100)
  Value    String    @db.VarChar(256)
  Score    Float     @db.Float
  ExpireAt DateTime? @db.DateTime(0)

  @@unique([Key, Value], map: "IX_hangfirecreditSet_Key_Value")
}

model hangfirecreditstate {
  Id                Int               @id @default(autoincrement())
  JobId             Int
  Name              String            @db.VarChar(20)
  Reason            String?           @db.VarChar(100)
  CreatedAt         DateTime          @db.DateTime(6)
  Data              String?           @db.LongText
  hangfirecreditjob hangfirecreditjob @relation(fields: [JobId], references: [Id], onDelete: Cascade, map: "FK_hangfirecreditHangFire_State_Job")

  @@index([JobId], map: "FK_hangfirecreditHangFire_State_Job")
}

model hangfirecustomeraggregatedcounter {
  Id       Int       @id @default(autoincrement())
  Key      String    @unique(map: "IX_hangfirecustomerCounterAggregated_Key") @db.VarChar(100)
  Value    Int
  ExpireAt DateTime? @db.DateTime(0)
}

model hangfirecustomercounter {
  Id       Int       @id @default(autoincrement())
  Key      String    @db.VarChar(100)
  Value    Int
  ExpireAt DateTime? @db.DateTime(0)

  @@index([Key], map: "IX_hangfirecustomerCounter_Key")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model hangfirecustomerdistributedlock {
  Resource  String   @db.VarChar(100)
  CreatedAt DateTime @db.DateTime(6)

  @@ignore
}

model hangfirecustomerhash {
  Id       Int       @id @default(autoincrement())
  Key      String    @db.VarChar(100)
  Field    String    @db.VarChar(40)
  Value    String?   @db.LongText
  ExpireAt DateTime? @db.DateTime(6)

  @@unique([Key, Field], map: "IX_hangfirecustomerHash_Key_Field")
}

model hangfirecustomerjob {
  Id                           Int                            @id @default(autoincrement())
  StateId                      Int?
  StateName                    String?                        @db.VarChar(20)
  InvocationData               String                         @db.LongText
  Arguments                    String                         @db.LongText
  CreatedAt                    DateTime                       @db.DateTime(6)
  ExpireAt                     DateTime?                      @db.DateTime(6)
  hangfirecustomerjobparameter hangfirecustomerjobparameter[]
  hangfirecustomerjobstate     hangfirecustomerjobstate[]
  hangfirecustomerstate        hangfirecustomerstate[]

  @@index([StateName], map: "IX_hangfirecustomerJob_StateName")
}

model hangfirecustomerjobparameter {
  Id                  Int                 @id @default(autoincrement())
  JobId               Int
  Name                String              @db.VarChar(40)
  Value               String?             @db.LongText
  hangfirecustomerjob hangfirecustomerjob @relation(fields: [JobId], references: [Id], onDelete: Cascade, map: "FK_hangfirecustomerJobParameter_Job")

  @@unique([JobId, Name], map: "IX_hangfirecustomerJobParameter_JobId_Name")
  @@index([JobId], map: "FK_hangfirecustomerJobParameter_Job")
}

model hangfirecustomerjobqueue {
  Id         Int       @id @default(autoincrement())
  JobId      Int
  FetchedAt  DateTime? @db.DateTime(6)
  Queue      String    @db.VarChar(50)
  FetchToken String?   @db.VarChar(36)

  @@index([Queue, FetchedAt], map: "IX_hangfirecustomerJobQueue_QueueAndFetchedAt")
}

model hangfirecustomerjobstate {
  Id                  Int                 @id @default(autoincrement())
  JobId               Int
  CreatedAt           DateTime            @db.DateTime(6)
  Name                String              @db.VarChar(20)
  Reason              String?             @db.VarChar(100)
  Data                String?             @db.LongText
  hangfirecustomerjob hangfirecustomerjob @relation(fields: [JobId], references: [Id], onDelete: Cascade, map: "FK_hangfirecustomerJobState_Job")

  @@index([JobId], map: "FK_hangfirecustomerJobState_Job")
}

model hangfirecustomerlist {
  Id       Int       @id @default(autoincrement())
  Key      String    @db.VarChar(100)
  Value    String?   @db.LongText
  ExpireAt DateTime? @db.DateTime(6)
}

model hangfirecustomerserver {
  Id            String    @id @db.VarChar(100)
  Data          String    @db.LongText
  LastHeartbeat DateTime? @db.DateTime(6)
}

model hangfirecustomerset {
  Id       Int       @id @default(autoincrement())
  Key      String    @db.VarChar(100)
  Value    String    @db.VarChar(256)
  Score    Float     @db.Float
  ExpireAt DateTime? @db.DateTime(0)

  @@unique([Key, Value], map: "IX_hangfirecustomerSet_Key_Value")
}

model hangfirecustomerstate {
  Id                  Int                 @id @default(autoincrement())
  JobId               Int
  Name                String              @db.VarChar(20)
  Reason              String?             @db.VarChar(100)
  CreatedAt           DateTime            @db.DateTime(6)
  Data                String?             @db.LongText
  hangfirecustomerjob hangfirecustomerjob @relation(fields: [JobId], references: [Id], onDelete: Cascade, map: "FK_hangfirecustomerHangFire_State_Job")

  @@index([JobId], map: "FK_hangfirecustomerHangFire_State_Job")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model hangfiredistributedlock {
  Resource  String   @db.VarChar(100)
  CreatedAt DateTime @db.DateTime(6)

  @@ignore
}

model hangfirehash {
  Id       Int       @id @default(autoincrement())
  Key      String    @db.VarChar(100)
  Field    String    @db.VarChar(40)
  Value    String?   @db.LongText
  ExpireAt DateTime? @db.DateTime(6)

  @@unique([Key, Field], map: "IX_HangfireHash_Key_Field")
}

model hangfirejob {
  Id                   Int                    @id @default(autoincrement())
  StateId              Int?
  StateName            String?                @db.VarChar(20)
  InvocationData       String                 @db.LongText
  Arguments            String                 @db.LongText
  CreatedAt            DateTime               @db.DateTime(6)
  ExpireAt             DateTime?              @db.DateTime(6)
  hangfirejobparameter hangfirejobparameter[]
  hangfirejobstate     hangfirejobstate[]
  hangfirestate        hangfirestate[]

  @@index([StateName], map: "IX_HangfireJob_StateName")
}

model hangfirejobparameter {
  Id          Int         @id @default(autoincrement())
  JobId       Int
  Name        String      @db.VarChar(40)
  Value       String?     @db.LongText
  hangfirejob hangfirejob @relation(fields: [JobId], references: [Id], onDelete: Cascade, map: "FK_HangfireJobParameter_Job")

  @@unique([JobId, Name], map: "IX_HangfireJobParameter_JobId_Name")
  @@index([JobId], map: "FK_HangfireJobParameter_Job")
}

model hangfirejobqueue {
  Id         Int       @id @default(autoincrement())
  JobId      Int
  FetchedAt  DateTime? @db.DateTime(6)
  Queue      String    @db.VarChar(50)
  FetchToken String?   @db.VarChar(36)

  @@index([Queue, FetchedAt], map: "IX_HangfireJobQueue_QueueAndFetchedAt")
}

model hangfirejobstate {
  Id          Int         @id @default(autoincrement())
  JobId       Int
  CreatedAt   DateTime    @db.DateTime(6)
  Name        String      @db.VarChar(20)
  Reason      String?     @db.VarChar(100)
  Data        String?     @db.LongText
  hangfirejob hangfirejob @relation(fields: [JobId], references: [Id], onDelete: Cascade, map: "FK_HangfireJobState_Job")

  @@index([JobId], map: "FK_HangfireJobState_Job")
}

model hangfirelist {
  Id       Int       @id @default(autoincrement())
  Key      String    @db.VarChar(100)
  Value    String?   @db.LongText
  ExpireAt DateTime? @db.DateTime(6)
}

model hangfireorderaggregatedcounter {
  Id       Int       @id @default(autoincrement())
  Key      String    @unique(map: "IX_hangfireorderCounterAggregated_Key") @db.VarChar(100)
  Value    Int
  ExpireAt DateTime? @db.DateTime(0)
}

model hangfireordercounter {
  Id       Int       @id @default(autoincrement())
  Key      String    @db.VarChar(100)
  Value    Int
  ExpireAt DateTime? @db.DateTime(0)

  @@index([Key], map: "IX_hangfireorderCounter_Key")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model hangfireorderdistributedlock {
  Resource  String   @db.VarChar(100)
  CreatedAt DateTime @db.DateTime(6)

  @@ignore
}

model hangfireorderhash {
  Id       Int       @id @default(autoincrement())
  Key      String    @db.VarChar(100)
  Field    String    @db.VarChar(40)
  Value    String?   @db.LongText
  ExpireAt DateTime? @db.DateTime(6)

  @@unique([Key, Field], map: "IX_hangfireorderHash_Key_Field")
}

model hangfireorderjob {
  Id                        Int                         @id @default(autoincrement())
  StateId                   Int?
  StateName                 String?                     @db.VarChar(20)
  InvocationData            String                      @db.LongText
  Arguments                 String                      @db.LongText
  CreatedAt                 DateTime                    @db.DateTime(6)
  ExpireAt                  DateTime?                   @db.DateTime(6)
  hangfireorderjobparameter hangfireorderjobparameter[]
  hangfireorderjobstate     hangfireorderjobstate[]
  hangfireorderstate        hangfireorderstate[]

  @@index([StateName], map: "IX_hangfireorderJob_StateName")
}

model hangfireorderjobparameter {
  Id               Int              @id @default(autoincrement())
  JobId            Int
  Name             String           @db.VarChar(40)
  Value            String?          @db.LongText
  hangfireorderjob hangfireorderjob @relation(fields: [JobId], references: [Id], onDelete: Cascade, map: "FK_hangfireorderJobParameter_Job")

  @@unique([JobId, Name], map: "IX_hangfireorderJobParameter_JobId_Name")
  @@index([JobId], map: "FK_hangfireorderJobParameter_Job")
}

model hangfireorderjobqueue {
  Id         Int       @id @default(autoincrement())
  JobId      Int
  FetchedAt  DateTime? @db.DateTime(6)
  Queue      String    @db.VarChar(50)
  FetchToken String?   @db.VarChar(36)

  @@index([Queue, FetchedAt], map: "IX_hangfireorderJobQueue_QueueAndFetchedAt")
}

model hangfireorderjobstate {
  Id               Int              @id @default(autoincrement())
  JobId            Int
  CreatedAt        DateTime         @db.DateTime(6)
  Name             String           @db.VarChar(20)
  Reason           String?          @db.VarChar(100)
  Data             String?          @db.LongText
  hangfireorderjob hangfireorderjob @relation(fields: [JobId], references: [Id], onDelete: Cascade, map: "FK_hangfireorderJobState_Job")

  @@index([JobId], map: "FK_hangfireorderJobState_Job")
}

model hangfireorderlist {
  Id       Int       @id @default(autoincrement())
  Key      String    @db.VarChar(100)
  Value    String?   @db.LongText
  ExpireAt DateTime? @db.DateTime(6)
}

model hangfireorderserver {
  Id            String    @id @db.VarChar(100)
  Data          String    @db.LongText
  LastHeartbeat DateTime? @db.DateTime(6)
}

model hangfireorderset {
  Id       Int       @id @default(autoincrement())
  Key      String    @db.VarChar(100)
  Value    String    @db.VarChar(256)
  Score    Float     @db.Float
  ExpireAt DateTime? @db.DateTime(0)

  @@unique([Key, Value], map: "IX_hangfireorderSet_Key_Value")
}

model hangfireorderstate {
  Id               Int              @id @default(autoincrement())
  JobId            Int
  Name             String           @db.VarChar(20)
  Reason           String?          @db.VarChar(100)
  CreatedAt        DateTime         @db.DateTime(6)
  Data             String?          @db.LongText
  hangfireorderjob hangfireorderjob @relation(fields: [JobId], references: [Id], onDelete: Cascade, map: "FK_hangfireorderHangFire_State_Job")

  @@index([JobId], map: "FK_hangfireorderHangFire_State_Job")
}

model hangfirepromotionaggregatedcounter {
  Id       Int       @id @default(autoincrement())
  Key      String    @unique(map: "IX_hangfirepromotionCounterAggregated_Key") @db.VarChar(100)
  Value    Int
  ExpireAt DateTime? @db.DateTime(0)
}

model hangfirepromotioncounter {
  Id       Int       @id @default(autoincrement())
  Key      String    @db.VarChar(100)
  Value    Int
  ExpireAt DateTime? @db.DateTime(0)

  @@index([Key], map: "IX_hangfirepromotionCounter_Key")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model hangfirepromotiondistributedlock {
  Resource  String   @db.VarChar(100)
  CreatedAt DateTime @db.DateTime(6)

  @@ignore
}

model hangfirepromotionhash {
  Id       Int       @id @default(autoincrement())
  Key      String    @db.VarChar(100)
  Field    String    @db.VarChar(40)
  Value    String?   @db.LongText
  ExpireAt DateTime? @db.DateTime(6)

  @@unique([Key, Field], map: "IX_hangfirepromotionHash_Key_Field")
}

model hangfirepromotionjob {
  Id                            Int                             @id @default(autoincrement())
  StateId                       Int?
  StateName                     String?                         @db.VarChar(20)
  InvocationData                String                          @db.LongText
  Arguments                     String                          @db.LongText
  CreatedAt                     DateTime                        @db.DateTime(6)
  ExpireAt                      DateTime?                       @db.DateTime(6)
  hangfirepromotionjobparameter hangfirepromotionjobparameter[]
  hangfirepromotionjobstate     hangfirepromotionjobstate[]
  hangfirepromotionstate        hangfirepromotionstate[]

  @@index([StateName], map: "IX_hangfirepromotionJob_StateName")
}

model hangfirepromotionjobparameter {
  Id                   Int                  @id @default(autoincrement())
  JobId                Int
  Name                 String               @db.VarChar(40)
  Value                String?              @db.LongText
  hangfirepromotionjob hangfirepromotionjob @relation(fields: [JobId], references: [Id], onDelete: Cascade, map: "FK_hangfirepromotionJobParameter_Job")

  @@unique([JobId, Name], map: "IX_hangfirepromotionJobParameter_JobId_Name")
  @@index([JobId], map: "FK_hangfirepromotionJobParameter_Job")
}

model hangfirepromotionjobqueue {
  Id         Int       @id @default(autoincrement())
  JobId      Int
  FetchedAt  DateTime? @db.DateTime(6)
  Queue      String    @db.VarChar(50)
  FetchToken String?   @db.VarChar(36)

  @@index([Queue, FetchedAt], map: "IX_hangfirepromotionJobQueue_QueueAndFetchedAt")
}

model hangfirepromotionjobstate {
  Id                   Int                  @id @default(autoincrement())
  JobId                Int
  CreatedAt            DateTime             @db.DateTime(6)
  Name                 String               @db.VarChar(20)
  Reason               String?              @db.VarChar(100)
  Data                 String?              @db.LongText
  hangfirepromotionjob hangfirepromotionjob @relation(fields: [JobId], references: [Id], onDelete: Cascade, map: "FK_hangfirepromotionJobState_Job")

  @@index([JobId], map: "FK_hangfirepromotionJobState_Job")
}

model hangfirepromotionlist {
  Id       Int       @id @default(autoincrement())
  Key      String    @db.VarChar(100)
  Value    String?   @db.LongText
  ExpireAt DateTime? @db.DateTime(6)
}

model hangfirepromotionserver {
  Id            String    @id @db.VarChar(100)
  Data          String    @db.LongText
  LastHeartbeat DateTime? @db.DateTime(6)
}

model hangfirepromotionset {
  Id       Int       @id @default(autoincrement())
  Key      String    @db.VarChar(100)
  Value    String    @db.VarChar(256)
  Score    Float     @db.Float
  ExpireAt DateTime? @db.DateTime(0)

  @@unique([Key, Value], map: "IX_hangfirepromotionSet_Key_Value")
}

model hangfirepromotionstate {
  Id                   Int                  @id @default(autoincrement())
  JobId                Int
  Name                 String               @db.VarChar(20)
  Reason               String?              @db.VarChar(100)
  CreatedAt            DateTime             @db.DateTime(6)
  Data                 String?              @db.LongText
  hangfirepromotionjob hangfirepromotionjob @relation(fields: [JobId], references: [Id], onDelete: Cascade, map: "FK_hangfirepromotionHangFire_State_Job")

  @@index([JobId], map: "FK_hangfirepromotionHangFire_State_Job")
}

model hangfireserver {
  Id            String    @id @db.VarChar(100)
  Data          String    @db.LongText
  LastHeartbeat DateTime? @db.DateTime(6)
}

model hangfireset {
  Id       Int       @id @default(autoincrement())
  Key      String    @db.VarChar(100)
  Value    String    @db.VarChar(256)
  Score    Float     @db.Float
  ExpireAt DateTime? @db.DateTime(0)

  @@unique([Key, Value], map: "IX_HangfireSet_Key_Value")
}

model hangfirestate {
  Id          Int         @id @default(autoincrement())
  JobId       Int
  Name        String      @db.VarChar(20)
  Reason      String?     @db.VarChar(100)
  CreatedAt   DateTime    @db.DateTime(6)
  Data        String?     @db.LongText
  hangfirejob hangfirejob @relation(fields: [JobId], references: [Id], onDelete: Cascade, map: "FK_HangfireHangFire_State_Job")

  @@index([JobId], map: "FK_HangfireHangFire_State_Job")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model job_document {
  id            Int                        @id @default(autoincrement())
  jobResultId   Int
  documentId    Int?
  description   String?                    @db.LongText
  jobStatusType job_document_jobStatusType @default(Processing)
  createdAt     DateTime?                  @default(now()) @db.Timestamp(0)
  createdBy     String?                    @db.VarChar(256)
  updatedAt     DateTime?                  @default(now()) @db.Timestamp(0)
  updatedBy     String?                    @db.VarChar(256)
  document      document?                  @relation(fields: [documentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_job_document_document_documentId")
  job_result    job_result                 @relation(fields: [jobResultId], references: [id], onUpdate: Restrict, map: "fK_job_document_jobResults_jobResultId")

  @@index([createdAt], map: "iX_job_document_createdAt")
  @@index([documentId], map: "iX_job_document_documentId")
  @@index([jobResultId], map: "iX_job_document_jobResultId")
  @@index([jobStatusType], map: "iX_job_document_jobStatusType")
  @@index([updatedAt], map: "iX_job_document_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model job_monitor_log {
  id        Int                       @id @default(autoincrement())
  apiSystem job_monitor_log_apiSystem @default(CIS)
  header    String?                   @db.LongText
  request   String?                   @db.LongText
  response  String?                   @db.LongText
  status    String?                   @db.LongText
  createdAt DateTime?                 @default(now()) @db.Timestamp(0)
  createdBy String?                   @db.VarChar(256)
  updatedAt DateTime?                 @default(now()) @db.Timestamp(0)
  updatedBy String?                   @db.VarChar(256)

  @@index([apiSystem], map: "iX_job_monitor_log_apiSystem")
  @@index([createdAt], map: "iX_job_monitor_log_createdAt")
  @@index([updatedAt], map: "iX_job_monitor_log_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model job_result {
  id               Int                 @id @default(autoincrement())
  agentId          Int
  allkonsAccountId Int
  jobTopic         job_result_jobTopic @default(AgentProductExport)
  createdAt        DateTime?           @default(now()) @db.Timestamp(0)
  createdBy        String?             @db.VarChar(256)
  updatedAt        DateTime?           @default(now()) @db.Timestamp(0)
  updatedBy        String?             @db.VarChar(256)
  job_document     job_document[]
  agent            agent               @relation(fields: [agentId], references: [id], onUpdate: Restrict, map: "fK_job_result_agent_agentId")

  @@index([agentId], map: "iX_job_result_agentId")
  @@index([createdAt], map: "iX_job_result_createdAt")
  @@index([jobTopic], map: "iX_job_result_jobTopic")
  @@index([updatedAt], map: "iX_job_result_updatedAt")
}

model keyword_management {
  id        Int       @id @default(autoincrement())
  keyword   String?   @db.VarChar(255)
  updatedBy String?   @db.VarChar(255)
  updatedAt DateTime? @default(now()) @db.Timestamp(0)
  createdBy String?   @db.VarChar(255)
  createdAt DateTime? @default(now()) @db.Timestamp(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model log_activity_boq {
  id         Int                     @id @default(autoincrement())
  customerId Int
  type       log_activity_boq_type   @default(PERSONAL)
  projectId  Int?
  boqId      Int
  payload    String?                 @db.Text
  action     log_activity_boq_action @default(Create)
  createdAt  DateTime                @db.Timestamp(0)
  createdBy  String                  @db.VarChar(256)
  updatedAt  DateTime?               @db.Timestamp(0)
  updatedBy  String?                 @db.VarChar(256)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model log_activity_cart {
  id                Int                      @id @default(autoincrement())
  customerId        Int
  type              log_activity_cart_type   @default(PERSONAL)
  cartId            Int
  productId         Int?
  promotionId       Int?
  productVariantId  Int?
  promotionBranchId Int?
  price             Decimal?                 @db.Decimal(18, 2)
  qty               Int
  action            log_activity_cart_action @default(Create)
  payload           String?                  @db.Text
  createdAt         DateTime                 @default(now()) @db.Timestamp(0)
  createdBy         String                   @db.VarChar(256)
  updatedAt         DateTime?                @db.Timestamp(0)
  updatedBy         String?                  @db.VarChar(256)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model log_activity_credit {
  id            Int                            @id @default(autoincrement())
  customerId    Int
  type          log_activity_credit_type       @default(PERSONAL)
  creditOrderId Int
  creditType    log_activity_credit_creditType @default(Permanent)
  createdAt     DateTime                       @default(now()) @db.Timestamp(0)
  createdBy     String                         @db.VarChar(256)
  updatedAt     DateTime?                      @db.Timestamp(0)
  updatedBy     String?                        @db.VarChar(256)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model log_activity_favorite_agent {
  id         Int                                @id @default(autoincrement())
  customerId Int
  type       log_activity_favorite_agent_type   @default(PERSONAL)
  projectId  Int
  agentId    Int
  branchId   Int
  action     log_activity_favorite_agent_action @default(Add)
  createdAt  DateTime                           @default(now()) @db.Timestamp(0)
  createdBy  String                             @db.VarChar(256)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model log_activity_login {
  id         Int                     @id @default(autoincrement())
  customerId Int
  type       log_activity_login_type @default(PERSONAL)
  device     String                  @db.VarChar(256)
  ip         String                  @db.VarChar(256)
  latitude   Float?
  longitude  Float?
  createdAt  DateTime                @default(now()) @db.Timestamp(0)
  createdBy  String                  @db.VarChar(256)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model log_activity_menu {
  id         Int                    @id @default(autoincrement())
  menuId     Int
  agentId    Int?
  branchId   Int?
  customerId Int
  type       log_activity_menu_type @default(PERSONAL)
  count      Int                    @default(1)
  createdAt  DateTime               @default(now()) @db.Timestamp(0)
  createdBy  String                 @db.VarChar(256)
  updatedAt  DateTime?              @db.Timestamp(0)
  updatedBy  String?                @db.VarChar(256)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model log_activity_order {
  id                Int                     @id @default(autoincrement())
  customerId        Int
  type              log_activity_order_type @default(PERSONAL)
  orderId           Int
  projectId         Int
  agentId           Int
  branchId          Int
  cartId            Int?
  totalProductPrice Decimal                 @db.Decimal(18, 2)
  payload           String                  @db.Text
  latitude          Float?
  longitude         Float?
  createdAt         DateTime                @default(now()) @db.Timestamp(0)
  createdBy         String                  @db.VarChar(256)
  updatedAt         DateTime?               @db.Timestamp(0)
  updatedBy         String?                 @db.VarChar(256)
  quotationId       Int?
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model log_activity_payment {
  id             Int                              @id @default(autoincrement())
  customerId     Int
  type           log_activity_payment_type        @default(PERSONAL)
  orderPaymentId Int
  paymentType    log_activity_payment_paymentType @default(BankAccount)
  payload        String?                          @db.Text
  createdAt      DateTime                         @db.Timestamp(0)
  createdBy      String                           @db.VarChar(256)
  updatedAt      DateTime?                        @db.Timestamp(0)
  updatedBy      String?                          @db.VarChar(256)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model log_activity_product_view {
  id               Int                             @id @default(autoincrement())
  customerId       Int
  type             log_activity_product_view_type  @default(PERSONAL)
  productId        Int
  productVariantId Int
  createdAt        DateTime                        @default(now()) @db.Timestamp(0)
  createdBy        String                          @db.VarChar(256)
  updatedAt        DateTime?                       @db.Timestamp(0)
  updatedBy        String?                         @db.VarChar(256)
  keyword          String?                         @db.Text
  from             log_activity_product_view_from? @default(VIEW)

  @@index([from], map: "from")
  @@index([productVariantId], map: "product_variant")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model log_activity_search {
  id         Int                      @id @default(autoincrement())
  customerId Int
  type       log_activity_search_type @default(PERSONAL)
  keyword    String                   @db.VarChar(256)
  createdAt  DateTime                 @default(now()) @db.Timestamp(0)
  createdBy  String                   @db.VarChar(256)
  updatedAt  DateTime?                @db.Timestamp(0)
  updatedBy  String?                  @db.VarChar(256)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model log_api_mac5 {
  id            Int       @id @default(autoincrement())
  billingNumber String?   @db.LongText
  errorMsg      String?   @db.LongText
  createdAt     DateTime? @default(now()) @db.Timestamp(0)
  createdBy     String?   @db.VarChar(256)
  updatedAt     DateTime? @default(now()) @db.Timestamp(0)
  updatedBy     String?   @db.VarChar(256)
  status        Int       @default(0)

  @@index([createdAt], map: "iX_log_api_mac5_createdAt")
  @@index([updatedAt], map: "iX_log_api_mac5_updatedAt")
}

model log_bank_transaction {
  id                       Int       @id @default(autoincrement())
  orderPaymentId           Int?
  channelCode              String?   @db.VarChar(255)
  functionName             String?   @db.VarChar(255)
  senderBankCode           String?   @db.VarChar(255)
  transactionId            String?   @db.VarChar(255)
  transactionDateTime      String?   @db.VarChar(255)
  billerId                 String?   @db.VarChar(255)
  billerType               String?   @db.VarChar(255)
  terminalNo               String?   @db.VarChar(255)
  tranAmount               String?   @db.VarChar(255)
  reference1               String?   @db.VarChar(255)
  reference2               String?   @db.VarChar(255)
  reference3               String?   @db.VarChar(255)
  isRetry                  String?   @db.VarChar(255)
  promptPayReferenceNumber String?   @db.VarChar(255)
  createdAt                DateTime? @db.DateTime(0)
  createdBy                String?   @db.VarChar(255)
  updatedBy                String?   @db.VarChar(255)
  updatedAt                DateTime? @db.DateTime(0)
}

model log_barcode_product_variant {
  id               Int                                 @id @default(autoincrement())
  productVariantId Int?
  barcode          String?                             @db.VarChar(255)
  typeBarcode      String?                             @db.VarChar(255)
  status           log_barcode_product_variant_status? @default(Active)
  createdAt        DateTime?                           @default(now()) @db.Timestamp(0)
  createdBy        String?                             @db.VarChar(255)
  updatedBy        String?                             @db.VarChar(255)
  updatedAt        DateTime                            @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model log_boq {
  id        Int       @id @default(autoincrement())
  refId     String    @db.VarChar(255)
  payload   String    @db.LongText
  boqId     Int?
  createdBy String?   @db.VarChar(255)
  createdAt DateTime? @db.DateTime(0)
  updatedBy String?   @db.VarChar(255)
  updatedAt DateTime? @db.DateTime(0)
  rfqCode   String?   @db.VarChar(100)
  projectId Int?
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model log_cart_item {
  id                Int                @id @default(autoincrement())
  projectId         Int?
  agentId           Int
  branchId          Int
  branchProductId   Int?
  promotionBranchId Int?
  parentPromotionId Int?
  createdAt         DateTime?          @default(now()) @db.Timestamp(0)
  createdBy         String?            @db.VarChar(256)
  updatedAt         DateTime?          @default(now()) @db.Timestamp(0)
  updatedBy         String?            @db.VarChar(256)
  amount            Int?
  type              log_cart_item_type @default(Added)
  agent             agent              @relation(fields: [agentId], references: [id], onUpdate: Restrict, map: "fK_log_cart_item_agent_agentId")
  branch            branch             @relation(fields: [branchId], references: [id], onUpdate: Restrict, map: "fK_log_cart_item_branch_branchId")
  branch_product    branch_product?    @relation(fields: [branchProductId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_log_cart_item_branch_product_branchProductId")
  project           project?           @relation(fields: [projectId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_log_cart_item_projects_projectId")
  promotion_branch  promotion_branch?  @relation(fields: [promotionBranchId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_log_cart_item_promotionBranches_promotionBranchId")
  promotion         promotion?         @relation(fields: [parentPromotionId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_log_cart_item_promotions_parentPromotionId")

  @@index([agentId], map: "iX_log_cart_item_agentId")
  @@index([branchId], map: "iX_log_cart_item_branchId")
  @@index([branchProductId], map: "iX_log_cart_item_branchProductId")
  @@index([createdAt], map: "iX_log_cart_item_createdAt")
  @@index([parentPromotionId], map: "iX_log_cart_item_parentPromotionId")
  @@index([projectId], map: "iX_log_cart_item_projectId")
  @@index([promotionBranchId], map: "iX_log_cart_item_promotionBranchId")
  @@index([type], map: "iX_log_cart_item_type")
  @@index([updatedAt], map: "iX_log_cart_item_updatedAt")
}

model log_create_order_item {
  id        Int       @id @default(autoincrement())
  orderId   Int?
  body      String?   @db.Text
  cartId    Int?
  branchId  Int?
  success   String?   @db.Text
  unSuccess String?   @db.Text
  updatedBy String?   @db.VarChar(255)
  updatedAt DateTime? @db.DateTime(0)
  createdBy String?   @db.VarChar(255)
  createdAt DateTime? @db.DateTime(0)
}

model log_credit_inquiry {
  id                  Int       @id @default(autoincrement())
  functionName        String?   @db.VarChar(255)
  transactionId       String?   @db.VarChar(255)
  transactionDateTime DateTime? @db.DateTime(0)
  billerType          String?   @db.VarChar(255)
  billerId            String?   @db.VarChar(255)
  terminalNo          String?   @db.VarChar(255)
  channelCode         String?   @db.VarChar(255)
  tranAmount          String?   @db.VarChar(255)
  senderBankCode      String?   @db.VarChar(255)
  reference1          String?   @db.VarChar(255)
  reference2          String?   @db.VarChar(255)
  language            String?   @db.VarChar(255)
  apiKey              String?   @db.VarChar(255)
  dueDate             String?   @db.VarChar(255)
  rtpReference        String?   @db.VarChar(255)
  rqAppId             String?   @db.VarChar(255)
  createdAt           DateTime? @db.Timestamp(0)
  createdBy           String?   @db.VarChar(255)
  updatedAt           DateTime? @db.Timestamp(0)
  updatedBy           String?   @db.VarChar(255)
}

model log_credit_notification {
  id                   Int       @id @default(autoincrement())
  customerId           Int?
  creditNotificationId Int?
  ip                   String?   @db.VarChar(255)
  userAgent            String?   @db.VarChar(255)
  headers              String?   @db.LongText
  createdAt            DateTime? @db.Timestamp(0)
  createdBy            String?   @db.VarChar(255)
  updatedAt            DateTime? @db.Timestamp(0)
}

model log_credit_payment {
  id                  Int       @id @default(autoincrement())
  functionName        String?   @db.VarChar(255)
  transactionId       String?   @db.VarChar(255)
  transactionDateTime DateTime? @db.DateTime(0)
  billerType          String?   @db.VarChar(255)
  billerId            String?   @db.VarChar(255)
  terminalNo          String?   @db.VarChar(255)
  channelCode         String?   @db.VarChar(255)
  tranAmount          String?   @db.VarChar(255)
  senderBankCode      String?   @db.VarChar(255)
  isRetry             Int?
  reference1          String?   @db.VarChar(255)
  reference2          String?   @db.VarChar(255)
  apiKey              String?   @db.VarChar(255)
  dueDate             String?   @db.VarChar(255)
  rtpReference        String?   @db.VarChar(255)
  rqAppId             String?   @db.VarChar(255)
  createdAt           DateTime? @db.Timestamp(0)
  createdBy           String?   @db.VarChar(255)
  updatedAt           DateTime? @db.Timestamp(0)
  updatedBy           String?   @db.VarChar(255)
}

model log_excel_category {
  id            Int                        @id @default(autoincrement())
  fileName      String?                    @db.VarChar(255)
  fileExtension String?                    @db.VarChar(255)
  fileSize      String?                    @db.VarChar(255)
  filePath      String?                    @db.VarChar(255)
  status        log_excel_category_status?
  updatedBy     String?                    @db.VarChar(255)
  updatedAt     DateTime?                  @db.Timestamp(0)
  createdBy     String?                    @db.VarChar(255)
  createdAt     DateTime?                  @default(now()) @db.Timestamp(0)
}

model log_excel_product {
  id            Int                           @id @default(autoincrement())
  fileName      String?                       @db.VarChar(255)
  fileExtension String?                       @db.VarChar(255)
  fileSize      String?                       @db.VarChar(255)
  filePath      String?                       @db.VarChar(255)
  status        log_excel_product_status?
  updatedBy     String?                       @db.VarChar(255)
  updatedAt     DateTime?                     @db.DateTime(0)
  createdBy     String?                       @db.VarChar(255)
  createdAt     DateTime?                     @db.DateTime(0)
  statusFile    log_excel_product_statusFile? @default(Active)
}

model log_image_map_variant {
  id               Int       @id @default(autoincrement())
  folderId         Int?
  logImageId       Int?
  imageName        String?   @db.VarChar(255)
  orderDisplay     String?   @db.VarChar(255)
  productVariantId Int?
  skuCode          String?   @db.VarChar(255)
  type             String?   @db.VarChar(255)
  updatedBy        String?   @db.VarChar(255)
  updatedAt        DateTime? @default(now()) @db.Timestamp(0)
  createdBy        String?   @db.VarChar(255)
  createdAt        DateTime? @default(now()) @db.Timestamp(0)
}

model log_import_category {
  id              Int                            @id @default(autoincrement())
  fileExcelCateId Int?
  status          log_import_category_status?
  isProcess       log_import_category_isProcess?
  updatedBy       String?                        @db.VarChar(255)
  updatedAt       DateTime?                      @default(now()) @db.Timestamp(0)
  createdBy       String?                        @db.VarChar(255)
  createdAt       DateTime?                      @default(now()) @db.Timestamp(0)
}

model log_import_product {
  id            Int                               @id @default(autoincrement())
  fileExcelId   Int?
  logMessage    String?                           @db.Text
  processStatus log_import_product_processStatus?
  isProcess     log_import_product_isProcess?
  updatedBy     String?                           @db.VarChar(255)
  updatedAt     DateTime?                         @db.Timestamp(0)
  createdBy     String?                           @db.VarChar(255)
  createdAt     DateTime?                         @default(now()) @db.Timestamp(0)
}

model log_mapping_itemcode_product {
  id                    Int       @id @default(autoincrement())
  productName           String?   @db.VarChar(255)
  itemCodeOnDev         String?   @db.VarChar(255)
  itemCodeOnProduction  String?   @db.VarChar(255)
  createdAt             DateTime? @db.Timestamp(0)
  updatedAt             DateTime? @db.Timestamp(0)
  productIdOnProduction Int?
  productIdOnDev        Int?
}

model log_organize_boq {
  id                 Int                      @id @default(autoincrement())
  organizeId         Int
  customerOrganizeId Int
  boqId              Int
  status             log_organize_boq_status? @default(ACTIVE)
  createdBy          String?                  @db.VarChar(255)
  createdAt          DateTime?                @default(now()) @db.DateTime(0)
  updatedBy          String?                  @db.VarChar(255)
  updatedAt          DateTime?                @db.DateTime(0)
}

model log_organize_boq_temp {
  id                 Int                           @id @default(autoincrement())
  organizeId         Int
  customerOrganizeId Int
  boqTempId          Int
  status             log_organize_boq_temp_status? @default(ACTIVE)
  createdBy          String?                       @db.VarChar(255)
  createdAt          DateTime?                     @default(now()) @db.DateTime(0)
  updatedBy          String?                       @db.VarChar(255)
  updatedAt          DateTime?                     @db.DateTime(0)
}

model log_organize_cart {
  id                 Int                       @id @default(autoincrement())
  customerOrganizeId Int?
  cartItemId         Int?
  organizeId         Int?
  status             log_organize_cart_status? @default(ACTIVE)
  updatedBy          String?                   @db.VarChar(255)
  updatedAt          DateTime?                 @default(now()) @db.Timestamp(0)
  createdBy          String?                   @db.VarChar(255)
  createdAt          DateTime?                 @default(now()) @db.Timestamp(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model log_organize_order {
  id                 Int                        @id @default(autoincrement())
  organizeId         Int
  customerOrganizeId Int
  orderId            Int
  status             log_organize_order_status? @default(ACTIVE)
  createdBy          String?                    @db.VarChar(255)
  createdAt          DateTime?                  @default(now()) @db.DateTime(0)
  updatedBy          String?                    @db.VarChar(255)
  updatedAt          DateTime?                  @default(now()) @db.DateTime(0)
}

model log_organize_quotation {
  id                 Int       @id @default(autoincrement())
  projectId          Int?
  organizeId         Int?
  customerOrganizeId Int?
  quotationId        Int?
  orderId            Int?
  createdBy          String?   @db.VarChar(255)
  createdAt          DateTime? @default(now()) @db.Timestamp(0)
  updatedAt          DateTime? @default(now()) @db.Timestamp(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model log_payment_channel {
  id             Int                             @id @default(autoincrement())
  orderId        Int?
  orderPaymentId Int?
  paymentType    log_payment_channel_paymentType @default(BankAccount)
  isSuccess      Int?                            @default(0)
  payload        String                          @db.Text
  createdAt      DateTime?                       @db.Timestamp(0)
  createdBy      String?                         @db.VarChar(256)
  updatedAt      DateTime?                       @db.Timestamp(0)
  updatedBy      String?                         @db.VarChar(256)
}

model log_payment_mac5 {
  id            Int                           @id @default(autoincrement())
  orderId       Int?
  billingNumber String?                       @db.Text
  status        Int?
  paymentType   log_payment_mac5_paymentType?
  errorMessage  String?                       @db.Text
  updatedBy     String?                       @db.VarChar(255)
  updatedAt     DateTime?                     @db.DateTime(0)
  createdBy     String?                       @db.VarChar(255)
  createdAt     DateTime?                     @db.DateTime(0)
}

model log_product_move_group {
  id               Int       @id @default(autoincrement())
  fileExcelId      Int?
  productVaraintId Int?
  newProductId     Int?
  oldProductId     Int?
  updatedBy        String?   @db.VarChar(255)
  updatedAt        DateTime? @db.DateTime(0)
  createdBy        String?   @db.VarChar(255)
  createdAt        DateTime? @db.DateTime(0)
}

model log_product_number {
  id            Int       @id @default(autoincrement())
  prefix        String?   @db.VarChar(255)
  numberProduct Int?
  updatedBy     String?   @db.VarChar(255)
  updatedAt     DateTime? @default(now()) @db.Timestamp(0)
  createdBy     String?   @db.VarChar(255)
  createdAt     DateTime? @default(now()) @db.Timestamp(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model log_running_number {
  id        Int       @id @default(autoincrement())
  agentId   Int
  running   Int       @default(0)
  createdAt DateTime  @default(now()) @db.Timestamp(0)
  createdBy String?   @db.VarChar(256)
  updatedAt DateTime? @db.Timestamp(0)
  updatedBy String?   @db.VarChar(256)

  @@index([agentId], map: "iX_agent_id")
  @@index([id], map: "iX_running_id")
  @@index([running], map: "iX_running_number")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model log_team_order_quotation {
  id                 Int                                   @id @default(autoincrement())
  teamId             Int
  customerOrganizeId Int
  orderTempId        Int?
  orderStatus        log_team_order_quotation_orderStatus?
  quotationId        Int?
  qtStatus           log_team_order_quotation_qtStatus?
  isDisplay          Int?                                  @default(1)
  note               String?                               @db.Text
  status             log_team_order_quotation_status?      @default(Active)
  createdBy          String?                               @db.VarChar(255)
  createdAt          DateTime?                             @default(now()) @db.Timestamp(0)
}

model log_update_product {
  id               Int       @id @default(autoincrement())
  fileExcelId      Int?
  productVaraintId Int?
  refBarcode       String?   @db.VarChar(255)
  barcode          String?   @db.VarChar(255)
  typeBarcode      String?   @db.VarChar(255)
  remarkBarcode    String?   @db.VarChar(255)
  statusProduct    String?   @db.VarChar(255)
  sheetExcel       String?   @db.VarChar(255)
  updatedBy        String?   @db.VarChar(255)
  updatedAt        DateTime? @db.DateTime(0)
  createdBy        String?   @db.VarChar(255)
  createdAt        DateTime? @db.DateTime(0)
}

model log_upload_folder {
  id             Int                             @id @default(autoincrement())
  folderName     String?                         @db.VarChar(255)
  folderType     String?                         @db.VarChar(255)
  filePath       String?                         @db.VarChar(255)
  status         log_upload_folder_status?
  updatedBy      Int?
  updatedAt      DateTime?                       @default(now()) @db.Timestamp(0)
  createdBy      Int?
  createdAt      DateTime?                       @default(now()) @db.Timestamp(0)
  messageLog     String?                         @db.Text
  activeStatus   log_upload_folder_activeStatus? @default(Active)
  supplierNumber String?                         @db.VarChar(255)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model log_upload_image {
  id           Int                      @id @default(autoincrement())
  folderId     Int?
  imageName    String?                  @db.VarChar(255)
  status       log_upload_image_status?
  updatedBy    String?                  @db.VarChar(255)
  updatedAt    DateTime?                @default(now()) @db.Timestamp(0)
  createdBy    String?                  @db.VarChar(255)
  createdAt    DateTime?                @default(now()) @db.Timestamp(0)
  path         String?                  @db.VarChar(255)
  size         Decimal?                 @db.Decimal(10, 2)
  extension    String?                  @db.VarChar(255)
  sourceName   String?                  @db.VarChar(255)
  orderDisplay Int?
}

model log_validate_excel {
  id          Int                      @id @default(autoincrement())
  fileExcelId Int?
  sheet       String?                  @db.VarChar(255)
  row         String?                  @db.VarChar(255)
  column      String?                  @db.VarChar(255)
  error       String?                  @db.VarChar(255)
  createdAt   DateTime?                @db.Timestamp(0)
  updatedAt   DateTime?                @db.Timestamp(0)
  type        log_validate_excel_type?
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model master_sku_country {
  id        String                    @id @db.VarChar(255)
  name      String?                   @db.LongText
  status    master_sku_country_status @default(Active)
  createdAt DateTime?                 @default(now()) @db.Timestamp(0)
  createdBy String?                   @db.VarChar(256)
  updatedAt DateTime?                 @default(now()) @db.Timestamp(0)
  updatedBy String?                   @db.VarChar(256)

  @@index([createdAt], map: "iX_master_sku_country_createdAt")
  @@index([status], map: "iX_master_sku_country_status")
  @@index([updatedAt], map: "iX_master_sku_country_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model master_sku_unit {
  id        String                 @id @db.VarChar(255)
  name      String?                @db.LongText
  status    master_sku_unit_status @default(Active)
  createdAt DateTime?              @default(now()) @db.Timestamp(0)
  createdBy String?                @db.VarChar(256)
  updatedAt DateTime?              @default(now()) @db.Timestamp(0)
  updatedBy String?                @db.VarChar(256)

  @@index([createdAt], map: "iX_master_sku_unit_createdAt")
  @@index([status], map: "iX_master_sku_unit_status")
  @@index([updatedAt], map: "iX_master_sku_unit_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model matching_import_file {
  id                   Int                                    @id @default(autoincrement())
  documentId           Int
  agentId              Int
  matchingFileState    matching_import_file_matchingFileState @default(ProcessProduct)
  totalItem            Int
  doneItem             Int
  status               matching_import_file_status            @default(Active)
  createdAt            DateTime?                              @default(now()) @db.Timestamp(0)
  createdBy            String?                                @db.VarChar(256)
  updatedAt            DateTime?                              @default(now()) @db.Timestamp(0)
  updatedBy            String?                                @db.VarChar(256)
  agent                agent                                  @relation(fields: [agentId], references: [id], onUpdate: Restrict, map: "fK_matching_import_file_agent_agentId")
  document             document                               @relation(fields: [documentId], references: [id], onUpdate: Restrict, map: "fK_matching_import_file_documents_documentId")
  matching_import_item matching_import_item[]
  matching_import_log  matching_import_log[]

  @@index([agentId], map: "iX_matching_import_file_agentId")
  @@index([createdAt], map: "iX_matching_import_file_createdAt")
  @@index([documentId], map: "iX_matching_import_file_documentId")
  @@index([matchingFileState], map: "iX_matching_import_file_matchingFileState")
  @@index([status], map: "iX_matching_import_file_status")
  @@index([updatedAt], map: "iX_matching_import_file_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model matching_import_item {
  id                   Int                                    @id @default(autoincrement())
  matchingImportFileId Int
  seqNo                Int
  itemName             String?                                @db.LongText
  itemBarcode          String?                                @db.LongText
  itemBrand            String?                                @db.LongText
  itemPrice            Decimal                                @db.Decimal(18, 2)
  itemSpecialPrice     Decimal?                               @db.Decimal(18, 2)
  itemStartDate        DateTime?                              @db.DateTime(6)
  itemEndDate          DateTime?                              @db.DateTime(6)
  itemProductStatus    matching_import_item_itemProductStatus @default(Draft)
  itemMatchingType     matching_import_item_itemMatchingType  @default(InProcess)
  itemInvestigateState Int?
  status               matching_import_item_status            @default(Active)
  createdAt            DateTime?                              @default(now()) @db.Timestamp(0)
  createdBy            String?                                @db.VarChar(256)
  updatedAt            DateTime?                              @default(now()) @db.Timestamp(0)
  updatedBy            String?                                @db.VarChar(256)
  isFinalInvestigate   Boolean                                @default(false)
  sendInvestigateCount Int                                    @default(0)
  noteDetail           String?                                @db.LongText
  noteType             Int?
  matching_import_file matching_import_file                   @relation(fields: [matchingImportFileId], references: [id], onUpdate: Restrict, map: "fK_matching_import_item_matching_import_file_matchingImportFile~")
  matching_result_item matching_result_item[]

  @@index([createdAt], map: "iX_matching_import_item_createdAt")
  @@index([itemMatchingType], map: "iX_matching_import_item_itemMatchingType")
  @@index([itemProductStatus], map: "iX_matching_import_item_itemProductStatus")
  @@index([matchingImportFileId], map: "iX_matching_import_item_matchingImportFileId")
  @@index([status], map: "iX_matching_import_item_status")
  @@index([updatedAt], map: "iX_matching_import_item_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model matching_import_log {
  id                   Int                  @id @default(autoincrement())
  matchingImportFileId Int
  note                 String?              @db.LongText
  createdAt            DateTime?            @default(now()) @db.Timestamp(0)
  createdBy            String?              @db.VarChar(256)
  updatedAt            DateTime?            @default(now()) @db.Timestamp(0)
  updatedBy            String?              @db.VarChar(256)
  matching_import_file matching_import_file @relation(fields: [matchingImportFileId], references: [id], onUpdate: Restrict, map: "fK_matching_import_log_matching_import_file_matchingImportFileId")

  @@index([createdAt], map: "iX_matching_import_log_createdAt")
  @@index([matchingImportFileId], map: "iX_matching_import_log_matchingImportFileId")
  @@index([updatedAt], map: "iX_matching_import_log_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model matching_result_item {
  id                   Int                                  @id @default(autoincrement())
  matchingImportItemId Int
  seqNo                Int
  productVariantId     Int
  price                Decimal?                             @db.Decimal(18, 2)
  specialPrice         Decimal?                             @db.Decimal(18, 2)
  startDate            DateTime?                            @db.DateTime(6)
  endDate              DateTime?                            @db.DateTime(6)
  productStatus        Int?
  isMatched            Boolean?
  haveInAgent          Boolean
  itemImportState      matching_result_item_itemImportState @default(Waiting)
  status               matching_result_item_status          @default(Active)
  createdAt            DateTime?                            @default(now()) @db.Timestamp(0)
  createdBy            String?                              @db.VarChar(256)
  updatedAt            DateTime?                            @default(now()) @db.Timestamp(0)
  updatedBy            String?                              @db.VarChar(256)
  isNewAgentProduct    Boolean                              @default(false)
  matching_import_item matching_import_item                 @relation(fields: [matchingImportItemId], references: [id], onUpdate: Restrict, map: "fK_matching_result_item_matching_import_item_matchingImportItem~")
  product_variant      product_variant                      @relation(fields: [productVariantId], references: [id], onUpdate: Restrict, map: "fK_matching_result_item_product_variant_productVariantId")

  @@index([createdAt], map: "iX_matching_result_item_createdAt")
  @@index([itemImportState], map: "iX_matching_result_item_itemImportState")
  @@index([matchingImportItemId], map: "iX_matching_result_item_matchingImportItemId")
  @@index([productVariantId], map: "iX_matching_result_item_productVariantId")
  @@index([status], map: "iX_matching_result_item_status")
  @@index([updatedAt], map: "iX_matching_result_item_updatedAt")
}

model materialized_customer_branchs {
  id         Int     @id @default(autoincrement())
  customerId Int?
  projectId  Int?
  branchIds  String? @db.Text
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model menu {
  id        Int          @id @default(autoincrement())
  name      String?      @db.VarChar(255)
  codeMenu  String?      @db.VarChar(255)
  menuPath  String?      @db.Text
  menuPic   String?      @db.Text
  status    menu_status? @default(Active)
  createdBy String?      @db.VarChar(255)
  createdAt DateTime?    @default(now()) @db.Timestamp(0)
  updatedBy String?      @db.VarChar(255)
  updatedAt DateTime?    @default(now()) @db.DateTime(0)
}

// model notification_customer_quotation {
//   id               Int       @id @default(autoincrement())
//   agentId          Int?
//   allkonsAccountId Int?
//   quotationId      Int?
//   description      String?   @db.VarChar(255)
//   read             Int?
//   status           String?   @db.VarChar(255)
//   targetSystem     String?   @db.VarChar(255)
//   createdBy        String?   @db.VarChar(255)
//   createdAt        DateTime? @db.DateTime(0)
//   updatedAt        DateTime? @db.DateTime(0)

//   @@map("notification-customer-quotation")
// }

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model notification_credit {
  id               Int                              @id @default(autoincrement())
  agentId          Int
  allkonsAccountId Int?
  creditRequestId  Int?
  description      String?                          @db.VarChar(2048)
  read             Boolean
  status           notification_credit_status       @default(Active)
  createdAt        DateTime?                        @default(now()) @db.Timestamp(0)
  createdBy        String?                          @db.VarChar(256)
  updatedAt        DateTime?                        @default(now()) @db.Timestamp(0)
  updatedBy        String?                          @db.VarChar(256)
  creditPaymentId  Int?
  targetSystem     notification_credit_targetSystem @default(AllkonsMCustomer)
  agent            agent                            @relation(fields: [agentId], references: [id], onUpdate: Restrict, map: "fK_notification_credit_agent_agentId")
  credit_payment   credit_payment?                  @relation(fields: [creditPaymentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_notification_credit_credit_payment_creditPaymentId")
  credit_request   credit_request?                  @relation(fields: [creditRequestId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_notification_credit_credit_request_creditRequestId")

  @@index([agentId], map: "iX_notification_credit_agentId")
  @@index([createdAt], map: "iX_notification_credit_createdAt")
  @@index([creditPaymentId], map: "iX_notification_credit_creditPaymentId")
  @@index([creditRequestId], map: "iX_notification_credit_creditRequestId")
  @@index([status], map: "iX_notification_credit_status")
  @@index([targetSystem], map: "iX_notification_credit_targetSystem")
  @@index([updatedAt], map: "iX_notification_credit_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model notification_customer_boq {
  id               Int                                    @id @default(autoincrement())
  agentId          Int
  allkonsAccountId Int?
  boqId            Int
  branchId         Int
  description      String?                                @db.VarChar(2048)
  read             Boolean
  status           notification_customer_boq_status       @default(Active)
  createdAt        DateTime?                              @default(now()) @db.Timestamp(0)
  createdBy        String?                                @db.VarChar(256)
  updatedAt        DateTime?                              @default(now()) @db.Timestamp(0)
  updatedBy        String?                                @db.VarChar(256)
  targetSystem     notification_customer_boq_targetSystem @default(AllkonsMCustomer)
  agent            agent                                  @relation(fields: [agentId], references: [id], onUpdate: Restrict, map: "fK_notification_customer_boq_agent_agentId")
  boq              boq                                    @relation(fields: [boqId], references: [id], onUpdate: Restrict, map: "fK_notification_customer_boq_boq_boqId")
  branch           branch                                 @relation(fields: [branchId], references: [id], onUpdate: Restrict, map: "fK_notification_customer_boq_branch_branchId")

  @@index([agentId], map: "iX_notification_customer_boq_agentId")
  @@index([boqId], map: "iX_notification_customer_boq_boqId")
  @@index([branchId], map: "iX_notification_customer_boq_branchId")
  @@index([createdAt], map: "iX_notification_customer_boq_createdAt")
  @@index([status], map: "iX_notification_customer_boq_status")
  @@index([targetSystem], map: "iX_notification_customer_boq_targetSystem")
  @@index([updatedAt], map: "iX_notification_customer_boq_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model notification_customer_data {
  id               Int                                       @id @default(autoincrement())
  agentId          Int
  customerId       Int
  description      String?                                   @db.VarChar(2048)
  statusApproved   notification_customer_data_statusApproved @default(WaitCustomerApproved)
  read             Boolean
  createdAt        DateTime?                                 @default(now()) @db.Timestamp(0)
  createdBy        String?                                   @db.VarChar(256)
  updatedAt        DateTime?                                 @default(now()) @db.Timestamp(0)
  updatedBy        String?                                   @db.VarChar(256)
  allkonsAccountId Int?
  agent            agent                                     @relation(fields: [agentId], references: [id], onUpdate: Restrict, map: "fK_notification_customer_data_agent_agentId")
  customer         customer                                  @relation(fields: [customerId], references: [id], onUpdate: Restrict, map: "fK_notification_customer_data_customer_customerId")

  @@index([agentId], map: "iX_notification_customer_data_agentId")
  @@index([createdAt], map: "iX_notification_customer_data_createdAt")
  @@index([customerId], map: "iX_notification_customer_data_customerId")
  @@index([statusApproved], map: "iX_notification_customer_data_statusApproved")
  @@index([updatedAt], map: "iX_notification_customer_data_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model notification_customer_favorite {
  id                      Int                                         @id @default(autoincrement())
  agentId                 Int
  allkonsAccountId        Int?
  favoriteAgentId         Int
  description             String?                                     @db.VarChar(2048)
  read                    Boolean
  status                  notification_customer_favorite_status       @default(Active)
  createdAt               DateTime?                                   @default(now()) @db.Timestamp(0)
  createdBy               String?                                     @db.VarChar(256)
  updatedAt               DateTime?                                   @default(now()) @db.Timestamp(0)
  updatedBy               String?                                     @db.VarChar(256)
  targetSystem            notification_customer_favorite_targetSystem @default(AllkonsMCustomer)
  agent                   agent                                       @relation(fields: [agentId], references: [id], onUpdate: Restrict, map: "fK_notification_customer_favorite_agent_agentId")
  customer_favorite_agent customer_favorite_agent                     @relation(fields: [favoriteAgentId], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "fK_notification_customer_favorite_customer_favorite_agent_favor~")

  @@index([agentId], map: "iX_notification_customer_favorite_agentId")
  @@index([createdAt], map: "iX_notification_customer_favorite_createdAt")
  @@index([favoriteAgentId], map: "iX_notification_customer_favorite_favoriteAgentId")
  @@index([status], map: "iX_notification_customer_favorite_status")
  @@index([targetSystem], map: "iX_notification_customer_favorite_targetSystem")
  @@index([updatedAt], map: "iX_notification_customer_favorite_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model notification_customer_quotation {
  id               Int                                          @id @default(autoincrement())
  agentId          Int
  allkonsAccountId Int?
  quotationId      Int
  description      String?                                      @db.VarChar(2048)
  read             Boolean
  status           notification_customer_quotation_status       @default(Active)
  createdAt        DateTime?                                    @default(now()) @db.Timestamp(0)
  createdBy        String?                                      @db.VarChar(256)
  updatedAt        DateTime?                                    @default(now()) @db.Timestamp(0)
  updatedBy        String?                                      @db.VarChar(256)
  targetSystem     notification_customer_quotation_targetSystem @default(AllkonsMCustomer)
  agent            agent                                        @relation(fields: [agentId], references: [id], onUpdate: Restrict, map: "fK_notification_customer_quotation_agent_agentId")
  quotation        quotation                                    @relation(fields: [quotationId], references: [id], onUpdate: Restrict, map: "fK_notification_customer_quotation_quotations_quotationId")

  @@index([agentId], map: "iX_notification_customer_quotation_agentId")
  @@index([createdAt], map: "iX_notification_customer_quotation_createdAt")
  @@index([quotationId], map: "iX_notification_customer_quotation_quotationId")
  @@index([status], map: "iX_notification_customer_quotation_status")
  @@index([targetSystem], map: "iX_notification_customer_quotation_targetSystem")
  @@index([updatedAt], map: "iX_notification_customer_quotation_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model notification_job {
  id                  Int                                  @id @default(autoincrement())
  agentId             Int
  description         String?                              @db.VarChar(2048)
  read                Boolean
  notificationJobType notification_job_notificationJobType @default(ImportAgentProduct)
  status              notification_job_status              @default(Active)
  createdAt           DateTime?                            @default(now()) @db.Timestamp(0)
  createdBy           String?                              @db.VarChar(256)
  updatedAt           DateTime?                            @default(now()) @db.Timestamp(0)
  updatedBy           String?                              @db.VarChar(256)
  allkonsAccountId    Int?
  agent               agent                                @relation(fields: [agentId], references: [id], onUpdate: Restrict, map: "fK_notification_job_agent_agentId")

  @@index([agentId], map: "iX_notification_job_agentId")
  @@index([createdAt], map: "iX_notification_job_createdAt")
  @@index([notificationJobType], map: "iX_notification_job_notificationJobType")
  @@index([status], map: "iX_notification_job_status")
  @@index([updatedAt], map: "iX_notification_job_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model notification_message {
  id               Int                         @id @default(autoincrement())
  summary          String?                     @db.VarChar(256)
  description      String?                     @db.VarChar(2048)
  iconName         String?                     @db.VarChar(256)
  senderName       String?                     @db.VarChar(256)
  system           notification_message_system @default(AllkonsMCustomer)
  link             String?                     @db.VarChar(256)
  createdAt        DateTime?                   @default(now()) @db.Timestamp(0)
  createdBy        String?                     @db.VarChar(255)
  updatedAt        DateTime?                   @default(now()) @db.Timestamp(0)
  updatedBy        String?                     @db.VarChar(256)
  allkonsAccountId Int?
  tbAccountId      Int?
  account          account?                    @relation(fields: [tbAccountId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_notification_message_account_tbAccountId")

  @@index([createdAt], map: "iX_notification_message_createdAt")
  @@index([system], map: "iX_notification_message_system")
  @@index([tbAccountId], map: "iX_notification_message_tbAccountId")
  @@index([updatedAt], map: "iX_notification_message_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model notification_payment_setting {
  id                       Int                                       @id @default(autoincrement())
  agentId                  Int
  allkonsAccountId         Int?
  bankAccountId            Int?
  agentPromptPayAccountId  Int?
  description              String?                                   @db.VarChar(2048)
  read                     Boolean
  status                   notification_payment_setting_status       @default(Active)
  createdAt                DateTime?                                 @default(now()) @db.Timestamp(0)
  createdBy                String?                                   @db.VarChar(256)
  updatedAt                DateTime?                                 @default(now()) @db.Timestamp(0)
  updatedBy                String?                                   @db.VarChar(256)
  targetSystem             notification_payment_setting_targetSystem @default(AllkonsMCustomer)
  agent                    agent                                     @relation(fields: [agentId], references: [id], onUpdate: Restrict, map: "fK_notification_payment_setting_agent_agentId")
  agent_bank_account       agent_bank_account?                       @relation(fields: [bankAccountId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_notification_payment_setting_agent_bank_account_bankAccountId")
  agent_prompt_pay_account agent_prompt_pay_account?                 @relation(fields: [agentPromptPayAccountId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_notification_payment_setting_agent_prompt_pay_account_agentP~")

  @@index([agentId], map: "iX_notification_payment_setting_agentId")
  @@index([agentPromptPayAccountId], map: "iX_notification_payment_setting_agentPromptPayAccountId")
  @@index([bankAccountId], map: "iX_notification_payment_setting_bankAccountId")
  @@index([createdAt], map: "iX_notification_payment_setting_createdAt")
  @@index([status], map: "iX_notification_payment_setting_status")
  @@index([targetSystem], map: "iX_notification_payment_setting_targetSystem")
  @@index([updatedAt], map: "iX_notification_payment_setting_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model notification_status_order {
  id                  Int                                        @id @default(autoincrement())
  customerId          Int
  orderId             Int
  description         String?                                    @db.VarChar(2048)
  orderStatus         notification_status_order_orderStatus      @default(New)
  read                Boolean
  status              notification_status_order_status           @default(Active)
  createdAt           DateTime?                                  @default(now()) @db.Timestamp(0)
  createdBy           String?                                    @db.VarChar(255)
  updatedAt           DateTime?                                  @default(now()) @db.Timestamp(0)
  updatedBy           String?                                    @db.VarChar(255)
  notificationType    notification_status_order_notificationType @default(NewOrder)
  allkonsAccountId    Int?
  tbAccountId         Int?
  deliveryOrderId     Int?
  deliveryOrderStatus Int?
  targetSystem        notification_status_order_targetSystem     @default(AllkonsMCustomer)
  account             account?                                   @relation(fields: [tbAccountId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_notification_status_order_account_tbAccountId")
  customer            customer                                   @relation(fields: [customerId], references: [id], onUpdate: Restrict, map: "fK_notification_status_order_customer_customerId")
  delivery_order      delivery_order?                            @relation(fields: [deliveryOrderId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_notification_status_order_deliveryOrders_deliveryOrderId")
  order               order                                      @relation(fields: [orderId], references: [id], onUpdate: Restrict, map: "fK_notification_status_order_orders_orderId")

  @@index([createdAt], map: "iX_notification_status_order_createdAt")
  @@index([customerId], map: "iX_notification_status_order_customerId")
  @@index([deliveryOrderId], map: "iX_notification_status_order_deliveryOrderId")
  @@index([notificationType], map: "iX_notification_status_order_notificationType")
  @@index([orderId], map: "iX_notification_status_order_orderId")
  @@index([orderStatus], map: "iX_notification_status_order_orderStatus")
  @@index([status], map: "iX_notification_status_order_status")
  @@index([targetSystem], map: "iX_notification_status_order_targetSystem")
  @@index([tbAccountId], map: "iX_notification_status_order_tbAccountId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model occupation {
  id                  Int                   @id @default(autoincrement())
  name                String?               @db.VarChar(255)
  description         String?               @db.LongText
  status              occupation_status?    @default(Active)
  createdAt           DateTime?             @default(now()) @db.Timestamp(0)
  createdBy           String?               @db.VarChar(255)
  updatedAt           DateTime?             @default(now()) @db.Timestamp(0)
  updatedBy           String?               @db.VarChar(255)
  customer_occupation customer_occupation[]
  occupation_category occupation_category[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model occupation_category {
  id           Int         @id @default(autoincrement())
  occupationId Int?
  categoryId   Int?
  createdAt    DateTime?   @default(now()) @db.Timestamp(0)
  createdBy    String?     @db.VarChar(255)
  updatedAt    DateTime?   @default(now()) @db.Timestamp(0)
  updatedBy    String?     @db.VarChar(255)
  category     category?   @relation(fields: [categoryId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fkOccupationCategoryCategoryId")
  occupation   occupation? @relation(fields: [occupationId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fkOccupationCategoryOccupationId")

  @@index([categoryId], map: "fkOccupationCategoryCategoryId")
  @@index([occupationId], map: "fkOccupationCategoryOccupationId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model order {
  id                        Int                         @id @default(autoincrement())
  projectId                 Int
  orderStatus               order_orderStatus           @default(New)
  note                      String?                     @db.LongText
  orderDate                 DateTime                    @db.DateTime(6)
  branchId                  Int
  billingNumber             String?                     @db.VarChar(100)
  endcodeBillingNumber      String?                     @db.LongText
  deliveryType              order_deliveryType          @default(AgentService)
  deliveryReceiveType       order_deliveryReceiveType   @default(SENDONCE)
  address                   String?                     @db.VarChar(1024)
  countryId                 Int?
  provinceId                Int?
  districtId                Int?
  subDistrictId             Int?
  zipCodeId                 Int?
  deliveryNote              String?                     @db.VarChar(2048)
  totalProductPrice         Decimal                     @db.Decimal(18, 2)
  totalDeliveryPrice        Decimal                     @db.Decimal(18, 2)
  promotion                 Decimal?                    @db.Decimal(18, 2)
  tax                       Decimal?                    @db.Decimal(18, 2)
  grandTotal                Decimal                     @db.Decimal(18, 2)
  createdAt                 DateTime?                   @default(now()) @db.Timestamp(0)
  createdBy                 String?                     @db.VarChar(256)
  updatedAt                 DateTime?                   @default(now()) @db.Timestamp(0)
  updatedBy                 String?                     @db.VarChar(256)
  display                   order_display               @default(Active)
  isUseFileSystem           Boolean                     @default(false)
  agentUserId               Int?
  approveOrderJobStatus     Int?
  d365OrderJobStatus        Int?
  quotationId               Int?
  cisNumber                 String?                     @db.VarChar(256)
  discountTotal             Decimal?                    @default(0.00) @db.Decimal(18, 2)
  credit_order              credit_order[]
  notification_status_order notification_status_order[]
  agent_user                agent_user?                 @relation(fields: [agentUserId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_order_agent_user_agentUserId")
  branch                    branch                      @relation(fields: [branchId], references: [id], onUpdate: Restrict, map: "fK_order_branch_branchId")
  country                   country?                    @relation(fields: [countryId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_order_country_countryId")
  district                  district?                   @relation(fields: [districtId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_order_district_districtId")
  project                   project                     @relation(fields: [projectId], references: [id], onUpdate: Restrict, map: "fK_order_projects_projectId")
  province                  province?                   @relation(fields: [provinceId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_order_province_provinceId")
  quotation                 quotation?                  @relation(fields: [quotationId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_order_quotations_quotationId")
  sub_district              sub_district?               @relation(fields: [subDistrictId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_order_sub_district_subDistrictId")
  zip_code                  zip_code?                   @relation(fields: [zipCodeId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_order_zip_code_zipCodeId")
  order_agent_user          order_agent_user[]
  order_attachment_display  order_attachment_display[]
  order_document            order_document[]
  order_item                order_item[]
  order_payment             order_payment[]
  order_status_tracking     order_status_tracking[]
  sale_order                sale_order[]
  sub_order                 sub_order[]
  tax_invoice               tax_invoice[]

  @@index([agentUserId], map: "iX_order_agentUserId")
  @@index([billingNumber], map: "iX_order_billingNumber")
  @@index([branchId], map: "iX_order_branchId")
  @@index([countryId], map: "iX_order_countryId")
  @@index([createdAt], map: "iX_order_createdAt")
  @@index([deliveryReceiveType], map: "iX_order_deliveryReceiveType")
  @@index([deliveryType], map: "iX_order_deliveryType")
  @@index([display], map: "iX_order_display")
  @@index([districtId], map: "iX_order_districtId")
  @@index([orderStatus], map: "iX_order_orderStatus")
  @@index([projectId], map: "iX_order_projectId")
  @@index([provinceId], map: "iX_order_provinceId")
  @@index([quotationId], map: "iX_order_quotationId")
  @@index([subDistrictId], map: "iX_order_subDistrictId")
  @@index([updatedAt], map: "iX_order_updatedAt")
  @@index([zipCodeId], map: "iX_order_zipCodeId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model order_agent_user {
  id          Int        @id @default(autoincrement())
  orderId     Int
  agentUserId Int
  percent     Int
  createdAt   DateTime?  @default(now()) @db.Timestamp(0)
  createdBy   String?    @db.VarChar(256)
  updatedAt   DateTime?  @default(now()) @db.Timestamp(0)
  updatedBy   String?    @db.VarChar(256)
  agent_user  agent_user @relation(fields: [agentUserId], references: [id], onUpdate: Restrict, map: "fK_order_agent_user_agent_user_agentUserId")
  order       order      @relation(fields: [orderId], references: [id], onUpdate: Restrict, map: "fK_order_agent_user_order_orderId")

  @@index([agentUserId], map: "iX_order_agent_user_agentUserId")
  @@index([createdAt], map: "iX_order_agent_user_createdAt")
  @@index([orderId], map: "iX_order_agent_user_orderId")
  @@index([updatedAt], map: "iX_order_agent_user_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model order_attachment_display {
  id        Int                             @id @default(autoincrement())
  orderId   Int
  status    order_attachment_display_status @default(Active)
  createdAt DateTime?                       @default(now()) @db.Timestamp(0)
  createdBy String?                         @db.VarChar(256)
  updatedAt DateTime?                       @default(now()) @db.Timestamp(0)
  updatedBy String?                         @db.VarChar(256)
  order     order                           @relation(fields: [orderId], references: [id], onUpdate: Restrict, map: "fK_order_attachment_display_order_orderId")

  @@index([createdAt], map: "iX_order_attachment_display_createdAt")
  @@index([orderId], map: "iX_order_attachment_display_orderId")
  @@index([status], map: "iX_order_attachment_display_status")
  @@index([updatedAt], map: "iX_order_attachment_display_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model order_document {
  id         Int       @id @default(autoincrement())
  orderId    Int
  documentId Int
  createdAt  DateTime? @default(now()) @db.Timestamp(0)
  createdBy  String?   @db.VarChar(256)
  updatedAt  DateTime? @default(now()) @db.Timestamp(0)
  updatedBy  String?   @db.VarChar(256)
  document   document  @relation(fields: [documentId], references: [id], onUpdate: Restrict, map: "fK_order_document_documents_documentId")
  order      order     @relation(fields: [orderId], references: [id], onUpdate: Restrict, map: "fK_order_document_order_orderId")

  @@index([createdAt], map: "iX_order_document_createdAt")
  @@index([documentId], map: "iX_order_document_documentId")
  @@index([orderId], map: "iX_order_document_orderId")
  @@index([updatedAt], map: "iX_order_document_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model order_image_qrcode {
  id        Int       @id @default(autoincrement())
  orderId   Int?
  imagesId  Int?
  createdAt DateTime? @default(now()) @db.Timestamp(0)
  createdBy String?   @db.VarChar(256)
  updatedAt DateTime? @default(now()) @db.Timestamp(0)
  updatedBy String?   @db.VarChar(256)

  @@index([createdAt], map: "iX_order_image_qrcode_createdAt")
  @@index([updatedAt], map: "iX_order_image_qrcode_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model order_item {
  id                                                                             Int                         @id @default(autoincrement())
  orderId                                                                        Int?
  subOrderId                                                                     Int?
  productId                                                                      Int?
  promotionBranchId                                                              Int?
  qty                                                                            Int
  price                                                                          Decimal                     @db.Decimal(18, 2)
  createdAt                                                                      DateTime?                   @default(now()) @db.Timestamp(0)
  createdBy                                                                      String?                     @db.VarChar(256)
  updatedAt                                                                      DateTime?                   @default(now()) @db.Timestamp(0)
  updatedBy                                                                      String?                     @db.VarChar(256)
  volumePricePromotionBranchId                                                   Int?
  quotationItemId                                                                Int?
  discount                                                                       Decimal?                    @default(0.00) @db.Decimal(18, 2)
  discountPremiumPromotionBranchId                                               Int?
  isPremium                                                                      Boolean                     @default(false)
  delivery_order_item                                                            delivery_order_item[]
  branch_product                                                                 branch_product?             @relation(fields: [productId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_order_item_branch_product_productId")
  order                                                                          order?                      @relation(fields: [orderId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_order_item_order_orderId")
  promotion_branch_order_item_promotionBranchIdTopromotion_branch                promotion_branch?           @relation("order_item_promotionBranchIdTopromotion_branch", fields: [promotionBranchId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_order_item_promotionBranches_promotionBranchId")
  promotion_branch_order_item_volumePricePromotionBranchIdTopromotion_branch     promotion_branch?           @relation("order_item_volumePricePromotionBranchIdTopromotion_branch", fields: [volumePricePromotionBranchId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_order_item_promotionBranches_volumePricePromotionBranchId")
  quotation_item                                                                 quotation_item?             @relation(fields: [quotationItemId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_order_item_quotationItems_quotationItemId")
  sub_order                                                                      sub_order?                  @relation(fields: [subOrderId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_order_item_subOrders_subOrderId")
  promotion_branch_order_item_discountPremiumPromotionBranchIdTopromotion_branch promotion_branch?           @relation("order_item_discountPremiumPromotionBranchIdTopromotion_branch", fields: [discountPremiumPromotionBranchId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_order_item_promotionBranches_discountPremiumPromotionBranchId")
  order_item_promotion                                                           order_item_promotion[]
  order_product_detail_item                                                      order_product_detail_item[]
  sale_order_item                                                                sale_order_item[]

  @@index([createdAt], map: "iX_order_item_createdAt")
  @@index([discountPremiumPromotionBranchId], map: "iX_order_item_discountPremiumPromotionBranchId")
  @@index([orderId], map: "iX_order_item_orderId")
  @@index([productId], map: "iX_order_item_productId")
  @@index([promotionBranchId], map: "iX_order_item_promotionBranchId")
  @@index([quotationItemId], map: "iX_order_item_quotationItemId")
  @@index([subOrderId], map: "iX_order_item_subOrderId")
  @@index([updatedAt], map: "iX_order_item_updatedAt")
  @@index([volumePricePromotionBranchId], map: "iX_order_item_volumePricePromotionBranchId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model order_item_promotion {
  id               Int              @id @default(autoincrement())
  orderItemId      Int?
  productVariantId Int?
  promotionId      Int?
  qty              Int
  price            Decimal          @db.Decimal(18, 2)
  createdAt        DateTime?        @default(now()) @db.Timestamp(0)
  createdBy        String?          @db.VarChar(256)
  updatedAt        DateTime?        @default(now()) @db.Timestamp(0)
  updatedBy        String?          @db.VarChar(256)
  order_item       order_item?      @relation(fields: [orderItemId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_order_item_promotion_order_item_orderItemId")
  product_variant  product_variant? @relation(fields: [productVariantId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_order_item_promotion_product_variant_productVariantId")
  promotion        promotion?       @relation(fields: [promotionId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_order_item_promotion_promotions_promotionId")

  @@index([createdAt], map: "iX_order_item_promotion_createdAt")
  @@index([orderItemId], map: "iX_order_item_promotion_orderItemId")
  @@index([productVariantId], map: "iX_order_item_promotion_productVariantId")
  @@index([promotionId], map: "iX_order_item_promotion_promotionId")
  @@index([updatedAt], map: "iX_order_item_promotion_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model order_item_temp {
  id                           Int       @id @default(autoincrement())
  subOrderTempId               Int?
  productBranchId              Int?
  promotionBranchId            Int?
  qty                          Int
  price                        Decimal   @db.Decimal(10, 2)
  volumePricePromotionBranchId Int?
  productVariantId             Int?
  promotionId                  Int?
  createdBy                    String?   @db.VarChar(255)
  createdAt                    DateTime? @default(now()) @db.Timestamp(0)
  updatedBy                    String?   @db.VarChar(255)
  updatedAt                    DateTime? @default(now()) @db.Timestamp(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model order_payment {
  id                                  Int                         @id @default(autoincrement())
  orderId                             Int
  subOrderId                          Int?
  paymentType                         order_payment_paymentType   @default(BankAccount)
  paymentStatus                       order_payment_paymentStatus @default(New)
  payAmount                           Decimal                     @db.Decimal(18, 2)
  payTime                             DateTime                    @db.DateTime(6)
  fromBankId                          Int?
  fromAccountNo                       String?                     @db.VarChar(64)
  toBankId                            Int?
  toAccountName                       String?                     @db.VarChar(256)
  toAccountNo                         String?                     @db.VarChar(64)
  toBranchName                        String?                     @db.VarChar(128)
  bankTransferDocumentId              Int?
  cardNumber                          String?                     @db.VarChar(64)
  holderName                          String?                     @db.VarChar(256)
  expireDate                          String?                     @db.VarChar(4)
  cCV                                 String?                     @db.VarChar(8)
  creditComments                      String?                     @db.VarChar(2048)
  reference1                          String?                     @db.VarChar(256)
  reference2                          String?                     @db.VarChar(256)
  createdAt                           DateTime?                   @default(now()) @db.Timestamp(0)
  createdBy                           String?                     @db.VarChar(256)
  updatedAt                           DateTime?                   @default(now()) @db.Timestamp(0)
  updatedBy                           String?                     @db.VarChar(256)
  transactionCode                     String?                     @db.VarChar(255)
  processingFeeNet                    Decimal?                    @db.Decimal(18, 2)
  bank_order_payment_fromBankIdTobank bank?                       @relation("order_payment_fromBankIdTobank", fields: [fromBankId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_order_payment_bank_fromBankId")
  bank_order_payment_toBankIdTobank   bank?                       @relation("order_payment_toBankIdTobank", fields: [toBankId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_order_payment_bank_toBankId")
  document                            document?                   @relation(fields: [bankTransferDocumentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_order_payment_document_bankTransferDocumentId")
  order                               order                       @relation(fields: [orderId], references: [id], onUpdate: Restrict, map: "fK_order_payment_order_orderId")
  sub_order                           sub_order?                  @relation(fields: [subOrderId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_order_payment_sub_order_subOrderId")
  order_payment_img                   order_payment_img[]
  order_payment_log                   order_payment_log[]

  @@index([bankTransferDocumentId], map: "iX_order_payment_bankTransferDocumentId")
  @@index([createdAt], map: "iX_order_payment_createdAt")
  @@index([fromBankId], map: "iX_order_payment_fromBankId")
  @@index([orderId], map: "iX_order_payment_orderId")
  @@index([paymentStatus], map: "iX_order_payment_paymentStatus")
  @@index([paymentType], map: "iX_order_payment_paymentType")
  @@index([subOrderId], map: "iX_order_payment_subOrderId")
  @@index([toBankId], map: "iX_order_payment_toBankId")
  @@index([updatedAt], map: "iX_order_payment_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model order_payment_img {
  id             Int           @id @default(autoincrement())
  orderPaymentId Int
  imageId        Int
  createdAt      DateTime?     @default(now()) @db.Timestamp(0)
  createdBy      String?       @db.VarChar(256)
  updatedAt      DateTime?     @default(now()) @db.Timestamp(0)
  updatedBy      String?       @db.VarChar(256)
  document       document      @relation(fields: [imageId], references: [id], onUpdate: Restrict, map: "fK_order_payment_img_document_imageId")
  order_payment  order_payment @relation(fields: [orderPaymentId], references: [id], onUpdate: Restrict, map: "fK_order_payment_img_order_payment_orderPaymentId")

  @@index([createdAt], map: "iX_order_payment_img_createdAt")
  @@index([imageId], map: "iX_order_payment_img_imageId")
  @@index([orderPaymentId], map: "iX_order_payment_img_orderPaymentId")
  @@index([updatedAt], map: "iX_order_payment_img_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model order_payment_log {
  id             Int           @id @default(autoincrement())
  orderPaymentId Int
  summary        String?       @db.VarChar(256)
  description    String?       @db.VarChar(4096)
  createdAt      DateTime?     @default(now()) @db.Timestamp(0)
  createdBy      String?       @db.VarChar(256)
  order_payment  order_payment @relation(fields: [orderPaymentId], references: [id], onUpdate: Restrict, map: "fK_order_payment_log_order_payment_orderPaymentId")

  @@index([createdAt], map: "iX_order_payment_log_createdAt")
  @@index([orderPaymentId], map: "iX_order_payment_log_orderPaymentId")
}

model order_premium {
  id                 Int       @id @default(autoincrement())
  orderId            Int
  productVariantId   Int
  productVariantName String?   @db.VarChar(500)
  qty                Int
  createdBy          String?   @db.VarChar(255)
  createdAt          DateTime? @default(now()) @db.DateTime(0)
  updatedBy          String?   @db.VarChar(255)
  updatedAt          DateTime? @default(now()) @db.DateTime(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model order_product_detail_item {
  id                  Int                  @id @default(autoincrement())
  deliveryOrderItemId Int?
  orderItemId         Int?
  saleOrderItemId     Int?
  branchProductId     Int
  qty                 Decimal              @db.Decimal(18, 2)
  originalQty         Decimal              @db.Decimal(18, 2)
  price               Decimal              @db.Decimal(18, 2)
  createdAt           DateTime?            @default(now()) @db.Timestamp(0)
  createdBy           String?              @db.VarChar(256)
  updatedAt           DateTime?            @default(now()) @db.Timestamp(0)
  updatedBy           String?              @db.VarChar(256)
  branch_product      branch_product       @relation(fields: [branchProductId], references: [id], onUpdate: Restrict, map: "fK_order_product_detail_item_branch_product_branchProductId")
  delivery_order_item delivery_order_item? @relation(fields: [deliveryOrderItemId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_order_product_detail_item_delivery_order_item_deliveryOrderI~")
  order_item          order_item?          @relation(fields: [orderItemId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_order_product_detail_item_order_item_orderItemId")
  sale_order_item     sale_order_item?     @relation(fields: [saleOrderItemId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_order_product_detail_item_sale_order_item_saleOrderItemId")

  @@index([branchProductId], map: "iX_order_product_detail_item_branchProductId")
  @@index([createdAt], map: "iX_order_product_detail_item_createdAt")
  @@index([deliveryOrderItemId], map: "iX_order_product_detail_item_deliveryOrderItemId")
  @@index([orderItemId], map: "iX_order_product_detail_item_orderItemId")
  @@index([saleOrderItemId], map: "iX_order_product_detail_item_saleOrderItemId")
  @@index([updatedAt], map: "iX_order_product_detail_item_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model order_status_tracking {
  id              Int                               @id @default(autoincrement())
  orderId         Int
  deliveryOrderId Int?
  orderStatus     order_status_tracking_orderStatus @default(New)
  createdAt       DateTime?                         @default(now()) @db.Timestamp(0)
  createdBy       String?                           @db.VarChar(256)
  delivery_order  delivery_order?                   @relation(fields: [deliveryOrderId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_order_status_tracking_delivery_order_deliveryOrderId")
  order           order                             @relation(fields: [orderId], references: [id], onUpdate: Restrict, map: "fK_order_status_tracking_order_orderId")

  @@index([createdAt], map: "iX_order_status_tracking_createdAt")
  @@index([deliveryOrderId], map: "iX_order_status_tracking_deliveryOrderId")
  @@index([orderId], map: "iX_order_status_tracking_orderId")
  @@index([orderStatus], map: "iX_order_status_tracking_orderStatus")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model order_temp {
  orderTempId         Int                            @default(autoincrement())
  orderDate           DateTime?                      @db.DateTime(0)
  orderNo             String?                        @db.VarChar(255)
  projectId           Int
  agentId             Int
  branchId            Int
  status              order_temp_status?
  isDisplay           Int?                           @default(1)
  isDraft             Int?                           @default(0)
  isView              Int?                           @default(0)
  version             Int                            @default(0)
  isLastVersion       Int                            @default(0)
  note                String?                        @db.Text
  deliveryType        order_temp_deliveryType        @default(AgentService)
  deliveryReceiveType order_temp_deliveryReceiveType @default(SENDONCE)
  totalProductPrice   Decimal?                       @db.Decimal(10, 2)
  totalDeliveryPrice  Decimal?                       @db.Decimal(10, 2)
  grandTotal          Decimal?                       @db.Decimal(10, 2)
  customerOrganizeId  Int?
  createdBy           String?                        @db.VarChar(255)
  createdAt           DateTime?                      @default(now()) @db.Timestamp(0)
  updatedBy           String?                        @db.VarChar(255)
  updatedAt           DateTime?                      @default(now()) @db.Timestamp(0)

  @@id([orderTempId, agentId])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model organize {
  organizeId        Int       @id @default(autoincrement())
  customerId        Int?
  organizeAllkonsId String?   @db.VarChar(255)
  organizeName      String?   @db.VarChar(255)
  organizeFilePath  String?   @db.Text
  createdAt         DateTime? @default(now()) @db.Timestamp(0)
  updatedAt         DateTime? @default(now()) @db.Timestamp(0)

  @@index([customerId], map: "idx_organize_customerId")
  @@index([organizeId], map: "idx_organize_id")
  @@index([organizeAllkonsId], map: "idx_organize_organizeAllkonsId")
  @@index([organizeName], map: "idx_organize_organizeName")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model organize_agent {
  id         Int       @id @default(autoincrement())
  accountId  Int
  organizeId Int?
  agentId    Int?
  createdAt  DateTime? @default(now()) @db.Timestamp(0)
  createdBy  String?   @db.VarChar(256)
  updatedAt  DateTime? @default(now()) @db.Timestamp(0)
  updatedBy  String?   @db.VarChar(256)
  agent      agent?    @relation(fields: [agentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_organize_agent_agent_agentId")

  @@index([agentId], map: "iX_organize_agent_agentId")
  @@index([createdAt], map: "iX_organize_agent_createdAt")
  @@index([updatedAt], map: "iX_organize_agent_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model organize_role {
  roleId     Int                     @id @default(autoincrement())
  organizeId Int
  roleName   String?                 @db.VarChar(255)
  roleType   organize_role_roleType? @default(MEMBER)
  status     organize_role_status?   @default(Active)
  createdBy  String?                 @db.VarChar(255)
  createdAt  DateTime?               @default(now()) @db.Timestamp(0)
  updatedBy  String?                 @db.VarChar(255)
  updatedAt  DateTime?               @default(now()) @db.Timestamp(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model organize_role_premission {
  id        Int       @id @default(autoincrement())
  roleId    Int
  menuId    Int?
  isView    Int?
  isManage  Int?
  createdBy String?   @db.VarChar(255)
  createdAt DateTime? @default(now()) @db.Timestamp(0)
  updatedBy String?   @db.VarChar(255)
  updatedAt DateTime? @default(now()) @db.Timestamp(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model organize_team {
  teamId       Int                   @id @default(autoincrement())
  organizeId   Int?
  name         String?               @db.VarChar(255)
  status       organize_team_status? @default(Active)
  note         String?               @db.Text
  createdBy    String?               @db.VarChar(255)
  createdAt    DateTime?             @default(now()) @db.Timestamp(0)
  updatedBy    String?               @db.VarChar(255)
  updatedAt    DateTime?             @default(now()) @db.Timestamp(0)
  isProjectAll Int?                  @default(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model organize_team_level {
  id        Int                         @id @default(autoincrement())
  teamId    Int
  floor     Int
  level     Int
  isCreate  Int?
  isVerify  Int?
  isApprove Int?
  status    organize_team_level_status? @default(Active)
  createdBy String?                     @db.VarChar(255)
  createdAt DateTime?                   @default(now()) @db.Timestamp(0)
  updatedBy String?                     @db.VarChar(255)
  updatedAt DateTime?                   @default(now()) @db.Timestamp(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model organize_team_member {
  id                 Int                          @id @default(autoincrement())
  teamId             Int
  customerOrganizeId Int
  levelId            Int
  status             organize_team_member_status? @default(Active)
  createdBy          String?                      @db.VarChar(255)
  createdAt          DateTime?                    @default(now()) @db.Timestamp(0)
  updatedBy          String?                      @db.VarChar(255)
  updatedAt          DateTime?                    @default(now()) @db.Timestamp(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model organize_team_project {
  id        Int                           @id @default(autoincrement())
  teamId    Int
  projectId Int
  status    organize_team_project_status? @default(Active)
  createdBy String?                       @db.VarChar(255)
  createdAt DateTime?                     @default(now()) @db.Timestamp(0)
  updatedBy String?                       @db.VarChar(255)
  updatedAt DateTime?                     @default(now()) @db.Timestamp(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model permission {
  id              Int                       @id @default(autoincrement())
  name            String?                   @db.VarChar(256)
  description     String?                   @db.VarChar(1024)
  permissionType  permission_permissionType @default(Product)
  permissionName  permission_permissionName @default(AgentProduct)
  createdAt       DateTime?                 @default(now()) @db.Timestamp(0)
  createdBy       String?                   @db.VarChar(256)
  updatedAt       DateTime?                 @default(now()) @db.Timestamp(0)
  updatedBy       String?                   @db.VarChar(256)
  order           Int                       @default(0)
  role_permission role_permission[]

  @@index([createdAt], map: "iX_permission_createdAt")
  @@index([permissionName], map: "iX_permission_permissionName")
  @@index([permissionType], map: "iX_permission_permissionType")
  @@index([updatedAt], map: "iX_permission_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model platform {
  id                 Int                  @id @default(autoincrement())
  name               String?              @db.VarChar(256)
  createdAt          DateTime?            @default(now()) @db.Timestamp(0)
  createdBy          String?              @db.VarChar(256)
  updatedAt          DateTime?            @default(now()) @db.Timestamp(0)
  updatedBy          String?              @db.VarChar(256)
  description        String?              @db.VarChar(1024)
  displayOrder       Int
  promotion_platform promotion_platform[]

  @@index([createdAt], map: "iX_platform_createdAt")
  @@index([updatedAt], map: "iX_platform_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model product {
  id                       Int                        @id @default(autoincrement())
  name                     String?                    @db.VarChar(300)
  description              String?                    @db.VarChar(4096)
  d365Sku                  String?                    @db.VarChar(128)
  d365ItemCode             String?                    @db.VarChar(128)
  brandId                  Int?
  status                   product_status             @default(Active)
  productTM                Boolean?
  createdAt                DateTime?                  @default(now()) @db.Timestamp(0)
  createdBy                String?                    @db.VarChar(256)
  updatedAt                DateTime?                  @default(now()) @db.Timestamp(0)
  updatedBy                String?                    @db.VarChar(256)
  productStatus            product_productStatus      @default(Draft)
  isSearchDirty            Boolean                    @default(true)
  skuUUID                  String?                    @db.VarChar(128)
  brand                    brand?                     @relation(fields: [brandId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_product_brand_brandId")
  product_category         product_category[]
  product_dimension        product_dimension[]
  product_image            product_image[]
  product_tag              product_tag[]
  product_variant          product_variant[]
  product_variant_category product_variant_category[]

  @@index([brandId], map: "iX_product_brandId")
  @@index([createdAt], map: "iX_product_createdAt")
  @@index([productStatus], map: "iX_product_productStatus")
  @@index([status], map: "iX_product_status")
  @@index([updatedAt], map: "iX_product_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model product_attribute_master {
  id                        Int                                    @id @default(autoincrement())
  name                      String                                 @db.VarChar(256)
  description               String?                                @db.VarChar(2048)
  attributeType             product_attribute_master_attributeType @default(Integer)
  displayOrder              Int
  status                    product_attribute_master_status        @default(Active)
  createdAt                 DateTime?                              @default(now()) @db.Timestamp(0)
  createdBy                 String?                                @db.VarChar(256)
  updatedAt                 DateTime?                              @default(now()) @db.Timestamp(0)
  updatedBy                 String?                                @db.VarChar(256)
  product_variant_attribute product_variant_attribute[]

  @@index([attributeType], map: "iX_product_attribute_master_attributeType")
  @@index([createdAt], map: "iX_product_attribute_master_createdAt")
  @@index([status], map: "iX_product_attribute_master_status")
  @@index([updatedAt], map: "iX_product_attribute_master_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model product_brand_supplier {
  id             Int                            @id @default(autoincrement())
  productId      Int?
  productBrand   String?                        @db.VarChar(255)
  supplierNumber String?                        @db.VarChar(255)
  status         product_brand_supplier_status? @default(Active)
  createdAt      DateTime?                      @default(now()) @db.Timestamp(0)
  createdBy      String?                        @db.VarChar(255)
  updatedBy      String?                        @db.VarChar(255)
  updatedAt      DateTime                       @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model product_category {
  id            Int       @id @default(autoincrement())
  productId     Int
  categoryId    Int
  createdAt     DateTime? @default(now()) @db.Timestamp(0)
  createdBy     String?   @db.VarChar(256)
  updatedAt     DateTime? @default(now()) @db.Timestamp(0)
  updatedBy     String?   @db.VarChar(256)
  isSearchDirty Boolean   @default(true)
  category      category  @relation(fields: [categoryId], references: [id], onUpdate: Restrict, map: "fK_product_category_category_categoryId")
  product       product   @relation(fields: [productId], references: [id], onUpdate: Restrict, map: "fK_product_category_product_productId")

  @@index([categoryId], map: "iX_product_category_categoryId")
  @@index([createdAt], map: "iX_product_category_createdAt")
  @@index([productId], map: "iX_product_category_productId")
  @@index([updatedAt], map: "iX_product_category_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model product_dimension {
  id                        Int                         @id @default(autoincrement())
  productId                 Int
  productDimensionMasterId  Int
  displayOrder              String?                     @db.VarChar(128)
  createdAt                 DateTime?                   @default(now()) @db.Timestamp(0)
  createdBy                 String?                     @db.VarChar(256)
  updatedAt                 DateTime?                   @default(now()) @db.Timestamp(0)
  updatedBy                 String?                     @db.VarChar(256)
  isSearchDirty             Boolean                     @default(true)
  product_dimension_master  product_dimension_master    @relation(fields: [productDimensionMasterId], references: [id], onUpdate: Restrict, map: "fK_product_dimension_productDimensionMasters_productDimensionMa~")
  product                   product                     @relation(fields: [productId], references: [id], onUpdate: Restrict, map: "fK_product_dimension_product_productId")
  product_variant_dimension product_variant_dimension[]

  @@index([createdAt], map: "iX_product_dimension_createdAt")
  @@index([productDimensionMasterId], map: "iX_product_dimension_productDimensionMasterId")
  @@index([productId], map: "iX_product_dimension_productId")
  @@index([updatedAt], map: "iX_product_dimension_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model product_dimension_master {
  id                Int                 @id @default(autoincrement())
  name              String              @db.VarChar(256)
  description       String?             @db.VarChar(2048)
  promptText        String?             @db.VarChar(256)
  displayOrder      Int?
  createdAt         DateTime?           @default(now()) @db.Timestamp(0)
  createdBy         String?             @db.VarChar(256)
  updatedAt         DateTime?           @default(now()) @db.Timestamp(0)
  updatedBy         String?             @db.VarChar(256)
  isSearchDirty     Boolean             @default(true)
  product_dimension product_dimension[]

  @@index([createdAt], map: "iX_product_dimension_master_createdAt")
  @@index([updatedAt], map: "iX_product_dimension_master_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model product_image {
  id            Int       @id @default(autoincrement())
  productId     Int
  imageId       Int
  order         Int
  createdAt     DateTime? @default(now()) @db.Timestamp(0)
  createdBy     String?   @db.VarChar(256)
  updatedAt     DateTime? @default(now()) @db.Timestamp(0)
  updatedBy     String?   @db.VarChar(256)
  isSearchDirty Boolean   @default(true)
  document      document  @relation(fields: [imageId], references: [id], onUpdate: Restrict, map: "fK_product_image_documents_imageId")
  product       product   @relation(fields: [productId], references: [id], onUpdate: Restrict, map: "fK_product_image_product_productId")

  @@index([createdAt], map: "iX_product_image_createdAt")
  @@index([imageId], map: "iX_product_image_imageId")
  @@index([productId], map: "iX_product_image_productId")
  @@index([updatedAt], map: "iX_product_image_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model product_pricing_by_customer_group {
  id               Int             @id @default(autoincrement())
  customerGroupId  Int
  branchId         Int
  productVariantId Int
  price            Decimal?        @db.Decimal(18, 2)
  isActiveAgent    Boolean
  createdAt        DateTime?       @default(now()) @db.Timestamp(0)
  createdBy        String?         @db.VarChar(256)
  updatedAt        DateTime?       @default(now()) @db.Timestamp(0)
  updatedBy        String?         @db.VarChar(256)
  priceExcludeVAT  Decimal?        @db.Decimal(18, 2)
  branch           branch          @relation(fields: [branchId], references: [id], onUpdate: Restrict, map: "fK_product_pricing_by_customer_group_branch_branchId")
  customer_group   customer_group  @relation(fields: [customerGroupId], references: [id], onUpdate: Restrict, map: "fK_product_pricing_by_customer_group_customer_group_customerGro~")
  product_variant  product_variant @relation(fields: [productVariantId], references: [id], onUpdate: Restrict, map: "fK_product_pricing_by_customer_group_product_variant_productVar~")

  @@index([branchId], map: "iX_product_pricing_by_customer_group_branchId")
  @@index([createdAt], map: "iX_product_pricing_by_customer_group_createdAt")
  @@index([customerGroupId], map: "iX_product_pricing_by_customer_group_customerGroupId")
  @@index([productVariantId], map: "iX_product_pricing_by_customer_group_productVariantId")
  @@index([updatedAt], map: "iX_product_pricing_by_customer_group_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model product_pricing_by_customer_group_agent {
  id               Int             @id @default(autoincrement())
  customerGroupId  Int
  agentId          Int
  productVariantId Int
  price            Decimal?        @db.Decimal(18, 2)
  createdAt        DateTime?       @default(now()) @db.Timestamp(0)
  createdBy        String?         @db.VarChar(256)
  updatedAt        DateTime?       @default(now()) @db.Timestamp(0)
  updatedBy        String?         @db.VarChar(256)
  priceExcludeVAT  Decimal?        @db.Decimal(18, 2)
  agent            agent           @relation(fields: [agentId], references: [id], onUpdate: Restrict, map: "fK_product_pricing_by_customer_group_agent_agent_agentId")
  customer_group   customer_group  @relation(fields: [customerGroupId], references: [id], onUpdate: Restrict, map: "fK_product_pricing_by_customer_group_agent_customer_group_custo~")
  product_variant  product_variant @relation(fields: [productVariantId], references: [id], onUpdate: Restrict, map: "fK_product_pricing_by_customer_group_agent_product_variant_prod~")

  @@index([agentId], map: "iX_product_pricing_by_customer_group_agent_agentId")
  @@index([createdAt], map: "iX_product_pricing_by_customer_group_agent_createdAt")
  @@index([customerGroupId], map: "iX_product_pricing_by_customer_group_agent_customerGroupId")
  @@index([productVariantId], map: "iX_product_pricing_by_customer_group_agent_productVariantId")
  @@index([updatedAt], map: "iX_product_pricing_by_customer_group_agent_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model product_search_history {
  id         Int                           @id @default(autoincrement())
  customerId Int?
  agentId    Int?
  name       String?                       @db.LongText
  status     product_search_history_status @default(Active)
  createdAt  DateTime?                     @default(now()) @db.Timestamp(0)
  createdBy  String?                       @db.VarChar(256)
  updatedAt  DateTime?                     @default(now()) @db.Timestamp(0)
  updatedBy  String?                       @db.VarChar(256)
  branchId   Int?
  agent      agent?                        @relation(fields: [agentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_product_search_history_agent_agentId")
  branch     branch?                       @relation(fields: [branchId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_product_search_history_branch_branchId")
  customer   customer?                     @relation(fields: [customerId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_product_search_history_customer_customerId")

  @@index([agentId], map: "iX_product_search_history_agentId")
  @@index([branchId], map: "iX_product_search_history_branchId")
  @@index([createdAt], map: "iX_product_search_history_createdAt")
  @@index([customerId], map: "iX_product_search_history_customerId")
  @@index([status], map: "iX_product_search_history_status")
  @@index([updatedAt], map: "iX_product_search_history_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model product_tag {
  id            Int       @id @default(autoincrement())
  productId     Int
  tagName       String?   @db.VarChar(300)
  createdAt     DateTime? @default(now()) @db.Timestamp(0)
  createdBy     String?   @db.VarChar(256)
  updatedAt     DateTime? @default(now()) @db.Timestamp(0)
  updatedBy     String?   @db.VarChar(256)
  isSearchDirty Boolean   @default(true)
  product       product   @relation(fields: [productId], references: [id], onUpdate: Restrict, map: "fK_product_tag_product_productId")

  @@index([createdAt], map: "iX_product_tag_createdAt")
  @@index([productId], map: "iX_product_tag_productId")
  @@index([updatedAt], map: "iX_product_tag_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model product_variant {
  id                                                                                        Int                                       @id @default(autoincrement())
  alias                                                                                     String?                                   @db.VarChar(500)
  sku                                                                                       String?                                   @db.VarChar(128)
  d365Sku                                                                                   String?                                   @db.VarChar(128)
  d365ItemCode                                                                              String?                                   @db.VarChar(128)
  barcode                                                                                   String?                                   @db.VarChar(128)
  internalBarcode                                                                           String?                                   @db.VarChar(128)
  d365Barcode                                                                               String?                                   @db.VarChar(128)
  salesUnit                                                                                 String?                                   @db.VarChar(128)
  description                                                                               String?                                   @db.LongText
  howToUseText                                                                              String?                                   @db.LongText
  suggestionText                                                                            String?                                   @db.LongText
  cautionText                                                                               String?                                   @db.LongText
  urlVideo                                                                                  String?                                   @db.VarChar(500)
  series                                                                                    String?                                   @db.VarChar(200)
  model                                                                                     String?                                   @db.VarChar(200)
  material                                                                                  String?                                   @db.VarChar(100)
  tIS                                                                                       String?                                   @db.VarChar(200)
  guarantee                                                                                 String?                                   @db.VarChar(128)
  detailGuarantee                                                                           String?                                   @db.VarChar(2000)
  countryId                                                                                 Int?
  packageWidth                                                                              Decimal?                                  @db.Decimal(18, 2)
  packageWidthUnit                                                                          String?                                   @db.LongText
  packageHeight                                                                             Decimal?                                  @db.Decimal(18, 2)
  packageHeightUnit                                                                         String?                                   @db.LongText
  packageDepth                                                                              Decimal?                                  @db.Decimal(18, 2)
  packageDepthUnit                                                                          String?                                   @db.LongText
  packageShape                                                                              String?                                   @db.LongText
  productWidth                                                                              Decimal?                                  @db.Decimal(18, 2)
  productWidthUnit                                                                          String?                                   @db.LongText
  productHeight                                                                             Decimal?                                  @db.Decimal(18, 2)
  productHeightUnit                                                                         String?                                   @db.LongText
  productDepth                                                                              Decimal?                                  @db.Decimal(18, 2)
  productDepthUnit                                                                          String?                                   @db.LongText
  grossWeight                                                                               Decimal?                                  @db.Decimal(18, 2)
  grossWeightUnit                                                                           String?                                   @db.LongText
  netWeight                                                                                 Decimal?                                  @db.Decimal(18, 2)
  netWeightUnit                                                                             String?                                   @db.LongText
  productStatus                                                                             product_variant_productStatus             @default(Draft)
  status                                                                                    product_variant_status                    @default(Active)
  productId                                                                                 Int?
  createdAt                                                                                 DateTime?                                 @default(now()) @db.Timestamp(0)
  createdBy                                                                                 String?                                   @db.VarChar(256)
  updatedAt                                                                                 DateTime?                                 @default(now()) @db.Timestamp(0)
  updatedBy                                                                                 String?                                   @db.VarChar(256)
  internalBarcodD356                                                                        String?                                   @db.VarChar(128)
  isSearchDirty                                                                             Boolean                                   @default(true)
  skuUUID                                                                                   String?                                   @db.VarChar(128)
  agent_product                                                                             agent_product[]
  boq_product_detail_item                                                                   boq_product_detail_item[]
  branch_product                                                                            branch_product[]
  cart_item_promotion                                                                       cart_item_promotion[]
  compare_product                                                                           compare_product[]
  compare_product_tracking                                                                  compare_product_tracking[]
  matching_result_item                                                                      matching_result_item[]
  order_item_promotion                                                                      order_item_promotion[]
  product_pricing_by_customer_group                                                         product_pricing_by_customer_group[]
  product_pricing_by_customer_group_agent                                                   product_pricing_by_customer_group_agent[]
  country                                                                                   country?                                  @relation(fields: [countryId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_product_variant_countries_countryId")
  product                                                                                   product?                                  @relation(fields: [productId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_product_variant_product_productId")
  product_variant_attribute                                                                 product_variant_attribute[]
  product_variant_category                                                                  product_variant_category[]
  product_variant_dimension                                                                 product_variant_dimension[]
  product_variant_document                                                                  product_variant_document[]
  product_variant_image                                                                     product_variant_image[]
  product_variant_pricing                                                                   product_variant_pricing[]
  product_variant_review                                                                    product_variant_review[]
  product_variant_special_pricing                                                           product_variant_special_pricing[]
  product_variant_tag                                                                       product_variant_tag[]
  promotion_combo_set_item                                                                  promotion_combo_set_item[]
  promotion_discount_combo_condition                                                        promotion_discount_combo_condition[]
  promotion_discount_combo_item                                                             promotion_discount_combo_item[]
  promotion_premium_combo_condition_item                                                    promotion_premium_combo_condition_item[]
  promotion_premium_combo_item                                                              promotion_premium_combo_item[]
  promotion_premium_condition_item                                                          promotion_premium_condition_item[]
  promotion_premium_premium_item                                                            promotion_premium_premium_item[]
  promotion_volume_item                                                                     promotion_volume_item[]
  sub_boq_item                                                                              sub_boq_item[]
  temp_product_variant_price_temp_product_variant_price_productVariantIdToproduct_variant   temp_product_variant_price?               @relation("temp_product_variant_price_productVariantIdToproduct_variant")
  temp_product_variant_price_temp_product_variant_price_tbProductVariantIdToproduct_variant temp_product_variant_price[]              @relation("temp_product_variant_price_tbProductVariantIdToproduct_variant")

  @@index([countryId], map: "iX_product_variant_countryId")
  @@index([createdAt], map: "iX_product_variant_createdAt")
  @@index([productId], map: "iX_product_variant_productId")
  @@index([productStatus], map: "iX_product_variant_productStatus")
  @@index([status], map: "iX_product_variant_status")
  @@index([updatedAt], map: "iX_product_variant_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model product_variant_attribute {
  id                       Int                              @id @default(autoincrement())
  productVariantId         Int
  productAttributeMasterId Int
  stringValue              String                           @db.VarChar(256)
  numberValue              Decimal?                         @db.Decimal(18, 2)
  createdAt                DateTime?                        @default(now()) @db.Timestamp(0)
  createdBy                String?                          @db.VarChar(256)
  updatedAt                DateTime?                        @default(now()) @db.Timestamp(0)
  updatedBy                String?                          @db.VarChar(256)
  status                   product_variant_attribute_status @default(Active)
  isSearchDirty            Boolean                          @default(true)
  product_attribute_master product_attribute_master         @relation(fields: [productAttributeMasterId], references: [id], onUpdate: Restrict, map: "fK_product_variant_attribute_productAttributeMasters_productAtt~")
  product_variant          product_variant                  @relation(fields: [productVariantId], references: [id], onUpdate: Restrict, map: "fK_product_variant_attribute_product_variant_productVariantId")

  @@index([createdAt], map: "iX_product_variant_attribute_createdAt")
  @@index([productAttributeMasterId], map: "iX_product_variant_attribute_productAttributeMasterId")
  @@index([productVariantId], map: "iX_product_variant_attribute_productVariantId")
  @@index([status], map: "iX_product_variant_attribute_status")
  @@index([updatedAt], map: "iX_product_variant_attribute_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model product_variant_category {
  id               Int                             @id @default(autoincrement())
  productVariantId Int
  productId        Int
  brandId          Int
  categoryId       Int
  hierarchy        String?                         @db.VarChar(100)
  categoryD365     String?                         @db.VarChar(100)
  categoryM        String?                         @db.VarChar(100)
  categorySupplier String?                         @db.VarChar(100)
  status           product_variant_category_status @default(Active)
  createdAt        DateTime?                       @default(now()) @db.Timestamp(0)
  createdBy        String?                         @db.VarChar(256)
  updatedAt        DateTime?                       @default(now()) @db.Timestamp(0)
  updatedBy        String?                         @db.VarChar(256)
  isSearchDirty    Boolean                         @default(true)
  brand            brand                           @relation(fields: [brandId], references: [id], onUpdate: Restrict, map: "fK_product_variant_category_brand_brandId")
  category         category                        @relation(fields: [categoryId], references: [id], onUpdate: Restrict, map: "fK_product_variant_category_category_categoryId")
  product          product                         @relation(fields: [productId], references: [id], onUpdate: Restrict, map: "fK_product_variant_category_product_productId")
  product_variant  product_variant                 @relation(fields: [productVariantId], references: [id], onUpdate: Restrict, map: "fK_product_variant_category_product_variant_productVariantId")

  @@index([brandId], map: "iX_product_variant_category_brandId")
  @@index([categoryId], map: "iX_product_variant_category_categoryId")
  @@index([createdAt], map: "iX_product_variant_category_createdAt")
  @@index([productId], map: "iX_product_variant_category_productId")
  @@index([productVariantId], map: "iX_product_variant_category_productVariantId")
  @@index([status], map: "iX_product_variant_category_status")
  @@index([updatedAt], map: "iX_product_variant_category_updatedAt")
}

model product_variant_code {
  id               Int                          @id @default(autoincrement())
  productVariantId Int?
  skuCode          String?                      @db.VarChar(255)
  type             String?                      @db.VarChar(255)
  status           product_variant_code_status? @default(Active)
  createdAt        DateTime?                    @default(now()) @db.Timestamp(0)
  createdBy        String?                      @db.VarChar(255)
  updatedBy        String?                      @db.VarChar(255)
  updatedAt        DateTime                     @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model product_variant_dimension {
  id                 Int               @id @default(autoincrement())
  productVariantId   Int
  productDimensionId Int
  value              String?           @db.VarChar(256)
  createdAt          DateTime?         @default(now()) @db.Timestamp(0)
  createdBy          String?           @db.VarChar(256)
  updatedAt          DateTime?         @default(now()) @db.Timestamp(0)
  updatedBy          String?           @db.VarChar(256)
  isSearchDirty      Boolean           @default(true)
  product_dimension  product_dimension @relation(fields: [productDimensionId], references: [id], onUpdate: Restrict, map: "fK_product_variant_dimension_product_dimension_productDimension~")
  product_variant    product_variant   @relation(fields: [productVariantId], references: [id], onUpdate: Restrict, map: "fK_product_variant_dimension_product_variant_productVariantId")

  @@index([createdAt], map: "iX_product_variant_dimension_createdAt")
  @@index([productDimensionId], map: "iX_product_variant_dimension_productDimensionId")
  @@index([productVariantId], map: "iX_product_variant_dimension_productVariantId")
  @@index([updatedAt], map: "iX_product_variant_dimension_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model product_variant_document {
  id               Int                                   @id @default(autoincrement())
  productVariantId Int
  documentId       Int
  documentType     product_variant_document_documentType @default(Howto)
  createdAt        DateTime?                             @default(now()) @db.Timestamp(0)
  createdBy        String?                               @db.VarChar(256)
  updatedAt        DateTime?                             @default(now()) @db.Timestamp(0)
  updatedBy        String?                               @db.VarChar(256)
  isSearchDirty    Boolean                               @default(true)
  document         document                              @relation(fields: [documentId], references: [id], onUpdate: Restrict, map: "fK_product_variant_document_documents_documentId")
  product_variant  product_variant                       @relation(fields: [productVariantId], references: [id], onUpdate: Restrict, map: "fK_product_variant_document_product_variant_productVariantId")

  @@index([createdAt], map: "iX_product_variant_document_createdAt")
  @@index([documentId], map: "iX_product_variant_document_documentId")
  @@index([documentType], map: "iX_product_variant_document_documentType")
  @@index([productVariantId], map: "iX_product_variant_document_productVariantId")
  @@index([updatedAt], map: "iX_product_variant_document_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model product_variant_image {
  id               Int             @id @default(autoincrement())
  productVariantId Int
  imagesId         Int
  order            Int
  createdAt        DateTime?       @default(now()) @db.Timestamp(0)
  createdBy        String?         @db.VarChar(256)
  updatedAt        DateTime?       @default(now()) @db.Timestamp(0)
  updatedBy        String?         @db.VarChar(256)
  isSearchDirty    Boolean         @default(true)
  document         document        @relation(fields: [imagesId], references: [id], onUpdate: Restrict, map: "fK_product_variant_image_documents_imagesId")
  product_variant  product_variant @relation(fields: [productVariantId], references: [id], onUpdate: Restrict, map: "fK_product_variant_image_product_variant_productVariantId")

  @@index([createdAt], map: "iX_product_variant_image_createdAt")
  @@index([imagesId], map: "iX_product_variant_image_imagesId")
  @@index([productVariantId], map: "iX_product_variant_image_productVariantId")
  @@index([updatedAt], map: "iX_product_variant_image_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model product_variant_pricing {
  id               Int             @id @default(autoincrement())
  branchId         Int
  productVariantId Int
  price            Decimal         @db.Decimal(18, 2)
  createdAt        DateTime?       @default(now()) @db.Timestamp(0)
  createdBy        String?         @db.VarChar(256)
  updatedAt        DateTime?       @default(now()) @db.Timestamp(0)
  updatedBy        String?         @db.VarChar(256)
  branch           branch          @relation(fields: [branchId], references: [id], onUpdate: Restrict, map: "fK_product_variant_pricing_branch_branchId")
  product_variant  product_variant @relation(fields: [productVariantId], references: [id], onUpdate: Restrict, map: "fK_product_variant_pricing_product_variant_productVariantId")

  @@index([branchId], map: "iX_product_variant_pricing_branchId")
  @@index([createdAt], map: "iX_product_variant_pricing_createdAt")
  @@index([productVariantId], map: "iX_product_variant_pricing_productVariantId")
  @@index([updatedAt], map: "iX_product_variant_pricing_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model product_variant_review {
  id               Int             @id @default(autoincrement())
  productVariantId Int
  customerId       Int
  customerName     String?         @db.VarChar(128)
  review           String?         @db.LongText
  createdAt        DateTime?       @default(now()) @db.Timestamp(0)
  createdBy        String?         @db.VarChar(256)
  updatedAt        DateTime?       @default(now()) @db.Timestamp(0)
  updatedBy        String?         @db.VarChar(256)
  customer         customer        @relation(fields: [customerId], references: [id], onUpdate: Restrict, map: "fK_product_variant_review_customers_customerId")
  product_variant  product_variant @relation(fields: [productVariantId], references: [id], onUpdate: Restrict, map: "fK_product_variant_review_product_variant_productVariantId")

  @@index([createdAt], map: "iX_product_variant_review_createdAt")
  @@index([customerId], map: "iX_product_variant_review_customerId")
  @@index([productVariantId], map: "iX_product_variant_review_productVariantId")
  @@index([updatedAt], map: "iX_product_variant_review_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model product_variant_special_pricing {
  id               Int             @id @default(autoincrement())
  branchId         Int
  productVariantId Int
  startDate        DateTime        @db.DateTime(6)
  endDate          DateTime        @db.DateTime(6)
  price            Decimal         @db.Decimal(18, 2)
  createdAt        DateTime?       @default(now()) @db.Timestamp(0)
  createdBy        String?         @db.VarChar(256)
  updatedAt        DateTime?       @default(now()) @db.Timestamp(0)
  updatedBy        String?         @db.VarChar(256)
  branch           branch          @relation(fields: [branchId], references: [id], onUpdate: Restrict, map: "fK_product_variant_special_pricing_branch_branchId")
  product_variant  product_variant @relation(fields: [productVariantId], references: [id], onUpdate: Restrict, map: "fK_product_variant_special_pricing_product_variant_productVaria~")

  @@index([branchId], map: "iX_product_variant_special_pricing_branchId")
  @@index([createdAt], map: "iX_product_variant_special_pricing_createdAt")
  @@index([productVariantId], map: "iX_product_variant_special_pricing_productVariantId")
  @@index([updatedAt], map: "iX_product_variant_special_pricing_updatedAt")
}

model product_variant_supplier {
  id               Int                              @id @default(autoincrement())
  productVariantId Int?
  sourceId         String?                          @db.VarChar(255)
  type             String?                          @db.VarChar(255)
  productBrand     String?                          @db.VarChar(255)
  supplierNumber   String?                          @db.VarChar(255)
  status           product_variant_supplier_status? @default(Active)
  createdBy        String?                          @db.VarChar(255)
  createdAt        DateTime?                        @default(now()) @db.Timestamp(0)
  updatedBy        String?                          @db.VarChar(255)
  updatedAt        DateTime?                        @default(now()) @db.Timestamp(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model product_variant_tag {
  id               Int             @id @default(autoincrement())
  productVariantId Int
  tagName          String?         @db.VarChar(300)
  createdAt        DateTime?       @default(now()) @db.Timestamp(0)
  createdBy        String?         @db.VarChar(256)
  updatedAt        DateTime?       @default(now()) @db.Timestamp(0)
  updatedBy        String?         @db.VarChar(256)
  isSearchDirty    Boolean         @default(true)
  product_variant  product_variant @relation(fields: [productVariantId], references: [id], onUpdate: Restrict, map: "fK_product_variant_tag_product_variant_productVariantId")

  @@index([createdAt], map: "iX_product_variant_tag_createdAt")
  @@index([productVariantId], map: "iX_product_variant_tag_productVariantId")
  @@index([updatedAt], map: "iX_product_variant_tag_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model project {
  id                                 Int                                  @id @default(autoincrement())
  customerId                         Int
  name                               String?                              @db.VarChar(256)
  address                            String?                              @db.VarChar(1024)
  countryId                          Int?
  provinceId                         Int?
  districtId                         Int?
  subDistrictId                      Int?
  zipCodeId                          Int?
  receiverName                       String?                              @db.VarChar(128)
  receiverPhone                      String?                              @db.VarChar(128)
  description                        String?                              @db.VarChar(2048)
  latitude                           Float
  longitude                          Float
  status                             project_status                       @default(Active)
  usage                              project_usage                        @default(Active)
  createdAt                          DateTime?                            @default(now()) @db.Timestamp(0)
  createdBy                          String?                              @db.VarChar(256)
  updatedAt                          DateTime?                            @default(now()) @db.Timestamp(0)
  updatedBy                          String?                              @db.VarChar(256)
  gpsLocation                        Unsupported("point")?
  cisNumber                          String?                              @db.VarChar(255)
  boq                                boq[]
  cart                               cart[]
  customer_delivery_address          customer_delivery_address[]
  customer_favorite_agent            customer_favorite_agent[]
  customer_location_delivery_address customer_location_delivery_address[]
  customer_project_invoice           customer_project_invoice[]
  customer_project_location_delivery customer_project_location_delivery[]
  customer_tax_invoice_address       customer_tax_invoice_address[]
  log_cart_item                      log_cart_item[]
  order                              order[]
  country                            country?                             @relation(fields: [countryId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_project_country_countryId")
  customer                           customer                             @relation(fields: [customerId], references: [id], onUpdate: Restrict, map: "fK_project_customer_customerId")
  district                           district?                            @relation(fields: [districtId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_project_district_districtId")
  province                           province?                            @relation(fields: [provinceId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_project_province_provinceId")
  sub_district                       sub_district?                        @relation(fields: [subDistrictId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_project_sub_district_subDistrictId")
  zip_code                           zip_code?                            @relation(fields: [zipCodeId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_project_zip_code_zipCodeId")

  @@index([countryId], map: "iX_project_countryId")
  @@index([createdAt], map: "iX_project_createdAt")
  @@index([customerId], map: "iX_project_customerId")
  @@index([districtId], map: "iX_project_districtId")
  @@index([gpsLocation(length: 25)], map: "iX_project_gpsLocation")
  @@index([provinceId], map: "iX_project_provinceId")
  @@index([status], map: "iX_project_status")
  @@index([subDistrictId], map: "iX_project_subDistrictId")
  @@index([updatedAt], map: "iX_project_updatedAt")
  @@index([usage], map: "iX_project_usage")
  @@index([zipCodeId], map: "iX_project_zipCodeId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model promotion {
  id                                                                                       Int                                      @id @default(autoincrement())
  agentId                                                                                  Int
  name                                                                                     String                                   @db.VarChar(256)
  sku                                                                                      String                                   @db.VarChar(64)
  beginEffectiveDate                                                                       DateTime?                                @db.DateTime(6)
  endEffectiveDate                                                                         DateTime?                                @db.DateTime(6)
  deliveryDueDate                                                                          DateTime?                                @db.DateTime(6)
  promotionStatus                                                                          promotion_promotionStatus                @default(Active)
  promotionType                                                                            promotion_promotionType                  @default(ComboSet)
  promotionCustomerType                                                                    promotion_promotionCustomerType          @default(Branch)
  d365ComboSetNumber                                                                       String?                                  @db.VarChar(128)
  premiumPrice                                                                             Decimal?                                 @db.Decimal(18, 2)
  everEnabled                                                                              Boolean
  status                                                                                   promotion_status                         @default(Active)
  createdAt                                                                                DateTime?                                @default(now()) @db.Timestamp(0)
  createdBy                                                                                String?                                  @db.VarChar(256)
  updatedAt                                                                                DateTime?                                @default(now()) @db.Timestamp(0)
  updatedBy                                                                                String?                                  @db.VarChar(256)
  description                                                                              String?                                  @db.VarChar(2000)
  howToUseText                                                                             String?                                  @db.VarChar(2000)
  discountType                                                                             Int?
  discountUnit                                                                             Int?
  unitType                                                                                 Int?
  premiumPriceExcludeVAT                                                                   Decimal?                                 @db.Decimal(18, 2)
  isSelectAllArea                                                                          Boolean                                  @default(false)
  isSelectAllBranch                                                                        Boolean                                  @default(false)
  isSelectAllCustomerGroup                                                                 Boolean                                  @default(false)
  includeAgentCustomer                                                                     Boolean
  includeRegularCustomer                                                                   Boolean
  cart_item_promotion                                                                      cart_item_promotion[]
  log_cart_item                                                                            log_cart_item[]
  order_item_promotion                                                                     order_item_promotion[]
  agent                                                                                    agent                                    @relation(fields: [agentId], references: [id], onUpdate: Restrict, map: "fK_promotion_agent_agentId")
  d365combo_set                                                                            d365combo_set?                           @relation(fields: [d365ComboSetNumber], references: [d365ComboSetNumber], onDelete: Restrict, onUpdate: Restrict, map: "fK_promotion_d365combo_set_d365ComboSetNumber")
  promotion_branch                                                                         promotion_branch[]
  promotion_combo_set_item                                                                 promotion_combo_set_item[]
  promotion_customer                                                                       promotion_customer[]
  promotion_customer_group                                                                 promotion_customer_group[]
  promotion_discount_combo_condition                                                       promotion_discount_combo_condition[]
  promotion_discount_combo_item_promotion_discount_combo_item_parentPromotionIdTopromotion promotion_discount_combo_item[]          @relation("promotion_discount_combo_item_parentPromotionIdTopromotion")
  promotion_discount_combo_item_promotion_discount_combo_item_promotionIdTopromotion       promotion_discount_combo_item[]          @relation("promotion_discount_combo_item_promotionIdTopromotion")
  promotion_discount_premium_config                                                        promotion_discount_premium_config[]
  promotion_document                                                                       promotion_document[]
  promotion_image                                                                          promotion_image[]
  promotion_platform                                                                       promotion_platform[]
  promotion_premium_combo_condition                                                        promotion_premium_combo_condition[]
  promotion_premium_combo_condition_item                                                   promotion_premium_combo_condition_item[]
  promotion_premium_combo_item_promotion_premium_combo_item_parentPromotionIdTopromotion   promotion_premium_combo_item[]           @relation("promotion_premium_combo_item_parentPromotionIdTopromotion")
  promotion_premium_combo_item_promotion_premium_combo_item_promotionIdTopromotion         promotion_premium_combo_item[]           @relation("promotion_premium_combo_item_promotionIdTopromotion")
  promotion_premium_condition_item                                                         promotion_premium_condition_item[]
  promotion_premium_premium_item                                                           promotion_premium_premium_item[]
  promotion_promotable_promotion_promotable_parentPromotionIdTopromotion                   promotion_promotable[]                   @relation("promotion_promotable_parentPromotionIdTopromotion")
  promotion_promotable_promotion_promotable_promotionIdTopromotion                         promotion_promotable[]                   @relation("promotion_promotable_promotionIdTopromotion")
  promotion_province                                                                       promotion_province[]
  promotion_tag                                                                            promotion_tag[]
  promotion_volume_item_promotion_volume_item_parentPromotionIdTopromotion                 promotion_volume_item[]                  @relation("promotion_volume_item_parentPromotionIdTopromotion")
  promotion_volume_item_promotion_volume_item_promotionIdTopromotion                       promotion_volume_item[]                  @relation("promotion_volume_item_promotionIdTopromotion")
  quotation_delivery_item_quotation_delivery_item_promotionIdTopromotion                   quotation_delivery_item[]                @relation("quotation_delivery_item_promotionIdTopromotion")
  quotation_delivery_item_quotation_delivery_item_volumePricePromotionIdTopromotion        quotation_delivery_item[]                @relation("quotation_delivery_item_volumePricePromotionIdTopromotion")
  quotation_item_quotation_item_promotionIdTopromotion                                     quotation_item[]                         @relation("quotation_item_promotionIdTopromotion")
  quotation_item_quotation_item_volumePricePromotionIdTopromotion                          quotation_item[]                         @relation("quotation_item_volumePricePromotionIdTopromotion")
  sub_boq_item_sub_boq_item_promotionIdTopromotion                                         sub_boq_item[]                           @relation("sub_boq_item_promotionIdTopromotion")
  sub_boq_item_sub_boq_item_volumePricePromotionBranchIdTopromotion                        sub_boq_item[]                           @relation("sub_boq_item_volumePricePromotionBranchIdTopromotion")

  @@index([agentId], map: "iX_promotion_agentId")
  @@index([createdAt], map: "iX_promotion_createdAt")
  @@index([d365ComboSetNumber], map: "iX_promotion_d365ComboSetNumber")
  @@index([promotionCustomerType], map: "iX_promotion_promotionCustomerType")
  @@index([promotionStatus], map: "iX_promotion_promotionStatus")
  @@index([promotionType], map: "iX_promotion_promotionType")
  @@index([status], map: "iX_promotion_status")
  @@index([updatedAt], map: "iX_promotion_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model promotion_branch {
  id                                                                                     Int                   @id @default(autoincrement())
  promotionId                                                                            Int
  branchId                                                                               Int
  createdAt                                                                              DateTime?             @default(now()) @db.Timestamp(0)
  createdBy                                                                              String?               @db.VarChar(256)
  cart_item                                                                              cart_item[]
  delivery_order_item_delivery_order_item_promotionBranchIdTopromotion_branch            delivery_order_item[] @relation("delivery_order_item_promotionBranchIdTopromotion_branch")
  delivery_order_item_delivery_order_item_volumePricePromotionBranchIdTopromotion_branch delivery_order_item[] @relation("delivery_order_item_volumePricePromotionBranchIdTopromotion_branch")
  log_cart_item                                                                          log_cart_item[]
  order_item_order_item_promotionBranchIdTopromotion_branch                              order_item[]          @relation("order_item_promotionBranchIdTopromotion_branch")
  order_item_order_item_volumePricePromotionBranchIdTopromotion_branch                   order_item[]          @relation("order_item_volumePricePromotionBranchIdTopromotion_branch")
  order_item_order_item_discountPremiumPromotionBranchIdTopromotion_branch               order_item[]          @relation("order_item_discountPremiumPromotionBranchIdTopromotion_branch")
  branch                                                                                 branch                @relation(fields: [branchId], references: [id], onUpdate: Restrict, map: "fK_promotion_branch_branch_branchId")
  promotion                                                                              promotion             @relation(fields: [promotionId], references: [id], onUpdate: Restrict, map: "fK_promotion_branch_promotion_promotionId")
  sale_order_item_sale_order_item_promotionBranchIdTopromotion_branch                    sale_order_item[]     @relation("sale_order_item_promotionBranchIdTopromotion_branch")
  sale_order_item_sale_order_item_volumePricePromotionBranchIdTopromotion_branch         sale_order_item[]     @relation("sale_order_item_volumePricePromotionBranchIdTopromotion_branch")
  sub_order_item                                                                         sub_order_item[]

  @@index([branchId], map: "iX_promotion_branch_branchId")
  @@index([createdAt], map: "iX_promotion_branch_createdAt")
  @@index([promotionId], map: "iX_promotion_branch_promotionId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model promotion_combo_set_item {
  id                       Int             @id @default(autoincrement())
  qty                      Decimal         @db.Decimal(18, 2)
  promotionPrice           Decimal         @db.Decimal(18, 2)
  productVariantId         Int
  promotionId              Int
  createdAt                DateTime?       @default(now()) @db.Timestamp(0)
  createdBy                String?         @db.VarChar(256)
  updatedAt                DateTime?       @default(now()) @db.Timestamp(0)
  updatedBy                String?         @db.VarChar(256)
  promotionPriceExcludeVAT Decimal?        @db.Decimal(18, 2)
  order                    Int             @default(0)
  product_variant          product_variant @relation(fields: [productVariantId], references: [id], onUpdate: Restrict, map: "fK_promotion_combo_set_item_product_variant_productVariantId")
  promotion                promotion       @relation(fields: [promotionId], references: [id], onUpdate: Restrict, map: "fK_promotion_combo_set_item_promotion_promotionId")

  @@index([createdAt], map: "iX_promotion_combo_set_item_createdAt")
  @@index([productVariantId], map: "iX_promotion_combo_set_item_productVariantId")
  @@index([promotionId], map: "iX_promotion_combo_set_item_promotionId")
  @@index([updatedAt], map: "iX_promotion_combo_set_item_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model promotion_customer {
  id          Int       @id @default(autoincrement())
  promotionId Int
  customerId  Int
  createdAt   DateTime? @default(now()) @db.Timestamp(0)
  createdBy   String?   @db.VarChar(256)
  customer    customer  @relation(fields: [customerId], references: [id], onUpdate: Restrict, map: "fK_promotion_customer_customer_customerId")
  promotion   promotion @relation(fields: [promotionId], references: [id], onUpdate: Restrict, map: "fK_promotion_customer_promotion_promotionId")

  @@index([createdAt], map: "iX_promotion_customer_createdAt")
  @@index([customerId], map: "iX_promotion_customer_customerId")
  @@index([promotionId], map: "iX_promotion_customer_promotionId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model promotion_customer_group {
  id              Int            @id @default(autoincrement())
  promotionId     Int
  customerGroupId Int
  price           Decimal        @db.Decimal(18, 2)
  createdAt       DateTime?      @default(now()) @db.Timestamp(0)
  createdBy       String?        @db.VarChar(256)
  customer_group  customer_group @relation(fields: [customerGroupId], references: [id], onUpdate: Restrict, map: "fK_promotion_customer_group_customer_group_customerGroupId")
  promotion       promotion      @relation(fields: [promotionId], references: [id], onUpdate: Restrict, map: "fK_promotion_customer_group_promotion_promotionId")

  @@index([createdAt], map: "iX_promotion_customer_group_createdAt")
  @@index([customerGroupId], map: "iX_promotion_customer_group_customerGroupId")
  @@index([promotionId], map: "iX_promotion_customer_group_promotionId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model promotion_discount_action {
  id                           Int                            @id @default(autoincrement())
  promotionPurchaseConditionId Int
  type                         promotion_discount_action_type @default(Amount)
  unit                         promotion_discount_action_unit @default(Percentage)
  amount                       Decimal                        @db.Decimal(18, 2)
  deletedAt                    DateTime?                      @db.DateTime(6)
  createdAt                    DateTime?                      @default(now()) @db.Timestamp(0)
  createdBy                    String?                        @db.VarChar(256)
  updatedAt                    DateTime?                      @default(now()) @db.Timestamp(0)
  updatedBy                    String?                        @db.VarChar(256)
  promotion_purchase_condition promotion_purchase_condition   @relation(fields: [promotionPurchaseConditionId], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "fK_promotion_discount_action_promotionPurchaseConditions_promot~")

  @@index([createdAt], map: "iX_promotion_discount_action_createdAt")
  @@index([promotionPurchaseConditionId], map: "iX_promotion_discount_action_promotionPurchaseConditionId")
  @@index([type], map: "iX_promotion_discount_action_type")
  @@index([unit], map: "iX_promotion_discount_action_unit")
  @@index([updatedAt], map: "iX_promotion_discount_action_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model promotion_discount_combo_condition {
  id                            Int                            @id @default(autoincrement())
  quantity                      Int
  discount                      Decimal?                       @db.Decimal(18, 2)
  promotionId                   Int                            @default(0)
  createdAt                     DateTime?                      @default(now()) @db.Timestamp(0)
  createdBy                     String?                        @db.VarChar(256)
  updatedAt                     DateTime?                      @default(now()) @db.Timestamp(0)
  updatedBy                     String?                        @db.VarChar(256)
  tbProductVariantId            Int?
  promotionDiscountComboItemId  Int?
  product_variant               product_variant?               @relation(fields: [tbProductVariantId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_promotion_discount_combo_condition_product_variant_tbProduct~")
  promotion_discount_combo_item promotion_discount_combo_item? @relation(fields: [promotionDiscountComboItemId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_promotion_discount_combo_condition_promotionDiscountComboIte~")
  promotion                     promotion                      @relation(fields: [promotionId], references: [id], onUpdate: Restrict, map: "fK_promotion_discount_combo_condition_promotion_promotionId")

  @@index([createdAt], map: "iX_promotion_discount_combo_condition_createdAt")
  @@index([promotionDiscountComboItemId], map: "iX_promotion_discount_combo_condition_promotionDiscountComboIte~")
  @@index([promotionId], map: "iX_promotion_discount_combo_condition_promotionId")
  @@index([tbProductVariantId], map: "iX_promotion_discount_combo_condition_tbProductVariantId")
  @@index([updatedAt], map: "iX_promotion_discount_combo_condition_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model promotion_discount_combo_item {
  id                                                                   Int                                  @id @default(autoincrement())
  promotionId                                                          Int                                  @default(0)
  parentPromotionId                                                    Int?
  productVariantId                                                     Int?
  createdAt                                                            DateTime?                            @default(now()) @db.Timestamp(0)
  createdBy                                                            String?                              @db.VarChar(256)
  updatedAt                                                            DateTime?                            @default(now()) @db.Timestamp(0)
  updatedBy                                                            String?                              @db.VarChar(256)
  promotion_discount_combo_condition                                   promotion_discount_combo_condition[]
  product_variant                                                      product_variant?                     @relation(fields: [productVariantId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_promotion_discount_combo_item_product_variant_productVariant~")
  promotion_promotion_discount_combo_item_parentPromotionIdTopromotion promotion?                           @relation("promotion_discount_combo_item_parentPromotionIdTopromotion", fields: [parentPromotionId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_promotion_discount_combo_item_promotion_parentPromotionId")
  promotion_promotion_discount_combo_item_promotionIdTopromotion       promotion                            @relation("promotion_discount_combo_item_promotionIdTopromotion", fields: [promotionId], references: [id], onUpdate: Restrict, map: "fK_promotion_discount_combo_item_promotion_promotionId")

  @@index([createdAt], map: "iX_promotion_discount_combo_item_createdAt")
  @@index([parentPromotionId], map: "iX_promotion_discount_combo_item_parentPromotionId")
  @@index([productVariantId], map: "iX_promotion_discount_combo_item_productVariantId")
  @@index([promotionId], map: "iX_promotion_discount_combo_item_promotionId")
  @@index([updatedAt], map: "iX_promotion_discount_combo_item_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model promotion_discount_premium_config {
  id                        Int                                                         @id @default(autoincrement())
  promotionId               Int
  purchaseConditionType     promotion_discount_premium_config_purchaseConditionType     @default(Amount)
  discountPremiumActionType promotion_discount_premium_config_discountPremiumActionType @default(Discount)
  discountActionType        String?                                                     @db.LongText
  discountActionUnit        String?                                                     @db.LongText
  premiumConditionType      String?                                                     @db.LongText
  premiumActionType         String?                                                     @db.LongText
  premiumActionSelectType   String?                                                     @db.LongText
  maximumPremiumQty         Int
  isUnlimitedPremiumQty     Boolean
  deletedAt                 DateTime?                                                   @db.DateTime(6)
  createdAt                 DateTime?                                                   @default(now()) @db.Timestamp(0)
  createdBy                 String?                                                     @db.VarChar(256)
  updatedAt                 DateTime?                                                   @default(now()) @db.Timestamp(0)
  updatedBy                 String?                                                     @db.VarChar(256)
  promotion                 promotion                                                   @relation(fields: [promotionId], references: [id], onUpdate: Restrict, map: "fK_promotion_discount_premium_config_promotion_promotionId")

  @@index([createdAt], map: "iX_promotion_discount_premium_config_createdAt")
  @@index([discountPremiumActionType], map: "iX_promotion_discount_premium_config_discountPremiumActionType")
  @@index([promotionId], map: "iX_promotion_discount_premium_config_promotionId")
  @@index([purchaseConditionType], map: "iX_promotion_discount_premium_config_purchaseConditionType")
  @@index([updatedAt], map: "iX_promotion_discount_premium_config_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model promotion_document {
  id          Int       @id @default(autoincrement())
  promotionId Int
  documentId  Int
  createdAt   DateTime? @default(now()) @db.Timestamp(0)
  createdBy   String?   @db.VarChar(256)
  updatedAt   DateTime? @default(now()) @db.Timestamp(0)
  updatedBy   String?   @db.VarChar(256)
  document    document  @relation(fields: [documentId], references: [id], onUpdate: Restrict, map: "fK_promotion_document_document_documentId")
  promotion   promotion @relation(fields: [promotionId], references: [id], onUpdate: Restrict, map: "fK_promotion_document_promotion_promotionId")

  @@index([createdAt], map: "iX_promotion_document_createdAt")
  @@index([documentId], map: "iX_promotion_document_documentId")
  @@index([promotionId], map: "iX_promotion_document_promotionId")
  @@index([updatedAt], map: "iX_promotion_document_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model promotion_image {
  id          Int       @id @default(autoincrement())
  promotionId Int
  imageId     Int
  createdAt   DateTime? @default(now()) @db.Timestamp(0)
  createdBy   String?   @db.VarChar(256)
  document    document  @relation(fields: [imageId], references: [id], onUpdate: Restrict, map: "fK_promotion_image_document_imageId")
  promotion   promotion @relation(fields: [promotionId], references: [id], onUpdate: Restrict, map: "fK_promotion_image_promotion_promotionId")

  @@index([createdAt], map: "iX_promotion_image_createdAt")
  @@index([imageId], map: "iX_promotion_image_imageId")
  @@index([promotionId], map: "iX_promotion_image_promotionId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model promotion_platform {
  id          Int       @id @default(autoincrement())
  promotionId Int
  platformId  Int
  createdAt   DateTime? @default(now()) @db.Timestamp(0)
  createdBy   String?   @db.VarChar(256)
  updatedAt   DateTime? @default(now()) @db.Timestamp(0)
  updatedBy   String?   @db.VarChar(256)
  platform    platform  @relation(fields: [platformId], references: [id], onUpdate: Restrict, map: "fK_promotion_platform_platform_platformId")
  promotion   promotion @relation(fields: [promotionId], references: [id], onUpdate: Restrict, map: "fK_promotion_platform_promotion_promotionId")

  @@index([createdAt], map: "iX_promotion_platform_createdAt")
  @@index([platformId], map: "iX_promotion_platform_platformId")
  @@index([promotionId], map: "iX_promotion_platform_promotionId")
  @@index([updatedAt], map: "iX_promotion_platform_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model promotion_premium_action {
  id                           Int                                    @id @default(autoincrement())
  promotionPurchaseConditionId Int
  condition                    promotion_premium_action_condition     @default(Amount)
  selectType                   promotion_premium_action_selectType    @default(All)
  conditionType                promotion_premium_action_conditionType @default(Amount)
  productVariantId             Int?
  qty                          Int
  deletedAt                    DateTime?                              @db.DateTime(6)
  maximumQty                   Int?
  type                         promotion_premium_action_type          @default(LowestPrice)
  createdAt                    DateTime?                              @default(now()) @db.Timestamp(0)
  createdBy                    String?                                @db.VarChar(256)
  updatedAt                    DateTime?                              @default(now()) @db.Timestamp(0)
  updatedBy                    String?                                @db.VarChar(256)
  promotionId                  Int?
  promotion_purchase_condition promotion_purchase_condition           @relation(fields: [promotionPurchaseConditionId], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "fK_promotion_premium_action_promotionPurchaseConditions_promoti~")

  @@index([condition], map: "iX_promotion_premium_action_condition")
  @@index([conditionType], map: "iX_promotion_premium_action_conditionType")
  @@index([createdAt], map: "iX_promotion_premium_action_createdAt")
  @@index([promotionPurchaseConditionId], map: "iX_promotion_premium_action_promotionPurchaseConditionId")
  @@index([selectType], map: "iX_promotion_premium_action_selectType")
  @@index([type], map: "iX_promotion_premium_action_type")
  @@index([updatedAt], map: "iX_promotion_premium_action_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model promotion_premium_combo_condition {
  id                                     Int                                      @id @default(autoincrement())
  quantity                               Int
  createdAt                              DateTime?                                @default(now()) @db.Timestamp(0)
  createdBy                              String?                                  @db.VarChar(256)
  updatedAt                              DateTime?                                @default(now()) @db.Timestamp(0)
  updatedBy                              String?                                  @db.VarChar(256)
  promotionId                            Int?
  promotion                              promotion?                               @relation(fields: [promotionId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_promotion_premium_combo_condition_promotion_promotionId")
  promotion_premium_combo_condition_item promotion_premium_combo_condition_item[]

  @@index([createdAt], map: "iX_promotion_premium_combo_condition_createdAt")
  @@index([promotionId], map: "iX_promotion_premium_combo_condition_promotionId")
  @@index([updatedAt], map: "iX_promotion_premium_combo_condition_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model promotion_premium_combo_condition_item {
  id                                Int                                @id @default(autoincrement())
  promotionPremiumComboConditionId  Int?
  promotionId                       Int?
  productVariantId                  Int?
  quantity                          Int
  createdAt                         DateTime?                          @default(now()) @db.Timestamp(0)
  createdBy                         String?                            @db.VarChar(256)
  updatedAt                         DateTime?                          @default(now()) @db.Timestamp(0)
  updatedBy                         String?                            @db.VarChar(256)
  product_variant                   product_variant?                   @relation(fields: [productVariantId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_promotion_premium_combo_condition_item_product_variant_produ~")
  promotion_premium_combo_condition promotion_premium_combo_condition? @relation(fields: [promotionPremiumComboConditionId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_promotion_premium_combo_condition_item_promotion_premium_com~")
  promotion                         promotion?                         @relation(fields: [promotionId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_promotion_premium_combo_condition_item_promotion_promotionId")

  @@index([createdAt], map: "iX_promotion_premium_combo_condition_item_createdAt")
  @@index([productVariantId], map: "iX_promotion_premium_combo_condition_item_productVariantId")
  @@index([promotionId], map: "iX_promotion_premium_combo_condition_item_promotionId")
  @@index([promotionPremiumComboConditionId], map: "iX_promotion_premium_combo_condition_item_promotionPremiumCombo~")
  @@index([updatedAt], map: "iX_promotion_premium_combo_condition_item_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model promotion_premium_combo_item {
  id                                                                  Int              @id @default(autoincrement())
  productVariantId                                                    Int?
  promotionId                                                         Int?
  createdAt                                                           DateTime?        @default(now()) @db.Timestamp(0)
  createdBy                                                           String?          @db.VarChar(256)
  updatedAt                                                           DateTime?        @default(now()) @db.Timestamp(0)
  updatedBy                                                           String?          @db.VarChar(256)
  parentPromotionId                                                   Int?
  order                                                               Int              @default(0)
  product_variant                                                     product_variant? @relation(fields: [productVariantId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_promotion_premium_combo_item_product_variant_productVariantId")
  promotion_promotion_premium_combo_item_parentPromotionIdTopromotion promotion?       @relation("promotion_premium_combo_item_parentPromotionIdTopromotion", fields: [parentPromotionId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_promotion_premium_combo_item_promotion_parentPromotionId")
  promotion_promotion_premium_combo_item_promotionIdTopromotion       promotion?       @relation("promotion_premium_combo_item_promotionIdTopromotion", fields: [promotionId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_promotion_premium_combo_item_promotion_promotionId")

  @@index([createdAt], map: "iX_promotion_premium_combo_item_createdAt")
  @@index([parentPromotionId], map: "iX_promotion_premium_combo_item_parentPromotionId")
  @@index([productVariantId], map: "iX_promotion_premium_combo_item_productVariantId")
  @@index([promotionId], map: "iX_promotion_premium_combo_item_promotionId")
  @@index([updatedAt], map: "iX_promotion_premium_combo_item_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model promotion_premium_condition_item {
  id               Int             @id @default(autoincrement())
  qty              Decimal         @db.Decimal(18, 2)
  productVariantId Int
  promotionId      Int
  createdAt        DateTime?       @default(now()) @db.Timestamp(0)
  createdBy        String?         @db.VarChar(256)
  updatedAt        DateTime?       @default(now()) @db.Timestamp(0)
  updatedBy        String?         @db.VarChar(256)
  order            Int             @default(0)
  product_variant  product_variant @relation(fields: [productVariantId], references: [id], onUpdate: Restrict, map: "fK_promotion_premium_condition_item_product_variant_productVari~")
  promotion        promotion       @relation(fields: [promotionId], references: [id], onUpdate: Restrict, map: "fK_promotion_premium_condition_item_promotion_promotionId")

  @@index([createdAt], map: "iX_promotion_premium_condition_item_createdAt")
  @@index([productVariantId], map: "iX_promotion_premium_condition_item_productVariantId")
  @@index([promotionId], map: "iX_promotion_premium_condition_item_promotionId")
  @@index([updatedAt], map: "iX_promotion_premium_condition_item_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model promotion_premium_premium_item {
  id               Int             @id @default(autoincrement())
  qty              Decimal         @db.Decimal(18, 2)
  productVariantId Int
  promotionId      Int
  createdAt        DateTime?       @default(now()) @db.Timestamp(0)
  createdBy        String?         @db.VarChar(256)
  updatedAt        DateTime?       @default(now()) @db.Timestamp(0)
  updatedBy        String?         @db.VarChar(256)
  order            Int             @default(0)
  product_variant  product_variant @relation(fields: [productVariantId], references: [id], onUpdate: Restrict, map: "fK_promotion_premium_premium_item_product_variant_productVarian~")
  promotion        promotion       @relation(fields: [promotionId], references: [id], onUpdate: Restrict, map: "fK_promotion_premium_premium_item_promotion_promotionId")

  @@index([createdAt], map: "iX_promotion_premium_premium_item_createdAt")
  @@index([productVariantId], map: "iX_promotion_premium_premium_item_productVariantId")
  @@index([promotionId], map: "iX_promotion_premium_premium_item_promotionId")
  @@index([updatedAt], map: "iX_promotion_premium_premium_item_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model promotion_promotable {
  id                                                          Int                                 @id @default(autoincrement())
  promotionId                                                 Int
  parentPromotionId                                           Int?
  productVariantId                                            Int?
  promotableType                                              promotion_promotable_promotableType @default(Promotion)
  qty                                                         Int
  isUnlimitedQty                                              Boolean
  limitPerPerson                                              Int
  isUnlimitedPerPerson                                        Boolean
  isPremiumIncluded                                           Boolean
  amount                                                      Int
  sequence                                                    Int
  price                                                       Decimal?                            @db.Decimal(18, 2)
  specialPrice                                                Decimal?                            @db.Decimal(18, 2)
  deletedAt                                                   DateTime?                           @db.DateTime(6)
  createdAt                                                   DateTime?                           @default(now()) @db.Timestamp(0)
  createdBy                                                   String?                             @db.VarChar(256)
  updatedAt                                                   DateTime?                           @default(now()) @db.Timestamp(0)
  updatedBy                                                   String?                             @db.VarChar(256)
  promotion_promotion_promotable_parentPromotionIdTopromotion promotion?                          @relation("promotion_promotable_parentPromotionIdTopromotion", fields: [parentPromotionId], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "fK_promotion_promotable_promotion_parentPromotionId")
  promotion_promotion_promotable_promotionIdTopromotion       promotion                           @relation("promotion_promotable_promotionIdTopromotion", fields: [promotionId], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "fK_promotion_promotable_promotion_promotionId")
  promotion_purchase_condition                                promotion_purchase_condition[]

  @@index([createdAt], map: "iX_promotion_promotable_createdAt")
  @@index([parentPromotionId], map: "iX_promotion_promotable_parentPromotionId")
  @@index([promotableType], map: "iX_promotion_promotable_promotableType")
  @@index([promotionId], map: "iX_promotion_promotable_promotionId")
  @@index([updatedAt], map: "iX_promotion_promotable_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model promotion_province {
  id          Int       @id @default(autoincrement())
  promotionId Int
  provinceId  Int
  createdAt   DateTime? @default(now()) @db.Timestamp(0)
  createdBy   String?   @db.VarChar(256)
  promotion   promotion @relation(fields: [promotionId], references: [id], onUpdate: Restrict, map: "fK_promotion_province_promotion_promotionId")
  province    province  @relation(fields: [provinceId], references: [id], onUpdate: Restrict, map: "fK_promotion_province_province_provinceId")

  @@index([createdAt], map: "iX_promotion_province_createdAt")
  @@index([promotionId], map: "iX_promotion_province_promotionId")
  @@index([provinceId], map: "iX_promotion_province_provinceId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model promotion_purchase_condition {
  id                        Int                               @id @default(autoincrement())
  min                       Int
  promotionPromotableId     Int
  type                      promotion_purchase_condition_type @default(Amount)
  deletedAt                 DateTime?                         @db.DateTime(6)
  createdAt                 DateTime?                         @default(now()) @db.Timestamp(0)
  createdBy                 String?                           @db.VarChar(256)
  updatedAt                 DateTime?                         @default(now()) @db.Timestamp(0)
  updatedBy                 String?                           @db.VarChar(256)
  max                       Int?
  promotion_discount_action promotion_discount_action[]
  promotion_premium_action  promotion_premium_action[]
  promotion_promotable      promotion_promotable              @relation(fields: [promotionPromotableId], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "fK_promotion_purchase_condition_promotion_promotable_promotionP~")

  @@index([createdAt], map: "iX_promotion_purchase_condition_createdAt")
  @@index([promotionPromotableId], map: "iX_promotion_purchase_condition_promotionPromotableId")
  @@index([type], map: "iX_promotion_purchase_condition_type")
  @@index([updatedAt], map: "iX_promotion_purchase_condition_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model promotion_tag {
  id          Int       @id @default(autoincrement())
  promotionId Int
  tagName     String?   @db.VarChar(64)
  createdAt   DateTime? @default(now()) @db.Timestamp(0)
  createdBy   String?   @db.VarChar(256)
  promotion   promotion @relation(fields: [promotionId], references: [id], onUpdate: Restrict, map: "fK_promotion_tag_promotion_promotionId")

  @@index([createdAt], map: "iX_promotion_tag_createdAt")
  @@index([promotionId], map: "iX_promotion_tag_promotionId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model promotion_volume_item {
  id                                                           Int                      @id @default(autoincrement())
  productVariantId                                             Int?
  promotionId                                                  Int?
  createdAt                                                    DateTime?                @default(now()) @db.Timestamp(0)
  createdBy                                                    String?                  @db.VarChar(256)
  updatedAt                                                    DateTime?                @default(now()) @db.Timestamp(0)
  updatedBy                                                    String?                  @db.VarChar(256)
  parentPromotionId                                            Int?
  order                                                        Int                      @default(0)
  product_variant                                              product_variant?         @relation(fields: [productVariantId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_promotion_volume_item_product_variant_productVariantId")
  promotion_promotion_volume_item_parentPromotionIdTopromotion promotion?               @relation("promotion_volume_item_parentPromotionIdTopromotion", fields: [parentPromotionId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_promotion_volume_item_promotion_parentPromotionId")
  promotion_promotion_volume_item_promotionIdTopromotion       promotion?               @relation("promotion_volume_item_promotionIdTopromotion", fields: [promotionId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_promotion_volume_item_promotion_promotionId")
  promotion_volume_price                                       promotion_volume_price[]

  @@index([createdAt], map: "iX_promotion_volume_item_createdAt")
  @@index([parentPromotionId], map: "iX_promotion_volume_item_parentPromotionId")
  @@index([productVariantId], map: "iX_promotion_volume_item_productVariantId")
  @@index([promotionId], map: "iX_promotion_volume_item_promotionId")
  @@index([updatedAt], map: "iX_promotion_volume_item_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model promotion_volume_price {
  id                       Int                   @id @default(autoincrement())
  promotionVolumeItemId    Int
  promotionPrice           Decimal               @db.Decimal(18, 2)
  createdAt                DateTime?             @default(now()) @db.Timestamp(0)
  createdBy                String?               @db.VarChar(256)
  updatedAt                DateTime?             @default(now()) @db.Timestamp(0)
  updatedBy                String?               @db.VarChar(256)
  maximum                  Int?
  minimum                  Int                   @default(0)
  promotionPriceExcludeVAT Decimal?              @db.Decimal(18, 2)
  promotion_volume_item    promotion_volume_item @relation(fields: [promotionVolumeItemId], references: [id], onUpdate: Restrict, map: "fK_promotion_volume_price_promotion_volume_item_promotionVolume~")

  @@index([createdAt], map: "iX_promotion_volume_price_createdAt")
  @@index([promotionVolumeItemId], map: "iX_promotion_volume_price_promotionVolumeItemId")
  @@index([updatedAt], map: "iX_promotion_volume_price_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model province {
  id                                                                                               Int                                  @id @default(autoincrement())
  code                                                                                             Int
  name                                                                                             String?                              @db.VarChar(256)
  countryId                                                                                        Int
  createdAt                                                                                        DateTime?                            @default(now()) @db.Timestamp(0)
  createdBy                                                                                        String?                              @db.VarChar(256)
  agent                                                                                            agent[]
  branch                                                                                           branch[]
  branch_province                                                                                  branch_province[]
  credit_customer                                                                                  credit_customer[]
  customer_address                                                                                 customer_address[]
  customer_data                                                                                    customer_data[]
  customer_delivery_address                                                                        customer_delivery_address[]
  customer_location_delivery_address                                                               customer_location_delivery_address[]
  customer_tax_invoice_address_customer_tax_invoice_address_taxInvoiceDeliveryProvinceIdToprovince customer_tax_invoice_address[]       @relation("customer_tax_invoice_address_taxInvoiceDeliveryProvinceIdToprovince")
  customer_tax_invoice_address_customer_tax_invoice_address_taxInvoiceProvinceIdToprovince         customer_tax_invoice_address[]       @relation("customer_tax_invoice_address_taxInvoiceProvinceIdToprovince")
  delivery_order                                                                                   delivery_order[]
  delivery_promotion_province                                                                      delivery_promotion_province[]
  district                                                                                         district[]
  order                                                                                            order[]
  project                                                                                          project[]
  promotion_province                                                                               promotion_province[]
  country                                                                                          country                              @relation(fields: [countryId], references: [id], onUpdate: Restrict, map: "fK_province_country_countryId")
  quotation_delivery                                                                               quotation_delivery[]
  region_province                                                                                  region_province[]
  sub_boq_sub_boq_provinceIdToprovince                                                             sub_boq[]                            @relation("sub_boq_provinceIdToprovince")
  sub_boq_sub_boq_taxInvoiceDeliveryProvinceIdToprovince                                           sub_boq[]                            @relation("sub_boq_taxInvoiceDeliveryProvinceIdToprovince")
  sub_boq_sub_boq_taxInvoiceProvinceIdToprovince                                                   sub_boq[]                            @relation("sub_boq_taxInvoiceProvinceIdToprovince")
  sub_order_sub_order_provinceIdToprovince                                                         sub_order[]                          @relation("sub_order_provinceIdToprovince")
  sub_order_sub_order_taxInvoiceDeliveryProvinceIdToprovince                                       sub_order[]                          @relation("sub_order_taxInvoiceDeliveryProvinceIdToprovince")
  sub_order_sub_order_taxInvoiceProvinceIdToprovince                                               sub_order[]                          @relation("sub_order_taxInvoiceProvinceIdToprovince")
  sub_quotation                                                                                    sub_quotation[]
  tax_invoice_tax_invoice_taxInvoiceDeliveryProvinceIdToprovince                                   tax_invoice[]                        @relation("tax_invoice_taxInvoiceDeliveryProvinceIdToprovince")
  tax_invoice_tax_invoice_taxInvoiceProvinceIdToprovince                                           tax_invoice[]                        @relation("tax_invoice_taxInvoiceProvinceIdToprovince")
  tax_invoice_and_delivery_tax_invoice_and_delivery_taxInvoiceDeliveryProvinceIdToprovince         tax_invoice_and_delivery[]           @relation("tax_invoice_and_delivery_taxInvoiceDeliveryProvinceIdToprovince")
  tax_invoice_and_delivery_tax_invoice_and_delivery_taxInvoiceProvinceIdToprovince                 tax_invoice_and_delivery[]           @relation("tax_invoice_and_delivery_taxInvoiceProvinceIdToprovince")
  warehouse                                                                                        warehouse[]
  zip_code                                                                                         zip_code[]

  @@index([countryId], map: "iX_province_countryId")
  @@index([createdAt], map: "iX_province_createdAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model quotation {
  id                                                 Int                               @id @default(autoincrement())
  qtNumber                                           String?                           @db.VarChar(256)
  customerId                                         Int
  branchId                                           Int
  paymentType                                        Int?
  paymentTerm                                        Int?
  deliveryType                                       quotation_deliveryType            @default(AgentService)
  boqPriceOrDocument                                 quotation_boqPriceOrDocument      @default(FromBoq)
  boqId                                              Int?
  expiredDay                                         Int?
  quotationExpired                                   DateTime?                         @db.DateTime(6)
  qtStatus                                           quotation_qtStatus                @default(Draft)
  status                                             quotation_status                  @default(Active)
  approveAt                                          DateTime?                         @db.DateTime(6)
  createdAt                                          DateTime?                         @default(now()) @db.Timestamp(0)
  createdBy                                          String?                           @db.VarChar(256)
  updatedAt                                          DateTime?                         @default(now()) @db.Timestamp(0)
  updatedBy                                          String?                           @db.VarChar(256)
  approveBy                                          Int?
  cancelNote                                         String?                           @db.VarChar(256)
  totalPrice                                         Decimal                           @default(0.00) @db.Decimal(18, 2)
  bargainNote                                        String?                           @db.Text
  display                                            Boolean                           @default(false)
  version                                            Int
  deliveryReceiveType                                quotation_deliveryReceiveType     @default(SENDONCE)
  isLatestVersion                                    Boolean
  reviseRound                                        Int
  sendApproveAt                                      DateTime?                         @db.DateTime(6)
  cancelApproveNote                                  String?                           @db.VarChar(256)
  cancelDocumentId                                   Int?                              @default(0)
  sendApproveBy                                      Int?
  workflowId                                         Int?
  sendReviseNote                                     String?                           @db.VarChar(256)
  documentDescription                                String?                           @db.LongText
  commentNote                                        String?                           @db.VarChar(256)
  cancelAgentUserId                                  Int?
  qtSellType                                         Int?
  customer_request_notification                      customer_request_notification[]
  notification_customer_quotation                    notification_customer_quotation[]
  order                                              order[]
  agent_user_quotation_approveByToagent_user         agent_user?                       @relation("quotation_approveByToagent_user", fields: [approveBy], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_quotation_agent_user_approveBy")
  agent_user_quotation_cancelAgentUserIdToagent_user agent_user?                       @relation("quotation_cancelAgentUserIdToagent_user", fields: [cancelAgentUserId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_quotation_agent_user_cancelAgentUserId")
  agent_user_quotation_sendApproveByToagent_user     agent_user?                       @relation("quotation_sendApproveByToagent_user", fields: [sendApproveBy], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_quotation_agent_user_sendApproveBy")
  boq                                                boq?                              @relation(fields: [boqId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_quotation_boq_boqId")
  branch                                             branch                            @relation(fields: [branchId], references: [id], onUpdate: Restrict, map: "fK_quotation_branch_branchId")
  customer                                           customer                          @relation(fields: [customerId], references: [id], onUpdate: Restrict, map: "fK_quotation_customer_customerId")
  document                                           document?                         @relation(fields: [cancelDocumentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_quotation_document_cancelDocumentId")
  workflow                                           workflow?                         @relation(fields: [workflowId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_quotation_workflows_workflowId")
  quotation_approve_replace_log                      quotation_approve_replace_log[]
  quotation_bargain_detail                           quotation_bargain_detail[]
  quotation_client_detail                            quotation_client_detail[]
  quotation_document                                 quotation_document[]
  quotation_item                                     quotation_item[]
  quotation_product_variant                          quotation_product_variant[]
  quotation_request                                  quotation_request[]
  sub_quotation                                      sub_quotation[]

  @@index([approveBy], map: "iX_quotation_approveBy")
  @@index([boqId], map: "iX_quotation_boqId")
  @@index([boqPriceOrDocument], map: "iX_quotation_boqPriceOrDocument")
  @@index([branchId], map: "iX_quotation_branchId")
  @@index([cancelAgentUserId], map: "iX_quotation_cancelAgentUserId")
  @@index([cancelDocumentId], map: "iX_quotation_cancelDocumentId")
  @@index([createdAt], map: "iX_quotation_createdAt")
  @@index([customerId], map: "iX_quotation_customerId")
  @@index([deliveryReceiveType], map: "iX_quotation_deliveryReceiveType")
  @@index([deliveryType], map: "iX_quotation_deliveryType")
  @@index([qtStatus], map: "iX_quotation_qtStatus")
  @@index([sendApproveBy], map: "iX_quotation_sendApproveBy")
  @@index([status], map: "iX_quotation_status")
  @@index([updatedAt], map: "iX_quotation_updatedAt")
  @@index([workflowId], map: "iX_quotation_workflowId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model quotation_approve_replace_log {
  id                                                                    Int         @id @default(autoincrement())
  quotationId                                                           Int
  oldApproveBy                                                          Int?
  oldSendApproveBy                                                      Int?
  newApproveBy                                                          Int?
  newSendApproveBy                                                      Int?
  createdAt                                                             DateTime?   @default(now()) @db.Timestamp(0)
  createdBy                                                             String?     @db.VarChar(256)
  updatedAt                                                             DateTime?   @default(now()) @db.Timestamp(0)
  updatedBy                                                             String?     @db.VarChar(256)
  agent_user_quotation_approve_replace_log_newApproveByToagent_user     agent_user? @relation("quotation_approve_replace_log_newApproveByToagent_user", fields: [newApproveBy], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_quotation_approve_replace_log_agent_user_newApproveBy")
  agent_user_quotation_approve_replace_log_newSendApproveByToagent_user agent_user? @relation("quotation_approve_replace_log_newSendApproveByToagent_user", fields: [newSendApproveBy], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_quotation_approve_replace_log_agent_user_newSendApproveBy")
  agent_user_quotation_approve_replace_log_oldApproveByToagent_user     agent_user? @relation("quotation_approve_replace_log_oldApproveByToagent_user", fields: [oldApproveBy], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_quotation_approve_replace_log_agent_user_oldApproveBy")
  agent_user_quotation_approve_replace_log_oldSendApproveByToagent_user agent_user? @relation("quotation_approve_replace_log_oldSendApproveByToagent_user", fields: [oldSendApproveBy], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_quotation_approve_replace_log_agent_user_oldSendApproveBy")
  quotation                                                             quotation   @relation(fields: [quotationId], references: [id], onUpdate: Restrict, map: "fK_quotation_approve_replace_log_quotation_quotationId")

  @@index([createdAt], map: "iX_quotation_approve_replace_log_createdAt")
  @@index([newApproveBy], map: "iX_quotation_approve_replace_log_newApproveBy")
  @@index([newSendApproveBy], map: "iX_quotation_approve_replace_log_newSendApproveBy")
  @@index([oldApproveBy], map: "iX_quotation_approve_replace_log_oldApproveBy")
  @@index([oldSendApproveBy], map: "iX_quotation_approve_replace_log_oldSendApproveBy")
  @@index([quotationId], map: "iX_quotation_approve_replace_log_quotationId")
  @@index([updatedAt], map: "iX_quotation_approve_replace_log_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model quotation_bargain_detail {
  id              Int                             @id @default(autoincrement())
  quotationId     Int
  branchProductId Int
  qty             Decimal                         @db.Decimal(18, 2)
  price           Decimal                         @db.Decimal(18, 2)
  unit            String?                         @db.VarChar(16)
  status          quotation_bargain_detail_status @default(Active)
  createdAt       DateTime?                       @default(now()) @db.Timestamp(0)
  createdBy       String?                         @db.VarChar(256)
  updatedAt       DateTime?                       @default(now()) @db.Timestamp(0)
  updatedBy       String?                         @db.VarChar(256)
  branch_product  branch_product                  @relation(fields: [branchProductId], references: [id], onUpdate: Restrict, map: "fK_quotation_bargain_detail_branch_product_branchProductId")
  quotation       quotation                       @relation(fields: [quotationId], references: [id], onUpdate: Restrict, map: "fK_quotation_bargain_detail_quotation_quotationId")

  @@index([branchProductId], map: "iX_quotation_bargain_detail_branchProductId")
  @@index([createdAt], map: "iX_quotation_bargain_detail_createdAt")
  @@index([quotationId], map: "iX_quotation_bargain_detail_quotationId")
  @@index([status], map: "iX_quotation_bargain_detail_status")
  @@index([updatedAt], map: "iX_quotation_bargain_detail_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model quotation_client_detail {
  id           Int                            @id @default(autoincrement())
  quotationId  Int
  clientId     String?                        @db.LongText
  deviceDetail String?                        @db.LongText
  action       quotation_client_detail_action @default(CreateQT)
  createdAt    DateTime?                      @default(now()) @db.Timestamp(0)
  createdBy    String?                        @db.VarChar(256)
  updatedAt    DateTime?                      @default(now()) @db.Timestamp(0)
  updatedBy    String?                        @db.VarChar(256)
  ipAddress    String?                        @db.LongText
  quotation    quotation                      @relation(fields: [quotationId], references: [id], onUpdate: Restrict, map: "fK_quotation_client_detail_quotation_quotationId")

  @@index([action], map: "iX_quotation_client_detail_action")
  @@index([createdAt], map: "iX_quotation_client_detail_createdAt")
  @@index([quotationId], map: "iX_quotation_client_detail_quotationId")
  @@index([updatedAt], map: "iX_quotation_client_detail_updatedAt")
}

model quotation_compare_history {
  id          Int       @id @default(autoincrement())
  boqId       Int
  compareNo   Int
  quotationId Int
  createdBy   String?   @db.VarChar(255)
  createdAt   DateTime? @default(now()) @db.DateTime(0)
  updatedBy   String?   @db.VarChar(255)
  updatedAt   DateTime? @db.DateTime(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model quotation_delivery {
  id                       Int                        @id @default(autoincrement())
  subQuotationId           Int
  deliveryQtNumber         String?                    @db.VarChar(256)
  deliveryDate             DateTime?                  @db.DateTime(6)
  selfPickupTimePeriod     Int?
  receiverName             String?                    @db.VarChar(200)
  receiverPhone            String?                    @db.VarChar(255)
  address                  String?                    @db.VarChar(256)
  countryId                Int?
  provinceId               Int?
  districtId               Int?
  subDistrictId            Int?
  zipCodeId                Int?
  latitude                 Float?
  longitude                Float?
  locationName             String?                    @db.VarChar(256)
  note                     String?                    @db.LongText
  deliveryPrice            Decimal                    @db.Decimal(18, 2)
  status                   quotation_delivery_status  @default(Active)
  createdAt                DateTime?                  @default(now()) @db.Timestamp(0)
  createdBy                String?                    @db.VarChar(256)
  updatedAt                DateTime?                  @default(now()) @db.Timestamp(0)
  updatedBy                String?                    @db.VarChar(256)
  totalPrice               Decimal                    @default(0.00) @db.Decimal(18, 2)
  landNumber               String?                    @db.VarChar(256)
  projectName              String?                    @db.VarChar(256)
  country                  country?                   @relation(fields: [countryId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_quotation_delivery_country_countryId")
  district                 district?                  @relation(fields: [districtId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_quotation_delivery_district_districtId")
  province                 province?                  @relation(fields: [provinceId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_quotation_delivery_province_provinceId")
  sub_district             sub_district?              @relation(fields: [subDistrictId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_quotation_delivery_sub_district_subDistrictId")
  sub_quotation            sub_quotation              @relation(fields: [subQuotationId], references: [id], onUpdate: Restrict, map: "fK_quotation_delivery_sub_quotation_subQuotationId")
  zip_code                 zip_code?                  @relation(fields: [zipCodeId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_quotation_delivery_zip_code_zipCodeId")
  quotation_delivery_item  quotation_delivery_item[]
  tax_invoice_and_delivery tax_invoice_and_delivery[]

  @@index([countryId], map: "iX_quotation_delivery_countryId")
  @@index([createdAt], map: "iX_quotation_delivery_createdAt")
  @@index([districtId], map: "iX_quotation_delivery_districtId")
  @@index([provinceId], map: "iX_quotation_delivery_provinceId")
  @@index([status], map: "iX_quotation_delivery_status")
  @@index([subDistrictId], map: "iX_quotation_delivery_subDistrictId")
  @@index([subQuotationId], map: "iX_quotation_delivery_subQuotationId")
  @@index([updatedAt], map: "iX_quotation_delivery_updatedAt")
  @@index([zipCodeId], map: "iX_quotation_delivery_zipCodeId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model quotation_delivery_item {
  id                                                                  Int                            @id @default(autoincrement())
  quotationDeliveryId                                                 Int
  branchProductId                                                     Int?
  promotionId                                                         Int?
  qty                                                                 Decimal                        @db.Decimal(18, 2)
  createdAt                                                           DateTime?                      @default(now()) @db.Timestamp(0)
  createdBy                                                           String?                        @db.VarChar(256)
  updatedAt                                                           DateTime?                      @default(now()) @db.Timestamp(0)
  updatedBy                                                           String?                        @db.VarChar(256)
  status                                                              quotation_delivery_item_status @default(Active)
  volumePricePromotionId                                              Int?
  quotationItemId                                                     Int?
  branch_product                                                      branch_product?                @relation(fields: [branchProductId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_quotation_delivery_item_branch_product_branchProductId")
  promotion_quotation_delivery_item_promotionIdTopromotion            promotion?                     @relation("quotation_delivery_item_promotionIdTopromotion", fields: [promotionId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_quotation_delivery_item_promotion_promotionId")
  promotion_quotation_delivery_item_volumePricePromotionIdTopromotion promotion?                     @relation("quotation_delivery_item_volumePricePromotionIdTopromotion", fields: [volumePricePromotionId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_quotation_delivery_item_promotion_volumePricePromotionId")
  quotation_item                                                      quotation_item?                @relation(fields: [quotationItemId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_quotation_delivery_item_quotationItems_quotationItemId")
  quotation_delivery                                                  quotation_delivery             @relation(fields: [quotationDeliveryId], references: [id], onUpdate: Restrict, map: "fK_quotation_delivery_item_quotation_delivery_quotationDelivery~")

  @@index([branchProductId], map: "iX_quotation_delivery_item_branchProductId")
  @@index([createdAt], map: "iX_quotation_delivery_item_createdAt")
  @@index([promotionId], map: "iX_quotation_delivery_item_promotionId")
  @@index([quotationDeliveryId], map: "iX_quotation_delivery_item_quotationDeliveryId")
  @@index([quotationItemId], map: "iX_quotation_delivery_item_quotationItemId")
  @@index([status], map: "iX_quotation_delivery_item_status")
  @@index([updatedAt], map: "iX_quotation_delivery_item_updatedAt")
  @@index([volumePricePromotionId], map: "iX_quotation_delivery_item_volumePricePromotionId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model quotation_document {
  id          Int                       @id @default(autoincrement())
  quotationId Int
  documentId  Int
  createdAt   DateTime?                 @default(now()) @db.Timestamp(0)
  createdBy   String?                   @db.VarChar(256)
  updatedAt   DateTime?                 @default(now()) @db.Timestamp(0)
  updatedBy   String?                   @db.VarChar(256)
  status      quotation_document_status @default(Active)
  document    document                  @relation(fields: [documentId], references: [id], onUpdate: Restrict, map: "fK_quotation_document_document_documentId")
  quotation   quotation                 @relation(fields: [quotationId], references: [id], onUpdate: Restrict, map: "fK_quotation_document_quotation_quotationId")

  @@index([createdAt], map: "iX_quotation_document_createdAt")
  @@index([documentId], map: "iX_quotation_document_documentId")
  @@index([quotationId], map: "iX_quotation_document_quotationId")
  @@index([status], map: "iX_quotation_document_status")
  @@index([updatedAt], map: "iX_quotation_document_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model quotation_history_log {
  id                            Int                           @id @default(autoincrement())
  qtNumber                      String?                       @db.VarChar(256)
  customerRequestNotificationId Int
  approveBy                     Int?
  approveAt                     DateTime?                     @db.DateTime(6)
  sendApproveBy                 Int?
  sendApproveAt                 DateTime?                     @db.DateTime(6)
  cancelNote                    String?                       @db.VarChar(256)
  cancelApproveNote             String?                       @db.VarChar(256)
  sendReviseNote                String?                       @db.VarChar(256)
  bargainNote                   String?                       @db.VarChar(256)
  reviseRound                   Int
  version                       Int
  isLatestVersion               Boolean
  workflowId                    Int?
  createdAt                     DateTime?                     @default(now()) @db.Timestamp(0)
  createdBy                     String?                       @db.VarChar(256)
  updatedAt                     DateTime?                     @default(now()) @db.Timestamp(0)
  updatedBy                     String?                       @db.VarChar(256)
  customer_request_notification customer_request_notification @relation(fields: [customerRequestNotificationId], references: [id], onUpdate: Restrict, map: "fK_quotation_history_log_customer_request_notification_customer~")

  @@index([createdAt], map: "iX_quotation_history_log_createdAt")
  @@index([customerRequestNotificationId], map: "iX_quotation_history_log_customerRequestNotificationId")
  @@index([updatedAt], map: "iX_quotation_history_log_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model quotation_item {
  id                                                         Int                             @id @default(autoincrement())
  quotationId                                                Int
  branchProductId                                            Int?
  promotionId                                                Int?
  qty                                                        Decimal                         @db.Decimal(18, 2)
  unit                                                       String?                         @db.VarChar(16)
  price                                                      Decimal                         @db.Decimal(18, 2)
  quotedPrice                                                Decimal                         @db.Decimal(18, 2)
  createdAt                                                  DateTime?                       @default(now()) @db.Timestamp(0)
  createdBy                                                  String?                         @db.VarChar(256)
  updatedAt                                                  DateTime?                       @default(now()) @db.Timestamp(0)
  updatedBy                                                  String?                         @db.VarChar(256)
  status                                                     quotation_item_status           @default(Active)
  volumePricePromotionId                                     Int?
  freeProduct                                                Boolean                         @default(false)
  volumePriceGroupId                                         String?                         @db.VarChar(128)
  subBoqItemId                                               Int?
  order_item                                                 order_item[]
  quotation_delivery_item                                    quotation_delivery_item[]
  branch_product                                             branch_product?                 @relation(fields: [branchProductId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_quotation_item_branch_product_branchProductId")
  promotion_quotation_item_promotionIdTopromotion            promotion?                      @relation("quotation_item_promotionIdTopromotion", fields: [promotionId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_quotation_item_promotion_promotionId")
  promotion_quotation_item_volumePricePromotionIdTopromotion promotion?                      @relation("quotation_item_volumePricePromotionIdTopromotion", fields: [volumePricePromotionId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_quotation_item_promotion_volumePricePromotionId")
  quotation                                                  quotation                       @relation(fields: [quotationId], references: [id], onUpdate: Restrict, map: "fK_quotation_item_quotation_quotationId")
  sub_boq_item                                               sub_boq_item?                   @relation(fields: [subBoqItemId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_quotation_item_sub_boq_item_subBoqItemId")
  quotation_item_detail                                      quotation_item_detail[]
  quotation_product_detail_item                              quotation_product_detail_item[]

  @@index([branchProductId], map: "iX_quotation_item_branchProductId")
  @@index([createdAt], map: "iX_quotation_item_createdAt")
  @@index([promotionId], map: "iX_quotation_item_promotionId")
  @@index([quotationId], map: "iX_quotation_item_quotationId")
  @@index([status], map: "iX_quotation_item_status")
  @@index([subBoqItemId], map: "iX_quotation_item_subBoqItemId")
  @@index([updatedAt], map: "iX_quotation_item_updatedAt")
  @@index([volumePricePromotionId], map: "iX_quotation_item_volumePricePromotionId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model quotation_item_bargain {
  id               Int       @id @default(autoincrement())
  branchId         Int
  quotationId      Int
  version          Int
  quotationItemId  Int
  bargainUnitPrice Decimal?  @default(0.00) @db.Decimal(10, 2)
  bargainPrice     Decimal   @db.Decimal(10, 2)
  createdAt        DateTime? @default(now()) @db.Timestamp(0)
  createdBy        String?   @db.VarChar(255)
  updatedAt        DateTime? @db.DateTime(0)
  updatedBy        String?   @db.VarChar(255)

  @@index([branchId], map: "iX_quotation_item_bargain_branchId")
  @@index([createdAt], map: "iX_quotation_item_bargain_createdAt")
  @@index([quotationId], map: "iX_quotation_item_bargain_quotationId")
  @@index([quotationItemId], map: "iX_quotation_item_bargain_quotationItemId")
  @@index([updatedAt], map: "iX_quotation_item_bargain_updatedAt")
  @@index([branchId], map: "idx_quotation_item_bargain_branchId")
  @@index([id], map: "idx_quotation_item_bargain_id")
  @@index([quotationId], map: "idx_quotation_item_bargain_quotationId")
  @@index([quotationItemId], map: "idx_quotation_item_bargain_quotationItemId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model quotation_item_detail {
  id                 Int                          @id @default(autoincrement())
  quotationItemId    Int
  branchProductId    Int
  qtyOfPromotion     Decimal?                     @db.Decimal(18, 2)
  priceOfPromotion   Decimal?                     @db.Decimal(18, 2)
  pricePerUnit       Decimal?                     @db.Decimal(18, 2)
  unit               String?                      @db.VarChar(16)
  quotedPricePerUnit Decimal?                     @db.Decimal(18, 2)
  freeProduct        Boolean
  isMigrateData      Boolean
  status             quotation_item_detail_status @default(Active)
  createdAt          DateTime?                    @default(now()) @db.Timestamp(0)
  createdBy          String?                      @db.VarChar(256)
  updatedAt          DateTime?                    @default(now()) @db.Timestamp(0)
  updatedBy          String?                      @db.VarChar(256)
  branch_product     branch_product               @relation(fields: [branchProductId], references: [id], onUpdate: Restrict, map: "fK_quotation_item_detail_branch_product_branchProductId")
  quotation_item     quotation_item               @relation(fields: [quotationItemId], references: [id], onUpdate: Restrict, map: "fK_quotation_item_detail_quotation_item_quotationItemId")

  @@index([branchProductId], map: "iX_quotation_item_detail_branchProductId")
  @@index([createdAt], map: "iX_quotation_item_detail_createdAt")
  @@index([quotationItemId], map: "iX_quotation_item_detail_quotationItemId")
  @@index([status], map: "iX_quotation_item_detail_status")
  @@index([updatedAt], map: "iX_quotation_item_detail_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model quotation_product_detail_item {
  id              Int            @id @default(autoincrement())
  quotationItemId Int
  branchProductId Int
  qty             Decimal        @db.Decimal(18, 2)
  originalQty     Decimal        @db.Decimal(18, 2)
  price           Decimal        @db.Decimal(18, 2)
  createdAt       DateTime?      @default(now()) @db.Timestamp(0)
  createdBy       String?        @db.VarChar(256)
  updatedAt       DateTime?      @default(now()) @db.Timestamp(0)
  updatedBy       String?        @db.VarChar(256)
  branch_product  branch_product @relation(fields: [branchProductId], references: [id], onUpdate: Restrict, map: "fK_quotation_product_detail_item_branch_product_branchProductId")
  quotation_item  quotation_item @relation(fields: [quotationItemId], references: [id], onUpdate: Restrict, map: "fK_quotation_product_detail_item_quotation_item_quotationItemId")

  @@index([branchProductId], map: "iX_quotation_product_detail_item_branchProductId")
  @@index([createdAt], map: "iX_quotation_product_detail_item_createdAt")
  @@index([quotationItemId], map: "iX_quotation_product_detail_item_quotationItemId")
  @@index([updatedAt], map: "iX_quotation_product_detail_item_updatedAt")
}

model quotation_product_variant {
  id               Int        @id @default(autoincrement())
  quotationId      Int?
  productVariantId Int?
  qty              Int?
  price            Int?
  createdAt        DateTime   @db.DateTime(0)
  updatedAt        DateTime   @db.DateTime(0)
  quotation        quotation? @relation(fields: [quotationId], references: [id], onDelete: Cascade, map: "quotation_product_variant_ibfk_1")

  @@index([quotationId], map: "quotationId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model quotation_request {
  id                       Int                       @id @default(autoincrement())
  quotationId              Int
  workflowId               Int
  workflowStepId           Int
  requestAgentUserId       Int?
  requestAt                DateTime?                 @db.DateTime(6)
  workflowStepAgentUserId  Int?
  approveAt                DateTime?                 @db.DateTime(6)
  qtStatus                 Int?
  note                     String?                   @db.LongText
  isFinished               Boolean
  status                   quotation_request_status  @default(Active)
  createdAt                DateTime?                 @default(now()) @db.Timestamp(0)
  createdBy                String?                   @db.VarChar(256)
  updatedAt                DateTime?                 @default(now()) @db.Timestamp(0)
  updatedBy                String?                   @db.VarChar(256)
  order                    Int                       @default(0)
  agent_user               agent_user?               @relation(fields: [requestAgentUserId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_quotation_request_agent_user_requestAgentUserId")
  quotation                quotation                 @relation(fields: [quotationId], references: [id], onUpdate: Restrict, map: "fK_quotation_request_quotation_quotationId")
  workflow_step_agent_user workflow_step_agent_user? @relation(fields: [workflowStepAgentUserId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_quotation_request_workflowStepAgentUsers_workflowStepAgentUs~")
  workflow_step            workflow_step             @relation(fields: [workflowStepId], references: [id], onUpdate: Restrict, map: "fK_quotation_request_workflowSteps_workflowStepId")
  workflow                 workflow                  @relation(fields: [workflowId], references: [id], onUpdate: Restrict, map: "fK_quotation_request_workflows_workflowId")

  @@index([createdAt], map: "iX_quotation_request_createdAt")
  @@index([quotationId], map: "iX_quotation_request_quotationId")
  @@index([requestAgentUserId], map: "iX_quotation_request_requestAgentUserId")
  @@index([status], map: "iX_quotation_request_status")
  @@index([updatedAt], map: "iX_quotation_request_updatedAt")
  @@index([workflowId], map: "iX_quotation_request_workflowId")
  @@index([workflowStepAgentUserId], map: "iX_quotation_request_workflowStepAgentUserId")
  @@index([workflowStepId], map: "iX_quotation_request_workflowStepId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rating_review {
  id                  Int                        @id @default(autoincrement())
  projectId           Int
  orderId             Int
  deliveryOrderId     Int
  deliveryOrderItemId Int
  customerType        rating_review_customerType @default(PERSONAL)
  customerId          Int
  customerOrganizeId  Int?
  productRating       Int?                       @db.TinyInt
  servicesRating      Int?                       @db.TinyInt
  deliveryRating      Int?                       @db.TinyInt
  valueReview         String?                    @db.VarChar(100)
  productReview       String?                    @db.VarChar(100)
  otherReview         String?                    @db.VarChar(255)
  liked               Int?                       @default(0)
  createdBy           String?                    @db.VarChar(255)
  createdAt           DateTime?                  @default(now()) @db.DateTime(0)
  updatedBy           String?                    @db.VarChar(255)
  updatedAt           DateTime?                  @default(now()) @db.DateTime(0)
  status              rating_review_status?      @default(Active)

  @@index([customerId], map: "idx_rating_review_customerId")
  @@index([customerOrganizeId], map: "idx_rating_review_customerOrganizeId")
  @@index([deliveryOrderId], map: "idx_rating_review_deliveryOrderId")
  @@index([deliveryOrderItemId], map: "idx_rating_review_deliveryOrderItemId")
  @@index([deliveryRating], map: "idx_rating_review_deliveryRating")
  @@index([id], map: "idx_rating_review_id")
  @@index([orderId], map: "idx_rating_review_orderId")
  @@index([productRating], map: "idx_rating_review_productRating")
  @@index([projectId], map: "idx_rating_review_projectId")
  @@index([servicesRating], map: "idx_rating_review_servicesRating")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rating_review_image {
  id             Int                           @id @default(autoincrement())
  ratingReviewId Int?
  documentId     Int?
  fileType       rating_review_image_fileType? @default(Image)
  status         rating_review_image_status?   @default(Active)
  createdBy      String?                       @db.VarChar(255)
  createdAt      DateTime?                     @default(now()) @db.DateTime(0)
  updatedBy      String?                       @db.VarChar(255)
  updatedAt      DateTime?                     @default(now()) @db.DateTime(0)
  document       document?                     @relation(fields: [documentId], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "fk_rating_image_id")

  @@index([documentId], map: "idx_rating_review_image_documentId")
  @@index([id], map: "idx_rating_review_image_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rating_review_like {
  id                 Int                             @id @default(autoincrement())
  ratingReviewId     Int
  customerId         Int
  customerType       rating_review_like_customerType @default(PERSONAL)
  customerOrganizeId Int?
  createdBy          String?                         @db.VarChar(255)
  createdAt          DateTime?                       @default(now()) @db.DateTime(0)
  updatedBy          String?                         @db.VarChar(255)
  updatedAt          DateTime?                       @default(now()) @db.DateTime(0)

  @@index([customerId], map: "idx_rating_review_like_customerId")
  @@index([customerOrganizeId], map: "idx_rating_review_like_customerOrganizeId")
  @@index([id], map: "idx_rating_review_like_id")
  @@index([ratingReviewId], map: "idx_rating_review_like_ratingReviewId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rating_review_report {
  id                 Int                               @id @default(autoincrement())
  ratingReviewId     Int
  reason             rating_review_report_reason?      @default(VULGAR_WORDS)
  description        String?                           @db.VarChar(250)
  customerId         Int
  customerType       rating_review_report_customerType @default(PERSONAL)
  customerOrganizeId Int?
  createdBy          String?                           @db.VarChar(255)
  createdAt          DateTime?                         @default(now()) @db.DateTime(0)
  updatedBy          String?                           @db.VarChar(255)
  updatedAt          DateTime?                         @default(now()) @db.DateTime(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model region {
  id                 Int                @id @default(autoincrement())
  agentGroupRegionId Int
  name               String             @db.VarChar(256)
  isActive           Boolean
  createdAt          DateTime?          @default(now()) @db.Timestamp(0)
  createdBy          String?            @db.VarChar(256)
  updatedAt          DateTime?          @default(now()) @db.Timestamp(0)
  updatedBy          String?            @db.VarChar(256)
  agent_group_region agent_group_region @relation(fields: [agentGroupRegionId], references: [id], onUpdate: Restrict, map: "fK_region_agent_group_region_agentGroupRegionId")
  region_province    region_province[]

  @@index([agentGroupRegionId], map: "iX_region_agentGroupRegionId")
  @@index([createdAt], map: "iX_region_createdAt")
  @@index([updatedAt], map: "iX_region_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model region_province {
  id         Int       @id @default(autoincrement())
  regionId   Int
  provinceId Int
  createdAt  DateTime? @default(now()) @db.Timestamp(0)
  createdBy  String?   @db.VarChar(256)
  updatedAt  DateTime? @default(now()) @db.Timestamp(0)
  updatedBy  String?   @db.VarChar(256)
  province   province  @relation(fields: [provinceId], references: [id], onUpdate: Restrict, map: "fK_region_province_provinces_provinceId")
  region     region    @relation(fields: [regionId], references: [id], onUpdate: Restrict, map: "fK_region_province_region_regionId")

  @@index([createdAt], map: "iX_region_province_createdAt")
  @@index([provinceId], map: "iX_region_province_provinceId")
  @@index([regionId], map: "iX_region_province_regionId")
  @@index([updatedAt], map: "iX_region_province_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model regular_customer {
  id                       Int                       @id @default(autoincrement())
  agentId                  Int
  customerId               Int?
  createdAt                DateTime?                 @default(now()) @db.Timestamp(0)
  createdBy                String?                   @db.VarChar(256)
  updatedAt                DateTime?                 @default(now()) @db.Timestamp(0)
  updatedBy                String?                   @db.VarChar(256)
  status                   regular_customer_status   @default(Active)
  customer_data            customer_data[]
  customer_favorite_branch customer_favorite_branch?
  customer_group_customer  customer_group_customer[]
  agent                    agent                     @relation(fields: [agentId], references: [id], onUpdate: Restrict, map: "fK_regular_customer_agent_agentId")
  customer                 customer?                 @relation(fields: [customerId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_regular_customer_customers_customerId")

  @@index([agentId], map: "iX_regular_customer_agentId")
  @@index([createdAt], map: "iX_regular_customer_createdAt")
  @@index([customerId], map: "iX_regular_customer_customerId")
  @@index([status], map: "iX_regular_customer_status")
  @@index([updatedAt], map: "iX_regular_customer_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model role {
  id              Int               @id @default(autoincrement())
  agentId         Int?
  roleName        String?           @db.VarChar(256)
  description     String?           @db.VarChar(2048)
  isDefault       Boolean
  status          role_status       @default(Active)
  defaultRole     role_defaultRole  @default(Admin)
  createdAt       DateTime?         @default(now()) @db.Timestamp(0)
  createdBy       String?           @db.VarChar(256)
  updatedAt       DateTime?         @default(now()) @db.Timestamp(0)
  updatedBy       String?           @db.VarChar(256)
  account_role    account_role[]
  agent_user_role agent_user_role[]
  agent           agent?            @relation(fields: [agentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_role_agent_agentId")
  role_permission role_permission[]

  @@index([agentId], map: "iX_role_agentId")
  @@index([createdAt], map: "iX_role_createdAt")
  @@index([defaultRole], map: "iX_role_defaultRole")
  @@index([status], map: "iX_role_status")
  @@index([updatedAt], map: "iX_role_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model role_permission {
  id            Int                    @id @default(autoincrement())
  roleId        Int
  permissionId  Int
  supportCreate Boolean?
  supportRead   Boolean?
  supportUpdate Boolean?
  supportDelete Boolean?
  status        role_permission_status @default(Active)
  createdAt     DateTime?              @default(now()) @db.Timestamp(0)
  createdBy     String?                @db.VarChar(256)
  updatedAt     DateTime?              @default(now()) @db.Timestamp(0)
  updatedBy     String?                @db.VarChar(256)
  permission    permission             @relation(fields: [permissionId], references: [id], onUpdate: Restrict, map: "fK_role_permission_permission_permissionId")
  role          role                   @relation(fields: [roleId], references: [id], onUpdate: Restrict, map: "fK_role_permission_role_roleId")

  @@index([createdAt], map: "iX_role_permission_createdAt")
  @@index([permissionId], map: "iX_role_permission_permissionId")
  @@index([roleId], map: "iX_role_permission_roleId")
  @@index([status], map: "iX_role_permission_status")
  @@index([updatedAt], map: "iX_role_permission_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sale_order {
  id                   Int                        @id @default(autoincrement())
  orderId              Int
  referenceNumber1     String?                    @db.LongText
  referenceNumber2     String?                    @db.LongText
  saleOrderStatus      sale_order_saleOrderStatus @default(New)
  totalProductPrice    Decimal                    @db.Decimal(18, 2)
  totalDeliveryPrice   Decimal                    @db.Decimal(18, 2)
  promotion            Decimal                    @db.Decimal(18, 2)
  tax                  Decimal                    @db.Decimal(18, 2)
  grandTotal           Decimal                    @db.Decimal(18, 2)
  createdAt            DateTime?                  @default(now()) @db.Timestamp(0)
  createdBy            String?                    @db.VarChar(256)
  updatedAt            DateTime?                  @default(now()) @db.Timestamp(0)
  updatedBy            String?                    @db.VarChar(256)
  subOrderId           Int?                       @unique(map: "iX_sale_order_subOrderId")
  isUseFileSystem      Boolean                    @default(false)
  delivery_order       delivery_order[]
  order                order                      @relation(fields: [orderId], references: [id], onUpdate: Restrict, map: "fK_sale_order_order_orderId")
  sub_order            sub_order?                 @relation(fields: [subOrderId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sale_order_subOrders_subOrderId")
  sale_order_item      sale_order_item[]
  tax_invoice          tax_invoice[]
  tax_invoice_document tax_invoice_document[]

  @@index([createdAt], map: "iX_sale_order_createdAt")
  @@index([orderId], map: "iX_sale_order_orderId")
  @@index([saleOrderStatus], map: "iX_sale_order_saleOrderStatus")
  @@index([updatedAt], map: "iX_sale_order_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sale_order_item {
  id                                                                              Int                         @id @default(autoincrement())
  saleOrderId                                                                     Int
  productId                                                                       Int?
  qty                                                                             Int
  price                                                                           Decimal                     @db.Decimal(18, 2)
  promotionBranchId                                                               Int?
  createdAt                                                                       DateTime?                   @default(now()) @db.Timestamp(0)
  createdBy                                                                       String?                     @db.VarChar(256)
  updatedAt                                                                       DateTime?                   @default(now()) @db.Timestamp(0)
  updatedBy                                                                       String?                     @db.VarChar(256)
  volumePricePromotionBranchId                                                    Int?
  orderItemId                                                                     Int?
  order_product_detail_item                                                       order_product_detail_item[]
  branch_product                                                                  branch_product?             @relation(fields: [productId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sale_order_item_branch_product_productId")
  order_item                                                                      order_item?                 @relation(fields: [orderItemId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sale_order_item_order_item_orderItemId")
  promotion_branch_sale_order_item_promotionBranchIdTopromotion_branch            promotion_branch?           @relation("sale_order_item_promotionBranchIdTopromotion_branch", fields: [promotionBranchId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sale_order_item_promotionBranches_promotionBranchId")
  promotion_branch_sale_order_item_volumePricePromotionBranchIdTopromotion_branch promotion_branch?           @relation("sale_order_item_volumePricePromotionBranchIdTopromotion_branch", fields: [volumePricePromotionBranchId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sale_order_item_promotionBranches_volumePricePromotionBranch~")
  sale_order                                                                      sale_order                  @relation(fields: [saleOrderId], references: [id], onUpdate: Restrict, map: "fK_sale_order_item_sale_order_saleOrderId")

  @@index([createdAt], map: "iX_sale_order_item_createdAt")
  @@index([orderItemId], map: "iX_sale_order_item_orderItemId")
  @@index([productId], map: "iX_sale_order_item_productId")
  @@index([promotionBranchId], map: "iX_sale_order_item_promotionBranchId")
  @@index([saleOrderId], map: "iX_sale_order_item_saleOrderId")
  @@index([updatedAt], map: "iX_sale_order_item_updatedAt")
  @@index([volumePricePromotionBranchId], map: "iX_sale_order_item_volumePricePromotionBranchId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sale_order_number {
  id            Int       @id @default(autoincrement())
  subOrderDate  String?   @db.LongText
  runningNumber Int?
  createdAt     DateTime? @default(now()) @db.Timestamp(0)
  createdBy     String?   @db.VarChar(256)
  updatedAt     DateTime? @default(now()) @db.Timestamp(0)
  updatedBy     String?   @db.VarChar(256)

  @@index([createdAt], map: "iX_sale_order_number_createdAt")
  @@index([updatedAt], map: "iX_sale_order_number_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model search_category_boost_item {
  id                            Int                               @id @default(autoincrement())
  weight                        Float                             @db.Float
  categoryCode                  String                            @db.VarChar(20)
  status                        search_category_boost_item_status @default(Active)
  keywordSearchBoostCriteriaId  Int?
  staticSearchBoostId           Int?
  search_category_boost_keyword search_category_boost_keyword?    @relation(fields: [keywordSearchBoostCriteriaId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_search_category_boost_item_searchCategoryBoostKeywords_keywo~")
  search_category_boost_static  search_category_boost_static?     @relation(fields: [staticSearchBoostId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_search_category_boost_item_searchCategoryBoostStatics_static~")

  @@index([keywordSearchBoostCriteriaId], map: "iX_search_category_boost_item_keywordSearchBoostCriteriaId")
  @@index([staticSearchBoostId], map: "iX_search_category_boost_item_staticSearchBoostId")
  @@index([status], map: "iX_search_category_boost_item_status")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model search_category_boost_keyword {
  id                                      Int                                       @id @default(autoincrement())
  criteriaExpression                      String                                    @db.VarChar(200)
  note                                    String                                    @db.VarChar(200)
  status                                  search_category_boost_keyword_status      @default(Active)
  boostType                               search_category_boost_keyword_boostType   @default(Product)
  search_category_boost_item              search_category_boost_item[]
  search_category_boost_keyword_condition search_category_boost_keyword_condition[]

  @@index([boostType], map: "iX_search_category_boost_keyword_boostType")
  @@index([status], map: "iX_search_category_boost_keyword_status")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model search_category_boost_keyword_condition {
  id                            Int                                               @id @default(autoincrement())
  operator                      search_category_boost_keyword_condition_operator  @default(And)
  condition                     search_category_boost_keyword_condition_condition @default(Equal)
  searchCategoryBoostKeywordId  Int
  keyword                       String                                            @default("'") @db.VarChar(50)
  search_category_boost_keyword search_category_boost_keyword                     @relation(fields: [searchCategoryBoostKeywordId], references: [id], onUpdate: Restrict, map: "fK_search_category_boost_keyword_condition_search_category_boos~")

  @@index([condition], map: "iX_search_category_boost_keyword_condition_condition")
  @@index([operator], map: "iX_search_category_boost_keyword_condition_operator")
  @@index([searchCategoryBoostKeywordId], map: "iX_search_category_boost_keyword_condition_searchCategoryBoostK~")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model search_category_boost_static {
  id                         Int                                    @id @default(autoincrement())
  note                       String                                 @db.VarChar(200)
  boostType                  search_category_boost_static_boostType @default(Product)
  status                     search_category_boost_static_status    @default(Active)
  search_category_boost_item search_category_boost_item[]

  @@index([boostType], map: "iX_search_category_boost_static_boostType")
  @@index([status], map: "iX_search_category_boost_static_status")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model search_field_boost {
  id                      Int                          @id @default(autoincrement())
  note                    String                       @db.VarChar(200)
  boostType               search_field_boost_boostType @default(Product)
  status                  search_field_boost_status    @default(Active)
  search_field_boost_item search_field_boost_item[]

  @@index([boostType], map: "iX_search_field_boost_boostType")
  @@index([status], map: "iX_search_field_boost_status")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model search_field_boost_item {
  id                 Int                            @id @default(autoincrement())
  weight             Float                          @db.Float
  fieldName          String                         @db.VarChar(50)
  status             search_field_boost_item_status @default(Active)
  searchFieldBoostId Int
  search_field_boost search_field_boost             @relation(fields: [searchFieldBoostId], references: [id], onUpdate: Restrict, map: "fK_search_field_boost_item_search_field_boost_searchFieldBoostId")

  @@index([searchFieldBoostId], map: "iX_search_field_boost_item_searchFieldBoostId")
  @@index([status], map: "iX_search_field_boost_item_status")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sequent_menu {
  id              Int                  @id @default(autoincrement())
  type            sequent_menu_type?   @default(PERSONAL)
  fkId            Int?
  menuId          Int?
  seq             Int?
  status          sequent_menu_status? @default(Active)
  createdAt       DateTime?            @default(now()) @db.Timestamp(0)
  createdBy       String?              @default("'System'") @db.VarChar(256)
  updatedAt       DateTime?            @default(now()) @db.Timestamp(0)
  updatedBy       String?              @db.VarChar(256)
  favoriteAgentId Int?
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model social_shared {
  id        Int                  @id @default(autoincrement())
  network   String?              @db.VarChar(255)
  name      String?              @db.VarChar(255)
  sort      Int?
  status    social_shared_status @default(Active)
  createdAt DateTime?            @default(now()) @db.Timestamp(0)
  createdBy String?              @db.VarChar(256)

  @@index([createdAt], map: "iX_social_shared_createdAt")
  @@index([status], map: "iX_social_shared_status")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sub_boq {
  id                                                                 Int                           @id @default(autoincrement())
  boqId                                                              Int
  deliveryDate                                                       DateTime?                     @db.DateTime(6)
  projectName                                                        String?                       @db.VarChar(255)
  receiverName                                                       String?                       @db.VarChar(255)
  receiverPhone                                                      String?                       @db.VarChar(255)
  address                                                            String?                       @db.VarChar(255)
  countryId                                                          Int?
  provinceId                                                         Int?
  districtId                                                         Int?
  subDistrictId                                                      Int?
  zipCodeId                                                          Int?
  latitude                                                           Float?
  longitude                                                          Float?
  selfPickupTimePeriod                                               Int?
  companyTypeId                                                      Int?
  taxInvoiceAddress                                                  String?                       @db.VarChar(256)
  taxInvoiceBranch                                                   String?                       @db.VarChar(256)
  taxInvoiceCodeZipCodeId                                            Int?
  taxInvoiceCompanyName                                              String?                       @db.VarChar(200)
  taxInvoiceCountryId                                                Int?
  taxInvoiceCustomer                                                 String?                       @db.VarChar(256)
  taxInvoiceDeliveryPhone                                            String?                       @db.VarChar(100)
  taxInvoiceDeliveryAddress                                          String?                       @db.VarChar(256)
  taxInvoiceDeliveryCountryId                                        Int?
  taxInvoiceDeliveryCustomer                                         String?                       @db.VarChar(256)
  taxInvoiceDeliveryDistrictId                                       Int?
  taxInvoiceDeliveryName                                             String?                       @db.VarChar(256)
  taxInvoiceDeliveryProvinceId                                       Int?
  taxInvoiceDeliverySubDistrictId                                    Int?
  taxInvoiceDeliveryZipCodeId                                        Int?
  taxInvoiceDistrictId                                               Int?
  taxInvoiceName                                                     String?                       @db.VarChar(256)
  taxInvoicePhone                                                    String?                       @db.VarChar(256)
  taxInvoiceProvinceId                                               Int?
  taxInvoiceSubDistrictId                                            Int?
  taxInvoiceTaxId                                                    String?                       @db.LongText
  taxInvoiceType                                                     sub_boq_taxInvoiceType        @default(NotSpecified)
  isTaxInvoiceDeliveryUsingCustomerAddress                           Boolean?
  contactType                                                        Int?
  locationName                                                       String?                       @db.VarChar(256)
  note                                                               String?                       @db.VarChar(256)
  subBoqStatus                                                       sub_boq_subBoqStatus          @default(Active)
  createdAt                                                          DateTime?                     @default(now()) @db.Timestamp(0)
  createdBy                                                          String?                       @db.VarChar(256)
  updatedAt                                                          DateTime?                     @default(now()) @db.Timestamp(0)
  updatedBy                                                          String?                       @db.VarChar(256)
  landNumber                                                         String?                       @db.VarChar(256)
  needTaxInvoice                                                     Boolean                       @default(false)
  bargainNote                                                        String?                       @db.VarChar(256)
  cancelNote                                                         String?                       @db.VarChar(256)
  display                                                            Boolean                       @default(false)
  totalPrice                                                         Decimal?                      @db.Decimal(18, 2)
  taxInvoiceDeliveryType                                             Int?
  useTaxInvoiceLocation                                              sub_boq_useTaxInvoiceLocation @default(Active)
  taxInvoiceBranchNumber                                             String?                       @db.VarChar(256)
  boq                                                                boq                           @relation(fields: [boqId], references: [id], onUpdate: Restrict, map: "fK_sub_boq_boq_boqId")
  company_type                                                       company_type?                 @relation(fields: [companyTypeId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_boq_companyTypes_companyTypeId")
  country_sub_boq_countryIdTocountry                                 country?                      @relation("sub_boq_countryIdTocountry", fields: [countryId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_boq_countries_countryId")
  country_sub_boq_taxInvoiceCountryIdTocountry                       country?                      @relation("sub_boq_taxInvoiceCountryIdTocountry", fields: [taxInvoiceCountryId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_boq_countries_taxInvoiceCountryId")
  country_sub_boq_taxInvoiceDeliveryCountryIdTocountry               country?                      @relation("sub_boq_taxInvoiceDeliveryCountryIdTocountry", fields: [taxInvoiceDeliveryCountryId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_boq_countries_taxInvoiceDeliveryCountryId")
  district_sub_boq_districtIdTodistrict                              district?                     @relation("sub_boq_districtIdTodistrict", fields: [districtId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_boq_districts_districtId")
  district_sub_boq_taxInvoiceDeliveryDistrictIdTodistrict            district?                     @relation("sub_boq_taxInvoiceDeliveryDistrictIdTodistrict", fields: [taxInvoiceDeliveryDistrictId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_boq_districts_taxInvoiceDeliveryDistrictId")
  district_sub_boq_taxInvoiceDistrictIdTodistrict                    district?                     @relation("sub_boq_taxInvoiceDistrictIdTodistrict", fields: [taxInvoiceDistrictId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_boq_districts_taxInvoiceDistrictId")
  province_sub_boq_provinceIdToprovince                              province?                     @relation("sub_boq_provinceIdToprovince", fields: [provinceId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_boq_provinces_provinceId")
  province_sub_boq_taxInvoiceDeliveryProvinceIdToprovince            province?                     @relation("sub_boq_taxInvoiceDeliveryProvinceIdToprovince", fields: [taxInvoiceDeliveryProvinceId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_boq_provinces_taxInvoiceDeliveryProvinceId")
  province_sub_boq_taxInvoiceProvinceIdToprovince                    province?                     @relation("sub_boq_taxInvoiceProvinceIdToprovince", fields: [taxInvoiceProvinceId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_boq_provinces_taxInvoiceProvinceId")
  sub_district_sub_boq_subDistrictIdTosub_district                   sub_district?                 @relation("sub_boq_subDistrictIdTosub_district", fields: [subDistrictId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_boq_subDistricts_subDistrictId")
  sub_district_sub_boq_taxInvoiceDeliverySubDistrictIdTosub_district sub_district?                 @relation("sub_boq_taxInvoiceDeliverySubDistrictIdTosub_district", fields: [taxInvoiceDeliverySubDistrictId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_boq_subDistricts_taxInvoiceDeliverySubDistrictId")
  sub_district_sub_boq_taxInvoiceSubDistrictIdTosub_district         sub_district?                 @relation("sub_boq_taxInvoiceSubDistrictIdTosub_district", fields: [taxInvoiceSubDistrictId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_boq_subDistricts_taxInvoiceSubDistrictId")
  zip_code_sub_boq_taxInvoiceCodeZipCodeIdTozip_code                 zip_code?                     @relation("sub_boq_taxInvoiceCodeZipCodeIdTozip_code", fields: [taxInvoiceCodeZipCodeId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_boq_zipCodes_taxInvoiceCodeZipCodeId")
  zip_code_sub_boq_taxInvoiceDeliveryZipCodeIdTozip_code             zip_code?                     @relation("sub_boq_taxInvoiceDeliveryZipCodeIdTozip_code", fields: [taxInvoiceDeliveryZipCodeId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_boq_zipCodes_taxInvoiceDeliveryZipCodeId")
  zip_code_sub_boq_zipCodeIdTozip_code                               zip_code?                     @relation("sub_boq_zipCodeIdTozip_code", fields: [zipCodeId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_boq_zipCodes_zipCodeId")
  sub_boq_item                                                       sub_boq_item[]
  tax_invoice_and_delivery                                           tax_invoice_and_delivery[]

  @@index([boqId], map: "iX_sub_boq_boqId")
  @@index([companyTypeId], map: "iX_sub_boq_companyTypeId")
  @@index([countryId], map: "iX_sub_boq_countryId")
  @@index([createdAt], map: "iX_sub_boq_createdAt")
  @@index([districtId], map: "iX_sub_boq_districtId")
  @@index([provinceId], map: "iX_sub_boq_provinceId")
  @@index([subBoqStatus], map: "iX_sub_boq_subBoqStatus")
  @@index([subDistrictId], map: "iX_sub_boq_subDistrictId")
  @@index([taxInvoiceCodeZipCodeId], map: "iX_sub_boq_taxInvoiceCodeZipCodeId")
  @@index([taxInvoiceCountryId], map: "iX_sub_boq_taxInvoiceCountryId")
  @@index([taxInvoiceDeliveryCountryId], map: "iX_sub_boq_taxInvoiceDeliveryCountryId")
  @@index([taxInvoiceDeliveryDistrictId], map: "iX_sub_boq_taxInvoiceDeliveryDistrictId")
  @@index([taxInvoiceDeliveryProvinceId], map: "iX_sub_boq_taxInvoiceDeliveryProvinceId")
  @@index([taxInvoiceDeliverySubDistrictId], map: "iX_sub_boq_taxInvoiceDeliverySubDistrictId")
  @@index([taxInvoiceDeliveryZipCodeId], map: "iX_sub_boq_taxInvoiceDeliveryZipCodeId")
  @@index([taxInvoiceDistrictId], map: "iX_sub_boq_taxInvoiceDistrictId")
  @@index([taxInvoiceProvinceId], map: "iX_sub_boq_taxInvoiceProvinceId")
  @@index([taxInvoiceSubDistrictId], map: "iX_sub_boq_taxInvoiceSubDistrictId")
  @@index([taxInvoiceType], map: "iX_sub_boq_taxInvoiceType")
  @@index([updatedAt], map: "iX_sub_boq_updatedAt")
  @@index([useTaxInvoiceLocation], map: "iX_sub_boq_useTaxInvoiceLocation")
  @@index([zipCodeId], map: "iX_sub_boq_zipCodeId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sub_boq_item {
  id                                                             Int                       @id @default(autoincrement())
  subBoqId                                                       Int
  productDetail                                                  String?                   @db.VarChar(256)
  qty                                                            Decimal                   @db.Decimal(18, 2)
  unit                                                           String?                   @db.VarChar(100)
  productVariantId                                               Int?
  type                                                           sub_boq_item_type         @default(FreeText)
  promotionId                                                    Int?
  volumePricePromotionBranchId                                   Int?
  createdAt                                                      DateTime?                 @default(now()) @db.Timestamp(0)
  createdBy                                                      String?                   @db.VarChar(256)
  updatedAt                                                      DateTime?                 @default(now()) @db.Timestamp(0)
  updatedBy                                                      String?                   @db.VarChar(256)
  price                                                          Decimal?                  @db.Decimal(18, 2)
  boq_product_detail_item                                        boq_product_detail_item[]
  quotation_item                                                 quotation_item[]
  product_variant                                                product_variant?          @relation(fields: [productVariantId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_boq_item_productVariants_productVariantId")
  promotion_sub_boq_item_promotionIdTopromotion                  promotion?                @relation("sub_boq_item_promotionIdTopromotion", fields: [promotionId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_boq_item_promotions_promotionId")
  promotion_sub_boq_item_volumePricePromotionBranchIdTopromotion promotion?                @relation("sub_boq_item_volumePricePromotionBranchIdTopromotion", fields: [volumePricePromotionBranchId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_boq_item_promotions_volumePricePromotionBranchId")
  sub_boq                                                        sub_boq                   @relation(fields: [subBoqId], references: [id], onUpdate: Restrict, map: "fK_sub_boq_item_sub_boq_subBoqId")

  @@index([createdAt], map: "iX_sub_boq_item_createdAt")
  @@index([productVariantId], map: "iX_sub_boq_item_productVariantId")
  @@index([promotionId], map: "iX_sub_boq_item_promotionId")
  @@index([subBoqId], map: "iX_sub_boq_item_subBoqId")
  @@index([type], map: "iX_sub_boq_item_type")
  @@index([updatedAt], map: "iX_sub_boq_item_updatedAt")
  @@index([volumePricePromotionBranchId], map: "iX_sub_boq_item_volumePricePromotionBranchId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sub_district {
  id                                                                                                      Int                                  @id @default(autoincrement())
  code                                                                                                    Int
  name                                                                                                    String?                              @db.VarChar(256)
  districtId                                                                                              Int
  createdAt                                                                                               DateTime?                            @default(now()) @db.Timestamp(0)
  createdBy                                                                                               String?                              @db.VarChar(256)
  agent                                                                                                   agent[]
  branch                                                                                                  branch[]
  branch_sub_district                                                                                     branch_sub_district[]
  credit_customer                                                                                         credit_customer[]
  customer_address                                                                                        customer_address[]
  customer_data                                                                                           customer_data[]
  customer_delivery_address                                                                               customer_delivery_address[]
  customer_location_delivery_address                                                                      customer_location_delivery_address[]
  customer_tax_invoice_address_customer_tax_invoice_address_taxInvoiceDeliverySubDistrictIdTosub_district customer_tax_invoice_address[]       @relation("customer_tax_invoice_address_taxInvoiceDeliverySubDistrictIdTosub_district")
  customer_tax_invoice_address_customer_tax_invoice_address_taxInvoiceSubDistrictIdTosub_district         customer_tax_invoice_address[]       @relation("customer_tax_invoice_address_taxInvoiceSubDistrictIdTosub_district")
  delivery_order                                                                                          delivery_order[]
  delivery_promotion_sub_district                                                                         delivery_promotion_sub_district[]
  order                                                                                                   order[]
  project                                                                                                 project[]
  quotation_delivery                                                                                      quotation_delivery[]
  sub_boq_sub_boq_subDistrictIdTosub_district                                                             sub_boq[]                            @relation("sub_boq_subDistrictIdTosub_district")
  sub_boq_sub_boq_taxInvoiceDeliverySubDistrictIdTosub_district                                           sub_boq[]                            @relation("sub_boq_taxInvoiceDeliverySubDistrictIdTosub_district")
  sub_boq_sub_boq_taxInvoiceSubDistrictIdTosub_district                                                   sub_boq[]                            @relation("sub_boq_taxInvoiceSubDistrictIdTosub_district")
  district                                                                                                district                             @relation(fields: [districtId], references: [id], onUpdate: Restrict, map: "fK_sub_district_district_districtId")
  sub_order_sub_order_subDistrictIdTosub_district                                                         sub_order[]                          @relation("sub_order_subDistrictIdTosub_district")
  sub_order_sub_order_taxInvoiceDeliverySubDistrictIdTosub_district                                       sub_order[]                          @relation("sub_order_taxInvoiceDeliverySubDistrictIdTosub_district")
  sub_order_sub_order_taxInvoiceSubDistrictIdTosub_district                                               sub_order[]                          @relation("sub_order_taxInvoiceSubDistrictIdTosub_district")
  sub_quotation                                                                                           sub_quotation[]
  tax_invoice_tax_invoice_taxInvoiceDeliverySubDistrictIdTosub_district                                   tax_invoice[]                        @relation("tax_invoice_taxInvoiceDeliverySubDistrictIdTosub_district")
  tax_invoice_tax_invoice_taxInvoiceSubDistrictIdTosub_district                                           tax_invoice[]                        @relation("tax_invoice_taxInvoiceSubDistrictIdTosub_district")
  tax_invoice_and_delivery_tax_invoice_and_delivery_taxInvoiceDeliverySubDistrictIdTosub_district         tax_invoice_and_delivery[]           @relation("tax_invoice_and_delivery_taxInvoiceDeliverySubDistrictIdTosub_district")
  tax_invoice_and_delivery_tax_invoice_and_delivery_taxInvoiceSubDistrictIdTosub_district                 tax_invoice_and_delivery[]           @relation("tax_invoice_and_delivery_taxInvoiceSubDistrictIdTosub_district")
  warehouse                                                                                               warehouse[]
  zip_code                                                                                                zip_code[]

  @@index([createdAt], map: "iX_sub_district_createdAt")
  @@index([districtId], map: "iX_sub_district_districtId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sub_order {
  id                                                                   Int                              @id @default(autoincrement())
  orderId                                                              Int
  subOrderStatus                                                       sub_order_subOrderStatus         @default(PrepareForDelivery)
  subOrderNumber                                                       String?                          @db.LongText
  receiverName                                                         String?                          @db.LongText
  receiverPhone                                                        String?                          @db.LongText
  warehouseId                                                          Int?
  deliveryDate                                                         DateTime                         @db.DateTime(6)
  selfPickupTimePeriod                                                 sub_order_selfPickupTimePeriod   @default(NotSpecified)
  deliveryNote                                                         String?                          @db.LongText
  needTaxInvoice                                                       Boolean
  isTaxInvoiceDeliveryUsingCustomerAddress                             Boolean
  companyTypeId                                                        Int?
  taxInvoiceCompanyName                                                String?                          @db.LongText
  taxInvoicePhone                                                      String?                          @db.LongText
  taxInvoiceTaxId                                                      String?                          @db.LongText
  taxInvoiceAddress                                                    String?                          @db.LongText
  taxInvoiceCountryId                                                  Int?
  taxInvoiceProvinceId                                                 Int?
  taxInvoiceDistrictId                                                 Int?
  taxInvoiceSubDistrictId                                              Int?
  taxInvoiceDeliveryAddress                                            String?                          @db.LongText
  taxInvoiceDeliveryCountryId                                          Int?
  taxInvoiceDeliveryProvinceId                                         Int?
  taxInvoiceDeliveryDistrictId                                         Int?
  taxInvoiceDeliverySubDistrictId                                      Int?
  address                                                              String?                          @db.LongText
  countryId                                                            Int?
  provinceId                                                           Int?
  districtId                                                           Int?
  subDistrictId                                                        Int?
  zipCodeId                                                            Int?
  latitude                                                             Float?
  longitude                                                            Float?
  description                                                          String?                          @db.LongText
  note                                                                 String?                          @db.LongText
  contactType                                                          sub_order_contactType            @default(PERSONAL)
  taxInvoiceBranch                                                     String?                          @db.VarChar(256)
  taxInvoiceCustomer                                                   String?                          @db.VarChar(256)
  taxInvoiceType                                                       sub_order_taxInvoiceType         @default(NotSpecified)
  taxInvoiceName                                                       String?                          @db.VarChar(256)
  taxInvoiceCodeZipCodeId                                              Int?
  taxInvoiceDeliveryCustomer                                           String?                          @db.VarChar(256)
  taxInvoiceDeliveryName                                               String?                          @db.VarChar(256)
  taxInvoiceDeliverPhone                                               String?                          @db.VarChar(256)
  taxInvoiceDeliveryZipCodeId                                          Int?
  deliveryPrice                                                        Decimal?                         @db.Decimal(18, 2)
  createdAt                                                            DateTime?                        @default(now()) @db.Timestamp(0)
  createdBy                                                            String?                          @db.VarChar(256)
  updatedAt                                                            DateTime?                        @default(now()) @db.Timestamp(0)
  updatedBy                                                            String?                          @db.VarChar(256)
  locationName                                                         String?                          @db.VarChar(255)
  employeeCode                                                         String?                          @db.VarChar(256)
  landNumber                                                           String?                          @db.VarChar(256)
  d365SaleOrder                                                        String?                          @db.LongText
  taxInvoiceDeliveryType                                               sub_order_taxInvoiceDeliveryType @default(DeliveryWithProduct)
  taxInvoiceBranchNumber                                               String?                          @db.VarChar(256)
  refPONumber                                                          String?                          @db.VarChar(255)
  delivery_order                                                       delivery_order[]
  order_item                                                           order_item[]
  order_payment                                                        order_payment[]
  sale_order                                                           sale_order?
  company_type                                                         company_type?                    @relation(fields: [companyTypeId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_order_company_type_companyTypeId")
  country_sub_order_countryIdTocountry                                 country?                         @relation("sub_order_countryIdTocountry", fields: [countryId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_order_country_countryId")
  country_sub_order_taxInvoiceCountryIdTocountry                       country?                         @relation("sub_order_taxInvoiceCountryIdTocountry", fields: [taxInvoiceCountryId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_order_country_taxInvoiceCountryId")
  country_sub_order_taxInvoiceDeliveryCountryIdTocountry               country?                         @relation("sub_order_taxInvoiceDeliveryCountryIdTocountry", fields: [taxInvoiceDeliveryCountryId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_order_country_taxInvoiceDeliveryCountryId")
  district_sub_order_districtIdTodistrict                              district?                        @relation("sub_order_districtIdTodistrict", fields: [districtId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_order_district_districtId")
  district_sub_order_taxInvoiceDeliveryDistrictIdTodistrict            district?                        @relation("sub_order_taxInvoiceDeliveryDistrictIdTodistrict", fields: [taxInvoiceDeliveryDistrictId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_order_district_taxInvoiceDeliveryDistrictId")
  district_sub_order_taxInvoiceDistrictIdTodistrict                    district?                        @relation("sub_order_taxInvoiceDistrictIdTodistrict", fields: [taxInvoiceDistrictId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_order_district_taxInvoiceDistrictId")
  order                                                                order                            @relation(fields: [orderId], references: [id], onUpdate: Restrict, map: "fK_sub_order_order_orderId")
  province_sub_order_provinceIdToprovince                              province?                        @relation("sub_order_provinceIdToprovince", fields: [provinceId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_order_province_provinceId")
  province_sub_order_taxInvoiceDeliveryProvinceIdToprovince            province?                        @relation("sub_order_taxInvoiceDeliveryProvinceIdToprovince", fields: [taxInvoiceDeliveryProvinceId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_order_province_taxInvoiceDeliveryProvinceId")
  province_sub_order_taxInvoiceProvinceIdToprovince                    province?                        @relation("sub_order_taxInvoiceProvinceIdToprovince", fields: [taxInvoiceProvinceId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_order_province_taxInvoiceProvinceId")
  sub_district_sub_order_subDistrictIdTosub_district                   sub_district?                    @relation("sub_order_subDistrictIdTosub_district", fields: [subDistrictId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_order_sub_district_subDistrictId")
  sub_district_sub_order_taxInvoiceDeliverySubDistrictIdTosub_district sub_district?                    @relation("sub_order_taxInvoiceDeliverySubDistrictIdTosub_district", fields: [taxInvoiceDeliverySubDistrictId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_order_sub_district_taxInvoiceDeliverySubDistrictId")
  sub_district_sub_order_taxInvoiceSubDistrictIdTosub_district         sub_district?                    @relation("sub_order_taxInvoiceSubDistrictIdTosub_district", fields: [taxInvoiceSubDistrictId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_order_sub_district_taxInvoiceSubDistrictId")
  warehouse                                                            warehouse?                       @relation(fields: [warehouseId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_order_warehouse_warehouseId")
  zip_code_sub_order_taxInvoiceCodeZipCodeIdTozip_code                 zip_code?                        @relation("sub_order_taxInvoiceCodeZipCodeIdTozip_code", fields: [taxInvoiceCodeZipCodeId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_order_zip_code_taxInvoiceCodeZipCodeId")
  zip_code_sub_order_taxInvoiceDeliveryZipCodeIdTozip_code             zip_code?                        @relation("sub_order_taxInvoiceDeliveryZipCodeIdTozip_code", fields: [taxInvoiceDeliveryZipCodeId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_order_zip_code_taxInvoiceDeliveryZipCodeId")
  zip_code_sub_order_zipCodeIdTozip_code                               zip_code?                        @relation("sub_order_zipCodeIdTozip_code", fields: [zipCodeId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_order_zip_code_zipCodeId")
  sub_order_document                                                   sub_order_document[]
  sub_order_item                                                       sub_order_item[]

  @@index([companyTypeId], map: "iX_sub_order_companyTypeId")
  @@index([contactType], map: "iX_sub_order_contactType")
  @@index([countryId], map: "iX_sub_order_countryId")
  @@index([createdAt], map: "iX_sub_order_createdAt")
  @@index([districtId], map: "iX_sub_order_districtId")
  @@index([orderId], map: "iX_sub_order_orderId")
  @@index([provinceId], map: "iX_sub_order_provinceId")
  @@index([selfPickupTimePeriod], map: "iX_sub_order_selfPickupTimePeriod")
  @@index([subDistrictId], map: "iX_sub_order_subDistrictId")
  @@index([subOrderStatus], map: "iX_sub_order_subOrderStatus")
  @@index([taxInvoiceCodeZipCodeId], map: "iX_sub_order_taxInvoiceCodeZipCodeId")
  @@index([taxInvoiceCountryId], map: "iX_sub_order_taxInvoiceCountryId")
  @@index([taxInvoiceDeliveryCountryId], map: "iX_sub_order_taxInvoiceDeliveryCountryId")
  @@index([taxInvoiceDeliveryDistrictId], map: "iX_sub_order_taxInvoiceDeliveryDistrictId")
  @@index([taxInvoiceDeliveryProvinceId], map: "iX_sub_order_taxInvoiceDeliveryProvinceId")
  @@index([taxInvoiceDeliverySubDistrictId], map: "iX_sub_order_taxInvoiceDeliverySubDistrictId")
  @@index([taxInvoiceDeliveryType], map: "iX_sub_order_taxInvoiceDeliveryType")
  @@index([taxInvoiceDeliveryZipCodeId], map: "iX_sub_order_taxInvoiceDeliveryZipCodeId")
  @@index([taxInvoiceDistrictId], map: "iX_sub_order_taxInvoiceDistrictId")
  @@index([taxInvoiceProvinceId], map: "iX_sub_order_taxInvoiceProvinceId")
  @@index([taxInvoiceSubDistrictId], map: "iX_sub_order_taxInvoiceSubDistrictId")
  @@index([taxInvoiceType], map: "iX_sub_order_taxInvoiceType")
  @@index([updatedAt], map: "iX_sub_order_updatedAt")
  @@index([warehouseId], map: "iX_sub_order_warehouseId")
  @@index([zipCodeId], map: "iX_sub_order_zipCodeId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sub_order_document {
  id         Int       @id @default(autoincrement())
  subOrderId Int
  documentId Int
  createdAt  DateTime? @default(now()) @db.Timestamp(0)
  createdBy  String?   @db.VarChar(256)
  updatedAt  DateTime? @default(now()) @db.Timestamp(0)
  updatedBy  String?   @db.VarChar(256)
  document   document  @relation(fields: [documentId], references: [id], onUpdate: Restrict, map: "fK_sub_order_document_documents_documentId")
  sub_order  sub_order @relation(fields: [subOrderId], references: [id], onUpdate: Restrict, map: "fK_sub_order_document_sub_order_subOrderId")

  @@index([createdAt], map: "iX_sub_order_document_createdAt")
  @@index([documentId], map: "iX_sub_order_document_documentId")
  @@index([subOrderId], map: "iX_sub_order_document_subOrderId")
  @@index([updatedAt], map: "iX_sub_order_document_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sub_order_file_temp {
  id             Int     @id @default(autoincrement())
  subOrderTempId Int
  fieldname      String? @db.VarChar(255)
  fileExtension  String? @db.VarChar(255)
  fileName       String? @db.VarChar(255)
  fileSize       Float?
  filePath       String? @db.Text
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sub_order_item {
  id                Int               @id @default(autoincrement())
  subOrderId        Int
  productId         Int?
  promotionBranchId Int?
  qty               Int
  price             Decimal           @db.Decimal(18, 2)
  createdAt         DateTime?         @default(now()) @db.Timestamp(0)
  createdBy         String?           @db.VarChar(256)
  updatedAt         DateTime?         @default(now()) @db.Timestamp(0)
  updatedBy         String?           @db.VarChar(256)
  branch_product    branch_product?   @relation(fields: [productId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_order_item_branch_product_productId")
  promotion_branch  promotion_branch? @relation(fields: [promotionBranchId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_order_item_promotionBranches_promotionBranchId")
  sub_order         sub_order         @relation(fields: [subOrderId], references: [id], onUpdate: Restrict, map: "fK_sub_order_item_sub_order_subOrderId")

  @@index([createdAt], map: "iX_sub_order_item_createdAt")
  @@index([productId], map: "iX_sub_order_item_productId")
  @@index([promotionBranchId], map: "iX_sub_order_item_promotionBranchId")
  @@index([subOrderId], map: "iX_sub_order_item_subOrderId")
  @@index([updatedAt], map: "iX_sub_order_item_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sub_order_temp {
  id                                       Int                                    @id @default(autoincrement())
  orderTempId                              Int
  contactType                              sub_order_temp_contactType?            @default(PERSONAL)
  receiverName                             String?                                @db.VarChar(255)
  receiverPhone                            String?                                @db.VarChar(255)
  deliveryDate                             DateTime?                              @db.DateTime(0)
  selfPickupTimePeriod                     sub_order_temp_selfPickupTimePeriod?   @default(NotSpecified)
  address                                  String?                                @db.Text
  countryId                                Int?
  provinceId                               Int?
  districtId                               Int?
  subDistrictId                            Int?
  zipCodeId                                Int?
  deliveryNote                             String?                                @db.Text
  needTaxInvoice                           Int?
  isTaxInvoiceDeliveryUsingCustomerAddress Int?
  companyTypeId                            Int?
  taxInvoiceType                           sub_order_temp_taxInvoiceType?         @default(NotSpecified)
  taxInvoiceCompanyName                    String?                                @db.VarChar(255)
  taxInvoiceTaxId                          String?                                @db.VarChar(255)
  taxInvoiceName                           String?                                @db.VarChar(255)
  taxInvoiceBranch                         String?                                @db.VarChar(255)
  taxInvoiceBranchNumber                   Int?
  taxInvoiceCustomer                       String?                                @db.VarChar(255)
  taxInvoicePhone                          String?                                @db.VarChar(255)
  taxInvoiceAddress                        String?                                @db.Text
  taxInvoiceCountryId                      Int?
  taxInvoiceProvinceId                     Int?
  taxInvoiceDistrictId                     Int?
  taxInvoiceSubDistrictId                  Int?
  taxInvoiceCodeZipCodeId                  Int?
  taxInvoiceDeliveryName                   String?                                @db.VarChar(255)
  taxInvoiceDeliveryCustomer               String?                                @db.VarChar(255)
  taxInvoiceDeliveryPhone                  String?                                @db.VarChar(255)
  taxInvoiceDeliveryType                   sub_order_temp_taxInvoiceDeliveryType? @default(DeliveryWithProduct)
  taxInvoiceDeliveryAddress                String?                                @db.Text
  taxInvoiceDeliveryCountryId              Int?
  taxInvoiceDeliveryProvinceId             Int?
  taxInvoiceDeliveryDistrictId             Int?
  taxInvoiceDeliverySubDistrictId          Int?
  taxInvoiceDeliveryZipCodeId              Int?
  employeeCode                             String?                                @db.VarChar(255)
  locationName                             String?                                @db.VarChar(255)
  latitude                                 Float?
  longitude                                Float?
  description                              String?                                @db.Text
  note                                     String?                                @db.Text
  wareHouseId                              Int?
  landNumber                               String?                                @db.VarChar(255)
  createdBy                                String?                                @db.VarChar(255)
  createdAt                                DateTime?                              @default(now()) @db.Timestamp(0)
  updatedBy                                String?                                @db.VarChar(255)
  updatedAt                                DateTime?                              @default(now()) @db.Timestamp(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sub_quotation {
  id                       Int                        @id @default(autoincrement())
  quotationId              Int
  deliveryDate             DateTime?                  @db.DateTime(6)
  receiverName             String?                    @db.VarChar(200)
  address                  String?                    @db.VarChar(256)
  countryId                Int?
  provinceId               Int?
  districtId               Int?
  subDistrictId            Int?
  zipCodeId                Int?
  latitude                 Float?
  longitude                Float?
  selfPickupTimePeriod     Int?
  locationName             String?                    @db.VarChar(256)
  status                   sub_quotation_status       @default(Active)
  createdAt                DateTime?                  @default(now()) @db.Timestamp(0)
  createdBy                String?                    @db.VarChar(256)
  updatedAt                DateTime?                  @default(now()) @db.Timestamp(0)
  updatedBy                String?                    @db.VarChar(256)
  needTaxInvoice           Boolean                    @default(false)
  bargainNote              String?                    @db.VarChar(256)
  cancelNote               String?                    @db.VarChar(256)
  deliveryPrice            Decimal                    @default(0.00) @db.Decimal(18, 2)
  display                  Boolean                    @default(false)
  landNumber               String?                    @db.VarChar(256)
  note                     String?                    @db.LongText
  projectName              String?                    @db.VarChar(255)
  receiverPhone            String?                    @db.VarChar(255)
  subQtNumber              String?                    @db.VarChar(256)
  totalPrice               Decimal?                   @db.Decimal(18, 2)
  quotation_delivery       quotation_delivery[]
  country                  country?                   @relation(fields: [countryId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_quotation_country_countryId")
  district                 district?                  @relation(fields: [districtId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_quotation_district_districtId")
  province                 province?                  @relation(fields: [provinceId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_quotation_province_provinceId")
  quotation                quotation                  @relation(fields: [quotationId], references: [id], onUpdate: Restrict, map: "fK_sub_quotation_quotation_quotationId")
  sub_district             sub_district?              @relation(fields: [subDistrictId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_quotation_sub_district_subDistrictId")
  zip_code                 zip_code?                  @relation(fields: [zipCodeId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_sub_quotation_zip_code_zipCodeId")
  sub_quotation_item       sub_quotation_item?
  tax_invoice_and_delivery tax_invoice_and_delivery[]

  @@index([countryId], map: "iX_sub_quotation_countryId")
  @@index([createdAt], map: "iX_sub_quotation_createdAt")
  @@index([districtId], map: "iX_sub_quotation_districtId")
  @@index([provinceId], map: "iX_sub_quotation_provinceId")
  @@index([quotationId], map: "iX_sub_quotation_quotationId")
  @@index([status], map: "iX_sub_quotation_status")
  @@index([subDistrictId], map: "iX_sub_quotation_subDistrictId")
  @@index([updatedAt], map: "iX_sub_quotation_updatedAt")
  @@index([zipCodeId], map: "iX_sub_quotation_zipCodeId")
}

model sub_quotation_item {
  id                           Int           @id @default(autoincrement())
  subQuotationId               Int?
  productDetail                String?       @db.VarChar(255)
  qty                          Int?
  unit                         String?       @db.VarChar(255)
  branchProductId              Int?
  type                         String?       @db.VarChar(255)
  promotionId                  Int?
  volumePricePromotionBranchId Int?
  promotionType                String?       @db.VarChar(255)
  unitPrice                    Int?
  quotedPrice                  Int?
  updatedBy                    String?       @db.VarChar(255)
  updatedAt                    DateTime?     @db.DateTime(0)
  createdBy                    String?       @db.VarChar(255)
  createdAt                    DateTime?     @db.DateTime(0)
  sub_quotation                sub_quotation @relation(fields: [id], references: [id], onDelete: Cascade, map: "sub_quotation_item_ibfk_1")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model suggestion_product_document {
  id         Int                                   @id @default(autoincrement())
  agentId    Int
  documentId Int?
  jobStatus  suggestion_product_document_jobStatus @default(Processing)
  createdAt  DateTime?                             @default(now()) @db.Timestamp(0)
  createdBy  String?                               @db.VarChar(256)
  updatedAt  DateTime?                             @default(now()) @db.Timestamp(0)
  updatedBy  String?                               @db.VarChar(256)
  agent      agent                                 @relation(fields: [agentId], references: [id], onUpdate: Restrict, map: "fK_suggestion_product_document_agent_agentId")
  document   document?                             @relation(fields: [documentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_suggestion_product_document_documents_documentId")

  @@index([agentId], map: "iX_suggestion_product_document_agentId")
  @@index([createdAt], map: "iX_suggestion_product_document_createdAt")
  @@index([documentId], map: "iX_suggestion_product_document_documentId")
  @@index([jobStatus], map: "iX_suggestion_product_document_jobStatus")
  @@index([updatedAt], map: "iX_suggestion_product_document_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model synonym_master {
  id            Int                   @id @default(autoincrement())
  nameMain      String?               @db.VarChar(255)
  nameTh        String?               @db.VarChar(255)
  nameEn        String?               @db.VarChar(255)
  type          String?               @db.VarChar(255)
  status        synonym_master_status @default(Active)
  createdAt     DateTime?             @default(now()) @db.Timestamp(0)
  createdBy     String?               @db.VarChar(256)
  updatedAt     DateTime?             @default(now()) @db.Timestamp(0)
  updatedBy     String?               @db.VarChar(256)
  synonym_value synonym_value[]

  @@index([createdAt], map: "iX_synonym_master_createdAt")
  @@index([status], map: "iX_synonym_master_status")
  @@index([updatedAt], map: "iX_synonym_master_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model synonym_value {
  id              Int                  @id @default(autoincrement())
  synonymMasterId Int
  synonym         String?              @db.VarChar(255)
  status          synonym_value_status @default(Active)
  createdAt       DateTime?            @default(now()) @db.Timestamp(0)
  createdBy       String?              @db.VarChar(256)
  updatedAt       DateTime?            @default(now()) @db.Timestamp(0)
  updatedBy       String?              @db.VarChar(256)
  synonym_master  synonym_master       @relation(fields: [synonymMasterId], references: [id], onUpdate: Restrict, map: "fK_synonym_value_synonym_master_synonymMasterId")

  @@index([createdAt], map: "iX_synonym_value_createdAt")
  @@index([status], map: "iX_synonym_value_status")
  @@index([synonymMasterId], map: "iX_synonym_value_synonymMasterId")
  @@index([updatedAt], map: "iX_synonym_value_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model tax_invoice {
  id                                                                     Int                    @id @default(autoincrement())
  saleOrderId                                                            Int                    @default(0)
  needTaxInvoice                                                         Boolean
  isTaxInvoiceDeliveryUsingCustomerAddress                               Boolean
  companyTypeId                                                          Int?
  taxInvoiceCompanyName                                                  String?                @db.LongText
  taxInvoicePhone                                                        String?                @db.LongText
  taxInvoiceTaxId                                                        String?                @db.LongText
  taxInvoiceAddress                                                      String?                @db.LongText
  taxInvoiceCountryId                                                    Int?
  taxInvoiceProvinceId                                                   Int?
  taxInvoiceDistrictId                                                   Int?
  taxInvoiceSubDistrictId                                                Int?
  taxInvoiceDeliveryAddress                                              String?                @db.LongText
  taxInvoiceDeliveryCountryId                                            Int?
  taxInvoiceDeliveryProvinceId                                           Int?
  taxInvoiceDeliveryDistrictId                                           Int?
  taxInvoiceDeliverySubDistrictId                                        Int?
  createdAt                                                              DateTime?              @default(now()) @db.Timestamp(0)
  createdBy                                                              String?                @db.VarChar(256)
  updatedAt                                                              DateTime?              @default(now()) @db.Timestamp(0)
  updatedBy                                                              String?                @db.VarChar(256)
  orderId                                                                Int?
  company_type                                                           company_type?          @relation(fields: [companyTypeId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_tax_invoice_company_type_companyTypeId")
  country_tax_invoice_taxInvoiceCountryIdTocountry                       country?               @relation("tax_invoice_taxInvoiceCountryIdTocountry", fields: [taxInvoiceCountryId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_tax_invoice_country_taxInvoiceCountryId")
  country_tax_invoice_taxInvoiceDeliveryCountryIdTocountry               country?               @relation("tax_invoice_taxInvoiceDeliveryCountryIdTocountry", fields: [taxInvoiceDeliveryCountryId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_tax_invoice_country_taxInvoiceDeliveryCountryId")
  district_tax_invoice_taxInvoiceDeliveryDistrictIdTodistrict            district?              @relation("tax_invoice_taxInvoiceDeliveryDistrictIdTodistrict", fields: [taxInvoiceDeliveryDistrictId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_tax_invoice_district_taxInvoiceDeliveryDistrictId")
  district_tax_invoice_taxInvoiceDistrictIdTodistrict                    district?              @relation("tax_invoice_taxInvoiceDistrictIdTodistrict", fields: [taxInvoiceDistrictId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_tax_invoice_district_taxInvoiceDistrictId")
  order                                                                  order?                 @relation(fields: [orderId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_tax_invoice_order_orderId")
  province_tax_invoice_taxInvoiceDeliveryProvinceIdToprovince            province?              @relation("tax_invoice_taxInvoiceDeliveryProvinceIdToprovince", fields: [taxInvoiceDeliveryProvinceId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_tax_invoice_province_taxInvoiceDeliveryProvinceId")
  province_tax_invoice_taxInvoiceProvinceIdToprovince                    province?              @relation("tax_invoice_taxInvoiceProvinceIdToprovince", fields: [taxInvoiceProvinceId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_tax_invoice_province_taxInvoiceProvinceId")
  sale_order                                                             sale_order             @relation(fields: [saleOrderId], references: [id], onUpdate: Restrict, map: "fK_tax_invoice_sale_order_saleOrderId")
  sub_district_tax_invoice_taxInvoiceDeliverySubDistrictIdTosub_district sub_district?          @relation("tax_invoice_taxInvoiceDeliverySubDistrictIdTosub_district", fields: [taxInvoiceDeliverySubDistrictId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_tax_invoice_sub_district_taxInvoiceDeliverySubDistrictId")
  sub_district_tax_invoice_taxInvoiceSubDistrictIdTosub_district         sub_district?          @relation("tax_invoice_taxInvoiceSubDistrictIdTosub_district", fields: [taxInvoiceSubDistrictId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_tax_invoice_sub_district_taxInvoiceSubDistrictId")
  tax_invoice_document                                                   tax_invoice_document[]

  @@index([companyTypeId], map: "iX_tax_invoice_companyTypeId")
  @@index([createdAt], map: "iX_tax_invoice_createdAt")
  @@index([orderId], map: "iX_tax_invoice_orderId")
  @@index([saleOrderId], map: "iX_tax_invoice_saleOrderId")
  @@index([taxInvoiceCountryId], map: "iX_tax_invoice_taxInvoiceCountryId")
  @@index([taxInvoiceDeliveryCountryId], map: "iX_tax_invoice_taxInvoiceDeliveryCountryId")
  @@index([taxInvoiceDeliveryDistrictId], map: "iX_tax_invoice_taxInvoiceDeliveryDistrictId")
  @@index([taxInvoiceDeliveryProvinceId], map: "iX_tax_invoice_taxInvoiceDeliveryProvinceId")
  @@index([taxInvoiceDeliverySubDistrictId], map: "iX_tax_invoice_taxInvoiceDeliverySubDistrictId")
  @@index([taxInvoiceDistrictId], map: "iX_tax_invoice_taxInvoiceDistrictId")
  @@index([taxInvoiceProvinceId], map: "iX_tax_invoice_taxInvoiceProvinceId")
  @@index([taxInvoiceSubDistrictId], map: "iX_tax_invoice_taxInvoiceSubDistrictId")
  @@index([updatedAt], map: "iX_tax_invoice_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model tax_invoice_and_delivery {
  id                                                                                  Int                                     @id @default(autoincrement())
  status                                                                              tax_invoice_and_delivery_status         @default(Active)
  subBoqId                                                                            Int?
  subQuotationId                                                                      Int?
  quotationDeliveryId                                                                 Int?
  contactType                                                                         Int?
  companyTypeId                                                                       Int?
  taxInvoiceCompanyName                                                               String?                                 @db.VarChar(200)
  taxInvoiceBranch                                                                    String?                                 @db.VarChar(256)
  taxInvoiceName                                                                      String?                                 @db.VarChar(256)
  taxInvoiceCustomer                                                                  String?                                 @db.VarChar(256)
  taxInvoiceType                                                                      tax_invoice_and_delivery_taxInvoiceType @default(NotSpecified)
  taxInvoiceTaxId                                                                     String?                                 @db.LongText
  taxInvoicePhone                                                                     String?                                 @db.VarChar(256)
  taxInvoiceAddress                                                                   String?                                 @db.VarChar(256)
  taxInvoiceCountryId                                                                 Int?
  taxInvoiceProvinceId                                                                Int?
  taxInvoiceDistrictId                                                                Int?
  taxInvoiceSubDistrictId                                                             Int?
  taxInvoiceCodeZipCodeId                                                             Int?
  taxInvoiceDeliveryType                                                              Int?
  isTaxInvoiceDeliveryUsingCustomerAddress                                            Boolean?
  taxInvoiceDeliveryCustomer                                                          String?                                 @db.VarChar(256)
  taxInvoiceDeliveryPhone                                                             String?                                 @db.VarChar(100)
  taxInvoiceDeliveryName                                                              String?                                 @db.VarChar(256)
  taxInvoiceDeliveryAddress                                                           String?                                 @db.VarChar(256)
  taxInvoiceDeliveryCountryId                                                         Int?
  taxInvoiceDeliveryProvinceId                                                        Int?
  taxInvoiceDeliveryDistrictId                                                        Int?
  taxInvoiceDeliverySubDistrictId                                                     Int?
  taxInvoiceDeliveryZipCodeId                                                         Int?
  createdAt                                                                           DateTime?                               @default(now()) @db.Timestamp(0)
  createdBy                                                                           String?                                 @db.VarChar(256)
  updatedAt                                                                           DateTime?                               @default(now()) @db.Timestamp(0)
  updatedBy                                                                           String?                                 @db.VarChar(256)
  taxInvoiceBranchNumber                                                              String?                                 @db.VarChar(256)
  company_type                                                                        company_type?                           @relation(fields: [companyTypeId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_tax_invoice_and_delivery_company_type_companyTypeId")
  country_tax_invoice_and_delivery_taxInvoiceCountryIdTocountry                       country?                                @relation("tax_invoice_and_delivery_taxInvoiceCountryIdTocountry", fields: [taxInvoiceCountryId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_tax_invoice_and_delivery_country_taxInvoiceCountryId")
  country_tax_invoice_and_delivery_taxInvoiceDeliveryCountryIdTocountry               country?                                @relation("tax_invoice_and_delivery_taxInvoiceDeliveryCountryIdTocountry", fields: [taxInvoiceDeliveryCountryId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_tax_invoice_and_delivery_country_taxInvoiceDeliveryCountryId")
  district_tax_invoice_and_delivery_taxInvoiceDeliveryDistrictIdTodistrict            district?                               @relation("tax_invoice_and_delivery_taxInvoiceDeliveryDistrictIdTodistrict", fields: [taxInvoiceDeliveryDistrictId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_tax_invoice_and_delivery_district_taxInvoiceDeliveryDistrict~")
  district_tax_invoice_and_delivery_taxInvoiceDistrictIdTodistrict                    district?                               @relation("tax_invoice_and_delivery_taxInvoiceDistrictIdTodistrict", fields: [taxInvoiceDistrictId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_tax_invoice_and_delivery_district_taxInvoiceDistrictId")
  province_tax_invoice_and_delivery_taxInvoiceDeliveryProvinceIdToprovince            province?                               @relation("tax_invoice_and_delivery_taxInvoiceDeliveryProvinceIdToprovince", fields: [taxInvoiceDeliveryProvinceId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_tax_invoice_and_delivery_province_taxInvoiceDeliveryProvince~")
  province_tax_invoice_and_delivery_taxInvoiceProvinceIdToprovince                    province?                               @relation("tax_invoice_and_delivery_taxInvoiceProvinceIdToprovince", fields: [taxInvoiceProvinceId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_tax_invoice_and_delivery_province_taxInvoiceProvinceId")
  quotation_delivery                                                                  quotation_delivery?                     @relation(fields: [quotationDeliveryId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_tax_invoice_and_delivery_quotation_delivery_quotationDeliver~")
  sub_boq                                                                             sub_boq?                                @relation(fields: [subBoqId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_tax_invoice_and_delivery_sub_boq_subBoqId")
  sub_district_tax_invoice_and_delivery_taxInvoiceDeliverySubDistrictIdTosub_district sub_district?                           @relation("tax_invoice_and_delivery_taxInvoiceDeliverySubDistrictIdTosub_district", fields: [taxInvoiceDeliverySubDistrictId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_tax_invoice_and_delivery_sub_district_taxInvoiceDeliverySubD~")
  sub_district_tax_invoice_and_delivery_taxInvoiceSubDistrictIdTosub_district         sub_district?                           @relation("tax_invoice_and_delivery_taxInvoiceSubDistrictIdTosub_district", fields: [taxInvoiceSubDistrictId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_tax_invoice_and_delivery_sub_district_taxInvoiceSubDistrictId")
  sub_quotation                                                                       sub_quotation?                          @relation(fields: [subQuotationId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_tax_invoice_and_delivery_sub_quotation_subQuotationId")
  zip_code_tax_invoice_and_delivery_taxInvoiceCodeZipCodeIdTozip_code                 zip_code?                               @relation("tax_invoice_and_delivery_taxInvoiceCodeZipCodeIdTozip_code", fields: [taxInvoiceCodeZipCodeId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_tax_invoice_and_delivery_zip_code_taxInvoiceCodeZipCodeId")
  zip_code_tax_invoice_and_delivery_taxInvoiceDeliveryZipCodeIdTozip_code             zip_code?                               @relation("tax_invoice_and_delivery_taxInvoiceDeliveryZipCodeIdTozip_code", fields: [taxInvoiceDeliveryZipCodeId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_tax_invoice_and_delivery_zip_code_taxInvoiceDeliveryZipCodeId")

  @@index([companyTypeId], map: "iX_tax_invoice_and_delivery_companyTypeId")
  @@index([createdAt], map: "iX_tax_invoice_and_delivery_createdAt")
  @@index([quotationDeliveryId], map: "iX_tax_invoice_and_delivery_quotationDeliveryId")
  @@index([status], map: "iX_tax_invoice_and_delivery_status")
  @@index([subBoqId], map: "iX_tax_invoice_and_delivery_subBoqId")
  @@index([subQuotationId], map: "iX_tax_invoice_and_delivery_subQuotationId")
  @@index([taxInvoiceCodeZipCodeId], map: "iX_tax_invoice_and_delivery_taxInvoiceCodeZipCodeId")
  @@index([taxInvoiceCountryId], map: "iX_tax_invoice_and_delivery_taxInvoiceCountryId")
  @@index([taxInvoiceDeliveryCountryId], map: "iX_tax_invoice_and_delivery_taxInvoiceDeliveryCountryId")
  @@index([taxInvoiceDeliveryDistrictId], map: "iX_tax_invoice_and_delivery_taxInvoiceDeliveryDistrictId")
  @@index([taxInvoiceDeliveryProvinceId], map: "iX_tax_invoice_and_delivery_taxInvoiceDeliveryProvinceId")
  @@index([taxInvoiceDeliverySubDistrictId], map: "iX_tax_invoice_and_delivery_taxInvoiceDeliverySubDistrictId")
  @@index([taxInvoiceDeliveryZipCodeId], map: "iX_tax_invoice_and_delivery_taxInvoiceDeliveryZipCodeId")
  @@index([taxInvoiceDistrictId], map: "iX_tax_invoice_and_delivery_taxInvoiceDistrictId")
  @@index([taxInvoiceProvinceId], map: "iX_tax_invoice_and_delivery_taxInvoiceProvinceId")
  @@index([taxInvoiceSubDistrictId], map: "iX_tax_invoice_and_delivery_taxInvoiceSubDistrictId")
  @@index([taxInvoiceType], map: "iX_tax_invoice_and_delivery_taxInvoiceType")
  @@index([updatedAt], map: "iX_tax_invoice_and_delivery_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model tax_invoice_document {
  id           Int          @id @default(autoincrement())
  taxInvoiceId Int?
  documentId   Int
  createdAt    DateTime?    @default(now()) @db.Timestamp(0)
  createdBy    String?      @db.VarChar(256)
  updatedAt    DateTime?    @default(now()) @db.Timestamp(0)
  updatedBy    String?      @db.VarChar(256)
  saleOrderId  Int          @default(0)
  isFileSystem Boolean      @default(false)
  document     document     @relation(fields: [documentId], references: [id], onUpdate: Restrict, map: "fK_tax_invoice_document_documents_documentId")
  sale_order   sale_order   @relation(fields: [saleOrderId], references: [id], onUpdate: Restrict, map: "fK_tax_invoice_document_sale_order_saleOrderId")
  tax_invoice  tax_invoice? @relation(fields: [taxInvoiceId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_tax_invoice_document_tax_invoice_taxInvoiceId")

  @@index([createdAt], map: "iX_tax_invoice_document_createdAt")
  @@index([documentId], map: "iX_tax_invoice_document_documentId")
  @@index([saleOrderId], map: "iX_tax_invoice_document_saleOrderId")
  @@index([taxInvoiceId], map: "iX_tax_invoice_document_taxInvoiceId")
  @@index([updatedAt], map: "iX_tax_invoice_document_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model team_order_quotation {
  id                 Int                               @id @default(autoincrement())
  teamId             Int
  customerOrganizeId Int
  orderTempId        Int?
  orderStatus        team_order_quotation_orderStatus?
  quotationId        Int?
  qtStatus           team_order_quotation_qtStatus?
  isDisplay          Int?                              @default(1)
  note               String?                           @db.Text
  status             team_order_quotation_status?      @default(Active)
  createdBy          String?                           @db.VarChar(255)
  createdAt          DateTime?                         @default(now()) @db.Timestamp(0)

  @@index([teamId], map: "team_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model team_order_quotation_transfer {
  id                         Int                                   @id @default(autoincrement())
  teamId                     Int?
  transferTeamId             Int?
  customerOrganizeId         Int?
  transferCustomerOrganizeId Int?
  floor                      Int?
  level                      Int?
  orderTempId                Int?
  status                     team_order_quotation_transfer_status? @default(Active)
  createdBy                  String?                               @db.VarChar(255)
  createdAt                  DateTime?                             @db.Timestamp(0)
}

model temp_branch {
  id        Int @id @default(autoincrement())
  projectId Int
  branchId  Int

  @@index([branchId], map: "idx_branchId")
  @@index([projectId], map: "idx_projectId")
}

model temp_category {
  id            Int       @id @default(autoincrement())
  name          String?   @db.VarChar(255)
  categoryCode  String?   @db.VarChar(255)
  parentCode    String?   @db.VarChar(255)
  tagCategory   String?   @db.Text
  fileExcelCate Int?
  updatedBy     String?   @db.VarChar(255)
  updatedAt     DateTime? @db.DateTime(0)
  createdBy     String?   @db.VarChar(255)
  createdAt     DateTime? @db.DateTime(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model temp_product_group_migrate {
  id             Int                                @id @default(autoincrement())
  rowNumber      Int?
  tag            String?                            @db.Text
  productId      Int?
  itemId         String?                            @db.VarChar(255)
  productName    String?                            @db.Text
  dimension      String?                            @db.Text
  status         temp_product_group_migrate_status? @default(PENDING)
  fileExcel      Int?
  updatedBy      String?                            @db.VarChar(255)
  updatedAt      DateTime?                          @db.DateTime(0)
  createdBy      String?                            @db.VarChar(255)
  createdAt      DateTime?                          @db.DateTime(0)
  logStatus      String?                            @db.VarChar(255)
  productBrand   String?                            @db.VarChar(255)
  supplierNumber String?                            @db.VarChar(255)
}

model temp_product_migrate {
  id               Int                          @id @default(autoincrement())
  rowNumber        Int?
  onWeb            String?                      @db.VarChar(255)
  tag              String?                      @db.Text
  barcode          String?                      @db.VarChar(255)
  unit             String?                      @db.VarChar(255)
  productId        Int?
  itemCode         String?                      @db.VarChar(255)
  productGroup     String?                      @db.VarChar(255)
  productSku       String?                      @db.VarChar(255)
  brand            String?                      @db.VarChar(255)
  hierarchy        String?                      @db.VarChar(255)
  filter1          String?                      @db.VarChar(255)
  filter2          String?                      @db.VarChar(255)
  series           String?                      @db.VarChar(255)
  model            String?                      @db.VarChar(255)
  material         String?                      @db.VarChar(255)
  guarantee        String?                      @db.VarChar(255)
  v_guarantee      String?                      @db.Text
  vTIS             String?                      @db.VarChar(255)
  product_width    String?                      @db.VarChar(255)
  product_length   String?                      @db.VarChar(255)
  product_hight    String?                      @db.VarChar(255)
  packaging_width  String?                      @db.VarChar(255)
  packaging_length String?                      @db.VarChar(255)
  packaging_hight  String?                      @db.VarChar(255)
  packaging_shape  String?                      @db.VarChar(255)
  netWeight        String?                      @db.VarChar(255)
  grossWeight      String?                      @db.VarChar(255)
  description      String?                      @db.Text
  howto            String?                      @db.Text
  suggestion       String?                      @db.Text
  caution          String?                      @db.Text
  country          String?                      @db.VarChar(255)
  status           temp_product_migrate_status? @default(PENDING)
  updatedBy        String?                      @db.VarChar(255)
  updatedAt        DateTime?                    @db.DateTime(0)
  createdBy        String?                      @db.VarChar(255)
  createdAt        DateTime?                    @db.DateTime(0)
  packageShape     String?                      @db.VarChar(255)
  productVariantId Int?
  vDimension1      String?                      @db.VarChar(255)
  vDimension2      String?                      @db.VarChar(255)
  vDimension3      String?                      @db.VarChar(255)
  vDimension4      String?                      @db.VarChar(255)
  fileExcel        Int?
  sheetExcel       String?                      @db.VarChar(100)
  logStatus        String?                      @db.VarChar(100)
  oldGroupProduct  String?                      @db.VarChar(255)
  comments         String?                      @db.Text
}

model temp_product_variant_detail {
  id            Int                                 @id @default(autoincrement())
  fileExcelId   Int?
  tempProductId Int?
  barcode       String?                             @db.VarChar(255)
  typeBarcode   String?                             @db.VarChar(255)
  remarkBarcode String?                             @db.VarChar(255)
  skuCode       String?                             @db.VarChar(255)
  typeSkuCode   String?                             @db.VarChar(255)
  remarkCode    String?                             @db.VarChar(255)
  status        temp_product_variant_detail_status? @default(Active)
  updatedBy     String?                             @db.VarChar(255)
  updatedAt     DateTime?                           @db.Timestamp(0)
  createdBy     String?                             @db.VarChar(255)
  createdAt     DateTime?                           @default(now()) @db.Timestamp(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model temp_product_variant_price {
  productVariantId                                                               Int              @id
  price                                                                          Decimal          @db.Decimal(18, 2)
  tbProductVariantId                                                             Int?
  createdAt                                                                      DateTime?        @default(now()) @db.Timestamp(0)
  createdBy                                                                      String?          @db.VarChar(256)
  updatedAt                                                                      DateTime?        @default(now()) @db.Timestamp(0)
  updatedBy                                                                      String?          @db.VarChar(256)
  product_variant_temp_product_variant_price_productVariantIdToproduct_variant   product_variant  @relation("temp_product_variant_price_productVariantIdToproduct_variant", fields: [productVariantId], references: [id], onUpdate: Restrict, map: "fK_temp_product_variant_price_product_variant_productVariantId")
  product_variant_temp_product_variant_price_tbProductVariantIdToproduct_variant product_variant? @relation("temp_product_variant_price_tbProductVariantIdToproduct_variant", fields: [tbProductVariantId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_temp_product_variant_price_product_variant_tbProductVariantId")

  @@index([createdAt], map: "iX_temp_product_variant_price_createdAt")
  @@index([tbProductVariantId], map: "iX_temp_product_variant_price_tbProductVariantId")
  @@index([updatedAt], map: "iX_temp_product_variant_price_updatedAt")
}

model test {
  id        Int     @id @default(autoincrement())
  firstName String? @db.VarChar(255)
  age       Int?
  position  String? @db.VarChar(255)
}

model v_product_dimensions {
  dimensionId            Int      @id @default(autoincrement())
  productId              String?  @db.VarChar(255)
  brandId                String?  @db.VarChar(255)
  brandName              String?  @db.VarChar(255)
  categoryId             String?  @db.VarChar(255)
  productCategoryName    String?  @db.VarChar(255)
  subCategoryId          String?  @db.VarChar(255)
  productSubCategoryName String?  @db.VarChar(255)
  subCategory2Id         String?  @db.VarChar(255)
  classId                String?  @db.VarChar(255)
  className              String?  @db.VarChar(255)
  subClassId             String?  @db.VarChar(255)
  subClassName           String?  @db.VarChar(255)
  itemId                 String?  @db.VarChar(255)
  productName            String?  @db.VarChar(255)
  productCode            String?  @db.VarChar(255)
  productSku             String?  @db.VarChar(255)
  productNameAlias       String?  @db.VarChar(255)
  countUOMSOName         String?  @db.VarChar(255)
  productSeries          String?  @db.VarChar(255)
  productModel           String?  @db.VarChar(255)
  productShape           String?  @db.VarChar(255)
  productFeature         String?  @db.VarChar(255)
  productMaterial        String?  @db.VarChar(255)
  productWidth           String?  @db.VarChar(255)
  productHeight          String?  @db.VarChar(255)
  productLength          String?  @db.VarChar(255)
  productNetWeight       String?  @db.VarChar(255)
  productGrossWeight     String?  @db.VarChar(255)
  productInfo            String?  @db.VarChar(255)
  productWarranty        String?  @db.VarChar(255)
  productTISI            String?  @db.VarChar(255)
  productAdvice          String?  @db.VarChar(255)
  productCaution         String?  @db.VarChar(255)
  productInstruction     String?  @db.VarChar(255)
  productSizeId          String?  @db.VarChar(255)
  productSize            String?  @db.VarChar(255)
  productColorId         String?  @db.VarChar(255)
  productColor           String?  @db.VarChar(255)
  productConfigId        String?  @db.VarChar(255)
  productConfig          String?  @db.VarChar(255)
  productStyleId         String?  @db.VarChar(255)
  productStyle           String?  @db.VarChar(255)
  productBarcode         String?  @db.VarChar(255)
  dataAreaId             String?  @db.VarChar(255)
  madeToOrder            String?  @db.VarChar(255)
  createdAt              DateTime @db.DateTime(0)
  updatedAt              DateTime @db.DateTime(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model viewer {
  id        Int       @id @default(autoincrement())
  branchId  Int
  viewer    Int
  createdAt DateTime? @default(now()) @db.Timestamp(0)
  createdBy String?   @db.VarChar(256)
  updatedAt DateTime? @default(now()) @db.Timestamp(0)
  updatedBy String?   @db.VarChar(256)
  branch    branch    @relation(fields: [branchId], references: [id], onUpdate: Restrict, map: "fK_viewer_branch_branchId")

  @@index([branchId], map: "iX_viewer_branchId")
  @@index([createdAt], map: "iX_viewer_createdAt")
  @@index([updatedAt], map: "iX_viewer_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model warehouse {
  id                      Int                       @id @default(autoincrement())
  agentId                 Int
  name                    String?                   @db.VarChar(256)
  phone                   String?                   @db.VarChar(256)
  status                  warehouse_status          @default(Active)
  address                 String?                   @db.VarChar(1024)
  countryId               Int?
  provinceId              Int?
  districtId              Int?
  subDistrictId           Int?
  zipCodeId               Int?
  latitude                Float?
  longitude               Float?
  createdAt               DateTime?                 @default(now()) @db.Timestamp(0)
  createdBy               String?                   @db.VarChar(256)
  updatedAt               DateTime?                 @default(now()) @db.Timestamp(0)
  updatedBy               String?                   @db.VarChar(256)
  cisAddressId            String?                   @db.VarChar(256)
  agent_warehouse_pickup  agent_warehouse_pickup[]
  branch                  branch[]
  branch_warehouse_pickup branch_warehouse_pickup[]
  sub_order               sub_order[]
  agent                   agent                     @relation(fields: [agentId], references: [id], onUpdate: Restrict, map: "fK_warehouse_agent_agentId")
  country                 country?                  @relation(fields: [countryId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_warehouse_countries_countryId")
  district                district?                 @relation(fields: [districtId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_warehouse_districts_districtId")
  province                province?                 @relation(fields: [provinceId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_warehouse_provinces_provinceId")
  sub_district            sub_district?             @relation(fields: [subDistrictId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_warehouse_subDistricts_subDistrictId")
  zip_code                zip_code?                 @relation(fields: [zipCodeId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fK_warehouse_zipCodes_zipCodeId")

  @@index([agentId], map: "iX_warehouse_agentId")
  @@index([countryId], map: "iX_warehouse_countryId")
  @@index([createdAt], map: "iX_warehouse_createdAt")
  @@index([districtId], map: "iX_warehouse_districtId")
  @@index([provinceId], map: "iX_warehouse_provinceId")
  @@index([status], map: "iX_warehouse_status")
  @@index([subDistrictId], map: "iX_warehouse_subDistrictId")
  @@index([updatedAt], map: "iX_warehouse_updatedAt")
  @@index([zipCodeId], map: "iX_warehouse_zipCodeId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model workflow {
  id                Int                 @id @default(autoincrement())
  agentId           Int
  name              String?             @db.VarChar(256)
  workflowType      String?             @db.VarChar(256)
  status            workflow_status     @default(Active)
  createdAt         DateTime?           @default(now()) @db.Timestamp(0)
  createdBy         String?             @db.VarChar(256)
  updatedAt         DateTime?           @default(now()) @db.Timestamp(0)
  updatedBy         String?             @db.VarChar(256)
  quotation         quotation[]
  quotation_request quotation_request[]
  agent             agent               @relation(fields: [agentId], references: [id], onUpdate: Restrict, map: "fK_workflow_agent_agentId")
  workflow_step     workflow_step[]

  @@index([agentId], map: "iX_workflow_agentId")
  @@index([createdAt], map: "iX_workflow_createdAt")
  @@index([status], map: "iX_workflow_status")
  @@index([updatedAt], map: "iX_workflow_updatedAt")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model workflow_step {
  id                       Int                        @id @default(autoincrement())
  workflowId               Int
  name                     String?                    @db.VarChar(256)
  stepNo                   Int
  status                   workflow_step_status       @default(Active)
  createdAt                DateTime?                  @default(now()) @db.Timestamp(0)
  createdBy                String?                    @db.VarChar(256)
  updatedAt                DateTime?                  @default(now()) @db.Timestamp(0)
  updatedBy                String?                    @db.VarChar(256)
  branchType               workflow_step_branchType   @default(All)
  isCreateStep             Boolean                    @default(false)
  quotation_request        quotation_request[]
  workflow                 workflow                   @relation(fields: [workflowId], references: [id], onUpdate: Restrict, map: "fK_workflow_step_workflow_workflowId")
  workflow_step_agent_user workflow_step_agent_user[]

  @@index([branchType], map: "iX_workflow_step_branchType")
  @@index([createdAt], map: "iX_workflow_step_createdAt")
  @@index([status], map: "iX_workflow_step_status")
  @@index([updatedAt], map: "iX_workflow_step_updatedAt")
  @@index([workflowId], map: "iX_workflow_step_workflowId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model workflow_step_agent_user {
  id                Int                             @id @default(autoincrement())
  workflowStepId    Int
  agentUserId       Int
  status            workflow_step_agent_user_status @default(Active)
  createdAt         DateTime?                       @default(now()) @db.Timestamp(0)
  createdBy         String?                         @db.VarChar(256)
  updatedAt         DateTime?                       @default(now()) @db.Timestamp(0)
  updatedBy         String?                         @db.VarChar(256)
  quotation_request quotation_request[]
  agent_user        agent_user                      @relation(fields: [agentUserId], references: [id], onUpdate: Restrict, map: "fK_workflow_step_agent_user_agent_user_agentUserId")
  workflow_step     workflow_step                   @relation(fields: [workflowStepId], references: [id], onUpdate: Restrict, map: "fK_workflow_step_agent_user_workflow_step_workflowStepId")

  @@index([agentUserId], map: "iX_workflow_step_agent_user_agentUserId")
  @@index([createdAt], map: "iX_workflow_step_agent_user_createdAt")
  @@index([status], map: "iX_workflow_step_agent_user_status")
  @@index([updatedAt], map: "iX_workflow_step_agent_user_updatedAt")
  @@index([workflowStepId], map: "iX_workflow_step_agent_user_workflowStepId")
}

model workshop_order {
  id          Int       @id @default(autoincrement())
  orderNumber String?   @db.VarChar(255)
  amount      Int?
  price       Float?
  total       Float?
  createdAt   DateTime? @db.DateTime(0)
  createdBy   String?   @db.VarChar(255)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model zip_code {
  id                                                                                      Int                         @id @default(autoincrement())
  code                                                                                    String?                     @db.VarChar(8)
  provinceId                                                                              Int
  districtId                                                                              Int
  subDistrictId                                                                           Int
  createdAt                                                                               DateTime?                   @default(now()) @db.Timestamp(0)
  createdBy                                                                               String?                     @db.VarChar(256)
  agent                                                                                   agent[]
  branch                                                                                  branch[]
  credit_customer                                                                         credit_customer[]
  customer_address                                                                        customer_address[]
  customer_data                                                                           customer_data[]
  customer_delivery_address                                                               customer_delivery_address[]
  delivery_order                                                                          delivery_order[]
  order                                                                                   order[]
  project                                                                                 project[]
  quotation_delivery                                                                      quotation_delivery[]
  sub_boq_sub_boq_taxInvoiceCodeZipCodeIdTozip_code                                       sub_boq[]                   @relation("sub_boq_taxInvoiceCodeZipCodeIdTozip_code")
  sub_boq_sub_boq_taxInvoiceDeliveryZipCodeIdTozip_code                                   sub_boq[]                   @relation("sub_boq_taxInvoiceDeliveryZipCodeIdTozip_code")
  sub_boq_sub_boq_zipCodeIdTozip_code                                                     sub_boq[]                   @relation("sub_boq_zipCodeIdTozip_code")
  sub_order_sub_order_taxInvoiceCodeZipCodeIdTozip_code                                   sub_order[]                 @relation("sub_order_taxInvoiceCodeZipCodeIdTozip_code")
  sub_order_sub_order_taxInvoiceDeliveryZipCodeIdTozip_code                               sub_order[]                 @relation("sub_order_taxInvoiceDeliveryZipCodeIdTozip_code")
  sub_order_sub_order_zipCodeIdTozip_code                                                 sub_order[]                 @relation("sub_order_zipCodeIdTozip_code")
  sub_quotation                                                                           sub_quotation[]
  tax_invoice_and_delivery_tax_invoice_and_delivery_taxInvoiceCodeZipCodeIdTozip_code     tax_invoice_and_delivery[]  @relation("tax_invoice_and_delivery_taxInvoiceCodeZipCodeIdTozip_code")
  tax_invoice_and_delivery_tax_invoice_and_delivery_taxInvoiceDeliveryZipCodeIdTozip_code tax_invoice_and_delivery[]  @relation("tax_invoice_and_delivery_taxInvoiceDeliveryZipCodeIdTozip_code")
  warehouse                                                                               warehouse[]
  district                                                                                district                    @relation(fields: [districtId], references: [id], onUpdate: Restrict, map: "fK_zip_code_district_districtId")
  province                                                                                province                    @relation(fields: [provinceId], references: [id], onUpdate: Restrict, map: "fK_zip_code_province_provinceId")
  sub_district                                                                            sub_district                @relation(fields: [subDistrictId], references: [id], onUpdate: Restrict, map: "fK_zip_code_sub_district_subDistrictId")

  @@index([createdAt], map: "iX_zip_code_createdAt")
  @@index([districtId], map: "iX_zip_code_districtId")
  @@index([provinceId], map: "iX_zip_code_provinceId")
  @@index([subDistrictId], map: "iX_zip_code_subDistrictId")
}

enum agent_payment_channel_config_paymentChannel {
  PaymentGateway
  Transfer
}

enum branch_payment_channel_config_paymentChannel {
  PaymentGateway
  Transfer
}

enum d365combo_set_status {
  Active
  Inactive
  Deleted
}

enum feature_flag_topic {
  CIS
  Matching
  PromotionCenter
  DiscountPromotionType
  PaymentGateWay
  RedisCache
}

enum job_monitor_log_apiSystem {
  CIS
  Matching
  PromotionCenter
  DiscountPromotionType
  PaymentGateWay
  RedisCache
}

enum search_category_boost_keyword_condition_operator {
  And
  Or
}

enum sequent_menu_type {
  PERSONAL
  ORGANIZATION
}

enum tax_invoice_and_delivery_status {
  Active
  Inactive
  Deleted
}

enum account_credential_log_type {
  LoginSuccess
  LoginFailed
  Logout
  Created
  InfoUpdated
  ForgotPassword
  PasswordChanged
}

enum admin_audit_log_actionType {
  LoginSuccess
  LoginFailed
  Logout
  Created
  InfoUpdated
  ForgotPassword
  PasswordChanged
}

enum agent_agentType {
  Personal
  Corporate
}

enum agent_bank_account_config_paymentChannel {
  PaymentGateway
  Transfer
}

enum agent_payment_channel_config_status {
  Active
  Inactive
  Deleted
}

enum agent_prompt_pay_account_promptPayAccountType {
  Phone
  TaxId
}

enum agent_prompt_pay_account_config_paymentChannel {
  PaymentGateway
  Transfer
}

enum branch_bank_account_config_paymentChannel {
  PaymentGateway
  Transfer
}

enum branch_prompt_pay_account_config_paymentChannel {
  PaymentGateway
  Transfer
}

enum credit_document_documentType {
  Master
  AdditionalDocuments
}

enum customer_category_type {
  PERSONAL
  ORGANIZATION
}

enum customer_data_document_type_customerUseType {
  PERSONAL
  ORGANIZATION
  All
}

enum customer_occupation_type {
  PERSONAL
  ORGANIZATION
}

enum log_activity_boq_type {
  PERSONAL
  ORGANIZATION
}

enum log_activity_cart_type {
  PERSONAL
  ORGANIZATION
}

enum log_activity_credit_type {
  PERSONAL
  ORGANIZATION
}

enum log_activity_favorite_agent_type {
  PERSONAL
  ORGANIZATION
}

enum log_activity_login_type {
  PERSONAL
  ORGANIZATION
}

enum log_activity_order_type {
  PERSONAL
  ORGANIZATION
}

enum log_activity_payment_type {
  PERSONAL
  ORGANIZATION
}

enum log_activity_product_view_type {
  PERSONAL
  ORGANIZATION
}

enum log_activity_search_type {
  PERSONAL
  ORGANIZATION
}

enum log_import_category_status {
  UPLOAD_EXCEL_SUCCESS
  CREATE_TEMP_CATEGORY
  MIGRATE_CATEGORY
  CREATE_CATEGORY_TAG
  PROCESS_SUCCESS
}

enum master_sku_country_status {
  Active
  Inactive
  Deleted
}

enum master_sku_unit_status {
  Active
  Inactive
  Deleted
}

enum order_orderStatus {
  New
  WaitForManageOrder
  WaitForPayment
  Verifying
  NotPass
  PrepareForDelivery
  OnDelivery
  Delivered
  Confirmed
  Completed
  Canceled
  CancelDelivery
}

enum order_attachment_display_status {
  Active
  Inactive
  Deleted
}

enum promotion_discount_action_type {
  Amount
  Item
}

enum promotion_discount_premium_config_purchaseConditionType {
  Amount
  Quantity
}

enum promotion_premium_action_condition {
  Amount
  Item
}

enum rating_review_report_reason {
  VULGAR_WORDS
  OBSCENE
  SPAM
  PERSONAL_INFO
  ADS
  MISLEAD
  OTHER
}

enum search_category_boost_keyword_condition_condition {
  Equal
  NotEqual
  Contain
  NotContain
}

enum search_category_boost_static_boostType {
  Product
  Promotion
}

enum search_field_boost_boostType {
  Product
  Promotion
}

enum sub_order_subOrderStatus {
  PrepareForDelivery
  OnDelivery
  Delivered
  Confirmed
  Completed
  Canceled
  CancelDelivery
}

enum sub_order_temp_contactType {
  PERSONAL
  ORGANIZATION
}

enum account_accountStatus {
  Active
  Locked
}

enum account_credential_systemName {
  AllkonsMCustomer
  AllkonsMAgent
  AllkonsMCustomerAndAgent
  Middleware
  AllkonsOne
  AllkonsCM
  AllkonsId
}

enum account_prevent_noti_notiType {
  IsAgentOwnerChangeWait
  IsApproveCorporateOwnerPhoneNoChangeWait
}

enum agent_kyc_document_kycDocumentType {
  Identification
  IdentificationBackside
  PersonalIdentification
  CopyOfOwnerIdentification
  CopyOfOrganizeIdentification
  CopyOfVatDocument
  CopyOfFinancialStatement
  CopyOfBookBank
  OrganizeLocationImage
  Copyright
  PowerOfAttorney
  CopyOfAuthorizeIdentification
  Other
  CopyOfHouseRegisteration
  CopyOfIdentification
}

enum agent_profile_contact_img_type {
  Image
  QRCode
  Video
}

enum boq_deliveryReceiveType {
  SENDONCE
  GRADUALLY
}

enum branch_payment_channel_config_status {
  Active
  Inactive
  Deleted
}

enum chat_room_status {
  Active
  Inactive
  Deleted
}

enum credit_document_customerCreditType {
  Personal
  Organize
  Both
}

enum credit_document_agent_status {
  Active
  Inactive
  Deleted
}

enum credit_penalty_fee_creditPenaltyType {
  FeePercentRate
  FeeRate
}

enum credit_request_creditRequestType {
  PermanentCreditLimit
  TemporallyCreditLimit
  PermanentIncrease
  PermanentDecrease
  TemporallyIncrease
  TemporallyDecrease
  CancelCredit
}

enum credit_request_document_status {
  Active
  Inactive
  Deleted
}

enum customer_menu_status {
  Active
  Inactive
  Deleted
}

enum customer_organize_project_isUsed {
  Active
  Inactive
  Deleted
}

enum customer_project_invoice_status {
  Active
  Inactive
  Deleted
}

enum customer_project_location_delivery_status {
  Active
  Inactive
  Deleted
}

enum delivery_order_image_orderImgType {
  PrepareForDelivery
  Delivered
}

enum job_result_jobTopic {
  AgentProductExport
  BranchProductExport
  AgentPricingExport
  BranchPricingExport
  CustomerExport
  OrderExport
  PromotionExport
}

enum log_import_category_isProcess {
  PROCESS
  DONE
  FAILED
}

enum log_import_product_processStatus {
  UPLOAD_EXCEL_SUCCESS
  CREATE_TEMP_GROUP
  CREATE_TEMP_VARIANT
  VALIDATE_EXCEL
  READ_LOG_EXCEL
  GENERATE_ITEM_CODE
  MIGRATE_PRODUCT_GROUP
  MIGRATE_PRODUCT_VARIANT
  VARIANT_MOVE_GROUP
  UPDATE_DATA_BY_LOG
  PROCESS_SUCCESS
  CREATE_DIMEMSION_GROUP
  CREATE_DIMEMSION_VARIANT
  PREPROCESS
  PRODUCT_VARIANT_MAPPING_CATEGORY
}

enum log_payment_channel_paymentType {
  BankAccount
  BillPayment
  Credit
}

enum log_upload_image_status {
  Active
  Inactive
}

enum matching_import_file_matchingFileState {
  ProcessProduct
  ExecuteItem
  OnWorking
  OnWorkingByAdmin
  Success
  Cancel
}

enum occupation_status {
  Active
  Inactive
  Deleted
}

enum order_payment_paymentType {
  BankAccount
  PromptPay
  BillPayment
  Credit
  CreditCard
  InternetBanking
  CashOnDelivery
  Cash
  None
  PromtPayQr
  CardPayment
  PayAtCounter
  PayDirectToAllkons
}

enum order_status_tracking_orderStatus {
  New
  WaitForManageOrder
  WaitForPayment
  Verifying
  NotPass
  PrepareForDelivery
  OnDelivery
  Delivered
  Confirmed
  Completed
  Canceled
  CancelDelivery
}

enum organize_role_roleType {
  SUPER_ADMIN
  MEMBER
}

enum organize_team_status {
  Active
  Inactive
  Deleted
}

enum organize_team_project_status {
  Active
  Inactive
  Deleted
}

enum permission_permissionType {
  Product
  Order
  Promotion
  Customer
  SettingForGroup
  Branch
  HistoryOrder
  Agent
  Dashboard
  Setting
  CustomerRequest
  Credit
  PaymentReport
}

enum product_attribute_master_attributeType {
  Integer
  Decimal
  String
  Boolean
}

enum product_variant_document_documentType {
  Howto
  Suggestion
  Caution
  Catalog
  Bim
}

enum promotion_discount_action_unit {
  Percentage
  Fixed
}

enum promotion_discount_premium_config_discountPremiumActionType {
  Discount
  Premium
  DiscountOrPremium
  DiscountAndPremium
}

enum promotion_premium_action_selectType {
  All
  PickOne
  Mixabled
}

enum promotion_purchase_condition_type {
  Amount
  Quantity
}

enum rating_review_image_fileType {
  Image
  ImageThumbnail
  Video
}

enum rating_review_like_customerType {
  PERSONAL
  ORGANIZATION
}

enum search_category_boost_item_status {
  Active
  Inactive
  Deleted
}

enum search_category_boost_keyword_status {
  Active
  Inactive
  Deleted
}

enum search_category_boost_static_status {
  Active
  Inactive
  Deleted
}

enum search_field_boost_status {
  Active
  Inactive
  Deleted
}

enum search_field_boost_item_status {
  Active
  Inactive
  Deleted
}

enum suggestion_product_document_jobStatus {
  Processing
  Done
  Error
}

enum synonym_value_status {
  Active
  Inactive
  Deleted
}

enum workflow_step_agent_user_status {
  Active
  Inactive
  Deleted
}

enum agent_config_setting_status {
  Active
  Inactive
  Deleted
}

enum agent_delivery_pricing_deliveryPricingType {
  PricingKm
  PricingOneTime
}

enum agent_group_region_status {
  Active
  Inactive
  Deleted
}

enum agent_prompt_pay_account_config_status {
  Active
  Inactive
  Deleted
}

enum boq_deliveryType {
  AgentService
  TransportService
  PickupBranch
  Pickup
}

enum branch_bank_account_config_status {
  Active
  Inactive
  Deleted
}

enum branch_delivery_pricing_deliveryPricingType {
  PricingKm
  PricingOneTime
}

enum branch_prompt_pay_account_config_status {
  Active
  Inactive
  Deleted
}

enum category_status {
  Active
  Inactive
  Deleted
}

enum credit_agent_customerCreditType {
  Personal
  Organize
  Both
}

enum credit_agent_policy_status {
  Active
  Inactive
  Deleted
}

enum credit_document_creditDocumentType {
  Permanent
  Temporally
  CreditLimitIncrease
  CancelCreditLimit
}

enum customer_data_customerType {
  PERSONAL
  ORGANIZATION
}

enum customer_master_partyType {
  PERSONAL
  ORGANIZATION
}

enum customer_organize_project_status {
  Active
  Inactive
  Deleted
}

enum delivery_product_codition_deliveryPricingType {
  PricingKm
  PricingOneTime
}

enum job_document_jobStatusType {
  Processing
  Done
  Error
}

enum log_activity_credit_creditType {
  Permanent
  Temporally
}

enum log_activity_payment_paymentType {
  BankAccount
  BillPayment
  Credit
}

enum log_barcode_product_variant_status {
  Active
  Inactive
}

enum log_import_product_isProcess {
  PROCESS
  DONE
  FAILED
}

enum log_organize_boq_status {
  ACTIVE
  INACTIVE
  DELETED
}

enum log_organize_boq_temp_status {
  ACTIVE
  INACTIVE
  DELETED
}

enum log_organize_cart_status {
  ACTIVE
  INACTIVE
  DELETED
}

enum log_organize_order_status {
  ACTIVE
  INACTIVE
  DELETED
}

enum log_payment_mac5_paymentType {
  BankAccount
  PromptPay
  Credit
  CreditCard
  InternetBanking
  BillPayment
  CashOnDelivery
}

enum log_team_order_quotation_orderStatus {
  waitVerify
  verifying
  verified
  reject
  cancel
  approve
  draft
}

enum log_upload_folder_status {
  Upload
  Process
  Done
  Failed
}

enum notification_customer_data_statusApproved {
  WaitCustomerApproved
  WaitAgentApproved
  ApprovedByAgent
  ApprovedByCustomer
}

enum notification_job_notificationJobType {
  ImportAgentProduct
  ImportBranchProduct
  ImportAgentProductPricing
  ImportBranchProductPricing
  ImportRegularCustomer
  ImportPromotion
  AddBranchProduct
  GenereateSuggestionProduct
  ApproveOrder
  UpdateQtStatus
  UpdateBoqStatus
  OrderDeliveryWarning
}

enum notification_status_order_orderStatus {
  New
  WaitForManageOrder
  WaitForPayment
  Verifying
  NotPass
  PrepareForDelivery
  OnDelivery
  Delivered
  Confirmed
  Completed
  Canceled
  CancelDelivery
}

enum order_payment_paymentStatus {
  New
  Verifying
  Cancelled
  Failed
  Success
}

enum organize_role_status {
  Active
  Inactive
  Deleted
}

enum organize_team_member_status {
  Active
  Inactive
  Deleted
}

enum permission_permissionName {
  AgentProduct
  BranchProduct
  ManageProduct
  ManageOrders
  CheckPayment
  PrepareProducts
  InTransit
  SuccessfullyDelivered
  CancelOrder
  MyPromotion
  ManageCustomerGroup
  ManageCustomer
  AgentCustomerGroupPrice
  BranchCustomerGroupPrice
  BranchAgent
  ProductStatus
  HistoryOrder
  AgentDetail
  Dashboard
  ProductRanking
  SettingProfile
  SettingBankAccount
  SettingPayment
  SettingAgentDelivery
  SettingWarehouse
  SettingRegion
  ManageAgentUser
  BillOfQuantities
  Quotation
  ApproveQuotation
  CreditSetting
  CreditRequest
  CreditVerifyRequest
  CreditPayment
  HistoryProductOrder
  CreditOverview
  CreditAgent
  CreditUsed
  CreditCustomer
  CreditVerifyPayment
  CreditMangePenalty
  PaymentReportOrder
  PaymentReportAgent
}

enum product_brand_supplier_status {
  Active
  Inactive
}

enum product_search_history_status {
  Active
  Inactive
  Deleted
}

enum product_variant_code_status {
  Active
  Inactive
}

enum promotion_premium_action_conditionType {
  Amount
  Item
}

enum promotion_promotable_promotableType {
  Promotion
  ProductVariant
}

enum quotation_client_detail_action {
  CreateQT
  UpdateQT
  SendQTToCustomer
}

enum rating_review_image_status {
  Active
  Inactive
  Deleted
}

enum sale_order_saleOrderStatus {
  New
  Verifying
  PrepareForDelivery
  OnDelivery
  Deliverd
  Confirmed
  Canceled
}

enum search_category_boost_keyword_boostType {
  Product
  Promotion
}

enum social_shared_status {
  Active
  Inactive
  Deleted
}

enum team_order_quotation_orderStatus {
  waitVerify
  verifying
  verified
  reject
  cancel
  approve
  draft
}

enum warehouse_status {
  Active
  Inactive
  Deleted
}

enum workflow_status {
  Active
  Inactive
  Deleted
}

enum workflow_step_status {
  Active
  Inactive
  Deleted
}

enum agent_bank_account_config_status {
  Active
  Inactive
  Deleted
}

enum boq_branch_boqBranchStatus {
  New
  AgentReceived
  ReceivedQT
  CustomerCanceled
  AgentCanceled
}

enum category_common_display_display {
  Active
  Inactive
}

enum compare_product_status {
  Active
  Inactive
  Deleted
}

enum credit_customer_document_approveStatus {
  WaitingForApprove
  Approved
  Disapproved
}

enum credit_delivery_order_deliveryOrderStatus {
  PrepareForDelivery
  OnDelivery
  Delivered
  Confirmed
  Completed
  Canceled
  CancelDelivery
}

enum credit_document_file_status {
  Active
  Inactive
  Deleted
}

enum credit_payment_paymentType {
  BankAccount
  PromptPay
  BillPayment
  Credit
  CreditCard
  InternetBanking
  CashOnDelivery
  Cash
  None
  PromtPayQr
  CardPayment
  PayAtCounter
  PayDirectToAllkons
}

enum credit_request_creditRequestStatus {
  WaitForApprove
  Approved
  Disapproved
  WaitforCorrection
}

enum customer_group_status {
  Active
  Inactive
  Deleted
}

enum document_status {
  Active
  Inactive
  Deleted
}

enum log_activity_menu_type {
  PERSONAL
  ORGANIZATION
}

enum log_excel_category_status {
  UPLOAD_EXCEL_SUCCESS
  CREATE_TEMP_CATEGORY
  MIGRATE_CATEGORY
  CREATE_CATEGORY_TAG
  PROCESS_SUCCESS
}

enum log_excel_product_status {
  UPLOAD_EXCEL_SUCCESS
  CREATE_TEMP_GROUP
  CREATE_TEMP_VARIANT
  VALIDATE_EXCEL
  READ_LOG_EXCEL
  GENERATE_ITEM_CODE
  MIGRATE_PRODUCT_GROUP
  MIGRATE_PRODUCT_VARIANT
  CREATE_DIMEMSION_GROUP
  CREATE_DIMEMSION_VARIANT
  VARIANT_MOVE_GROUP
  UPDATE_DATA_BY_LOG
  PROCESS_SUCCESS
  PREPROCESS
}

enum menu_status {
  Active
  Inactive
  Deleted
}

enum notification_job_status {
  Active
  Inactive
  Deleted
}

enum notification_message_system {
  AllkonsMCustomer
  AllkonsMAgent
  AllkonsMCustomerAndAgent
  Middleware
  AllkonsOne
  AllkonsCM
  AllkonsId
}

enum product_attribute_master_status {
  Active
  Inactive
  Deleted
}

enum rating_review_customerType {
  PERSONAL
  ORGANIZATION
}

enum rating_review_report_customerType {
  PERSONAL
  ORGANIZATION
}

enum role_status {
  Active
  Inactive
  Deleted
}

enum sequent_menu_status {
  Active
  Inactive
  Deleted
}

enum synonym_master_status {
  Active
  Inactive
  Deleted
}

enum boq_status {
  Active
  Inactive
  Deleted
}

enum chat_history_chatType {
  Text
  Image
  Voice
  File
  Video
  Sticker
  Location
}

enum client_secret_status {
  Active
  Inactive
  Deleted
}

enum credit_document_status {
  Active
  Inactive
  Deleted
}

enum customer_request_notification_status {
  Active
  Inactive
  Deleted
}

enum log_activity_boq_action {
  Create
  Edit
  Delete
}

enum log_activity_favorite_agent_action {
  Add
  Delete
}

enum log_team_order_quotation_qtStatus {
  CustomerReceived
  CustomerReply
  CustomerCanceled
  Verified
  Approved
}

enum matching_import_file_status {
  Active
  Inactive
  Deleted
}

enum notification_credit_status {
  Active
  Inactive
  Deleted
}

enum notification_customer_favorite_status {
  Active
  Inactive
  Deleted
}

enum notification_customer_quotation_status {
  Active
  Inactive
  Deleted
}

enum notification_status_order_status {
  Active
  Inactive
  Deleted
}

enum order_temp_status {
  waitVerify
  verifying
  verified
  reject
  cancel
  approve
  draft
}

enum product_status {
  Active
  Inactive
  Deleted
}

enum product_variant_supplier_status {
  Active
  Inactive
}

enum quotation_deliveryType {
  AgentService
  TransportService
  PickupBranch
  Pickup
}

enum quotation_bargain_detail_status {
  Active
  Inactive
  Deleted
}

enum role_defaultRole {
  Admin
  Shopkeeper
  BranchManager
  Sales
  Accounting
  Transport
}

enum sub_boq_item_type {
  FreeText
  Product
}

enum sub_order_temp_selfPickupTimePeriod {
  NotSpecified
  Morning
  Afternoon
}

enum team_order_quotation_qtStatus {
  CustomerReceived
  CustomerReply
  CustomerCanceled
  Verified
  Approved
}

enum agent_prompt_pay_account_status {
  Active
  Inactive
  Deleted
}

enum brand_status {
  Active
  Inactive
  Deleted
}

enum chat_history_statusChatCustomer {
  Active
  Inactive
  Deleted
}

enum customer_tax_invoice_address_taxInvoiceType {
  NotSpecified
  IDCard
  Passport
}

enum notification_customer_boq_status {
  Active
  Inactive
  Deleted
}

enum notification_payment_setting_status {
  Active
  Inactive
  Deleted
}

enum organize_team_level_status {
  Active
  Inactive
  Deleted
}

enum promotion_promotionStatus {
  Active
  Inactive
}

enum quotation_boqPriceOrDocument {
  FromBoq
  SpecialPrice
  Document
}

enum quotation_document_status {
  Active
  Inactive
  Deleted
}

enum regular_customer_status {
  Active
  Inactive
  Deleted
}

enum role_permission_status {
  Active
  Inactive
  Deleted
}

enum temp_product_group_migrate_status {
  ACTIVE
  INACTIVE
  PENDING
  SUCCESS
}

enum admin_user_status {
  Active
  Inactive
  Deleted
}

enum agent_kyc_document_agentType {
  Personal
  Corporate
}

enum credit_customer_document_status {
  Active
  Inactive
  Deleted
}

enum credit_delivery_order_creditDeliveryOrderStatus {
  WaitForDelivery
  WaitForPayment
  WaitForApproved
  Approved
  DisApproved
  Overdue
}

enum credit_payment_paymentStatus {
  New
  Verifying
  Cancelled
  Failed
  Success
}

enum customer_tax_invoice_address_taxInvoiceDefault {
  Active
  Inactive
  Deleted
}

enum delivery_order_deliveryType {
  AgentService
  TransportService
  PickupBranch
  Pickup
}

enum log_validate_excel_type {
  Header
  Data
}

enum order_deliveryType {
  AgentService
  TransportService
  PickupBranch
  Pickup
}

enum promotion_promotionType {
  ComboSet
  Premium
  VolumePrice
  Discount
  PremiumCombo
  DiscountPremium
}

enum sub_order_selfPickupTimePeriod {
  NotSpecified
  Morning
  Afternoon
}

enum team_order_quotation_transfer_status {
  Active
  InActive
  Deleted
}

enum agent_setting_status {
  Active
  Inactive
  Deleted
}

enum boq_boqStatus {
  New
  AgentReceived
  ReceivedQT
  CustomerCanceled
  AgentCanceled
}

enum credit_customer_creditStatus {
  Approve
  Suspended
  CancelRequest
  CancelCredit
}

enum customer_tax_invoice_address_contactType {
  PERSONAL
  ORGANIZATION
}

enum log_team_order_quotation_status {
  Active
  Inactive
  Deleted
}

enum order_deliveryReceiveType {
  SENDONCE
  GRADUALLY
}

enum product_variant_attribute_status {
  Active
  Inactive
  Deleted
}

enum product_variant_category_status {
  Active
  Inactive
  Deleted
}

enum promotion_promotionCustomerType {
  Branch
  Region
  Customer
}

enum promotion_premium_action_type {
  LowestPrice
  Item
  SelectedItems
}

enum quotation_delivery_item_status {
  Active
  Inactive
  Deleted
}

enum team_order_quotation_status {
  Active
  Inactive
  Deleted
}

enum temp_product_variant_detail_status {
  Active
  Inactive
}

enum workflow_step_branchType {
  All
  Inresponsible
}

enum boq_branch_status {
  Active
  Inactive
  Deleted
}

enum credit_notification_creditNotificationStatus {
  None
  CreditLimitSuspended
  NoticeLetter
  CreditLimitApproved
  CreditLimitDisapproved
  CreditIncreaseApproved
  CreditIncreaseDisapprove
  ChangePaymentTerm
  CreditIncrease
  CreditDecrease
  CreditLimitWaitForCorrection
  CreditIncreaseWaitForCorrection
  CancelCreditPenaltyFee
  CreditRemainLimit
  CreditPenaltyStartDate
  CreditPenaltyEndDate
  AgentApproveCreditPayment
  AgentApproveCreditRequest
  AgentRejectCreditRequest
  AgentPendingCreditRequest
}

enum credit_order_creditType {
  Permanent
  Temporally
}

enum credit_penalty_fee_creditPenaltyStatus {
  WaitForPayment
  WaitForVerify
  Completed
  Cancel
  Failed
}

enum delivery_order_deliveryOrderStatus {
  PrepareForDelivery
  OnDelivery
  Delivered
  Confirmed
  Completed
  Canceled
  CancelDelivery
}

enum log_activity_cart_action {
  Create
  Update
  Delete
}

enum log_activity_product_view_from {
  VIEW
  SEARCH
}

enum log_excel_product_statusFile {
  Active
  Inactive
}

enum log_upload_folder_activeStatus {
  Active
  Inactive
}

enum matching_import_item_itemProductStatus {
  Draft
  Setting
  Approving
  Selling
  Hidden
  NotApproved
  OutOfStock
}

enum quotation_item_detail_status {
  Active
  Inactive
  Deleted
}

enum account_credential_log_logLevel {
  Error
  Warning
  Information
}

enum agent_bank_account_status {
  Active
  Inactive
  Deleted
}

enum credit_request_status {
  Active
  Inactive
  Deleted
}

enum customer_organize_status {
  Active
  Inactive
  Deleted
}

enum delivery_order_item_d365Status {
  PrepareForDelivery
  OnDelivery
  Delivered
  Confirmed
  Completed
  Canceled
  CancelDelivery
}

enum matching_import_item_itemMatchingType {
  InProcess
  ExactMatch
  SuggestMatch
  MisMatch
}

enum matching_result_item_itemImportState {
  Waiting
  InProcess
  Imported
}

enum notification_customer_favorite_targetSystem {
  AllkonsMCustomer
  AllkonsMAgent
  AllkonsMCustomerAndAgent
  Middleware
  AllkonsOne
  AllkonsCM
  AllkonsId
}

enum notification_customer_quotation_targetSystem {
  AllkonsMCustomer
  AllkonsMAgent
  AllkonsMCustomerAndAgent
  Middleware
  AllkonsOne
  AllkonsCM
  AllkonsId
}

enum notification_status_order_notificationType {
  NewOrder
  ShippingCost
  Paid
  Canceled
  PrepareForDelivery
  OnDelivery
  Success
  Confirmed
}

enum quotation_qtStatus {
  Draft
  PendingApprove
  Approved
  Sended
  CustomerReceived
  CustomerReply
  CustomerOrdered
  CustomerCanceled
  AgentCanceled
  Expire
}

enum quotation_request_status {
  Active
  Inactive
  Deleted
}

enum tax_invoice_and_delivery_taxInvoiceType {
  NotSpecified
  IDCard
  Passport
}

enum branch_startPlaceOfDeliveryType {
  Undefined
  Branch
  Warehouse
}

enum customer_location_delivery_address_deliveryDefault {
  Active
  Inactive
  Deleted
}

enum log_cart_item_type {
  Added
  Ordered
  Deleted
}

enum matching_result_item_status {
  Active
  Inactive
  Deleted
}

enum notification_credit_targetSystem {
  AllkonsMCustomer
  AllkonsMAgent
  AllkonsMCustomerAndAgent
  Middleware
  AllkonsOne
  AllkonsCM
  AllkonsId
}

enum notification_customer_boq_targetSystem {
  AllkonsMCustomer
  AllkonsMAgent
  AllkonsMCustomerAndAgent
  Middleware
  AllkonsOne
  AllkonsCM
  AllkonsId
}

enum notification_payment_setting_targetSystem {
  AllkonsMCustomer
  AllkonsMAgent
  AllkonsMCustomerAndAgent
  Middleware
  AllkonsOne
  AllkonsCM
  AllkonsId
}

enum product_productStatus {
  Draft
  WaitingForApproval
  WaitingForPric
  Active
  Hidden
  Inactive
  OutOfStock
  Pending
}

enum quotation_status {
  Active
  Inactive
  Deleted
}

enum quotation_item_status {
  Active
  Inactive
  Deleted
}

enum chat_history_statusChatAgent {
  Active
  Inactive
  Deleted
}

enum customer_location_delivery_address_status {
  Active
  Inactive
  Deleted
}

enum matching_import_item_status {
  Active
  Inactive
  Deleted
}

enum order_temp_deliveryType {
  AgentService
  TransportService
  PickupBranch
  Pickup
}

enum promotion_status {
  Active
  Inactive
  Deleted
}

enum agent_product_agentProductStatus {
  Draft
  Setting
  Approving
  Selling
  Hidden
  NotApproved
  OutOfStock
}

enum branch_statusBillPayment {
  Active
  Inactive
  Deleted
}

enum branch_product_branchProductStatus {
  Selling
  Hidden
  OutOfStock
  NotApproved
}

enum credit_notification_status {
  Active
  Inactive
  Deleted
}

enum customer_delivery_address_usage {
  Active
  Inactive
  Deleted
}

enum delivery_order_timePeriod {
  NotSpecified
  Morning
  Afternoon
}

enum order_temp_deliveryReceiveType {
  SENDONCE
  GRADUALLY
}

enum project_status {
  Active
  Inactive
  Deleted
}

enum sub_quotation_status {
  Active
  Inactive
  Deleted
}

enum agent_product_importProductFrom {
  System
  CreateNewProduct
}

enum branch_statusPayment {
  Active
  Inactive
  Deleted
}

enum branch_product_status {
  Active
  Inactive
  Deleted
}

enum credit_penalty_fee_status {
  Active
  Inactive
  Deleted
}

enum customer_delivery_address_status {
  Active
  Inactive
  Deleted
}

enum customer_tax_invoice_address_status {
  Active
  Inactive
  Deleted
}

enum project_usage {
  Active
  Inactive
  Deleted
}

enum agent_user_agentUserStatus {
  Active
  Inactive
  Deleted
}

enum notification_status_order_targetSystem {
  AllkonsMCustomer
  AllkonsMAgent
  AllkonsMCustomerAndAgent
  Middleware
  AllkonsOne
  AllkonsCM
  AllkonsId
}

enum agent_startPlaceType {
  Undefined
  Branch
  Warehouse
}

enum branch_status {
  Active
  Inactive
  Deleted
}

enum credit_customer_addressCreditType {
  Reference
  Manual
}

enum sub_order_temp_taxInvoiceType {
  NotSpecified
  IDCard
  Passport
}

enum quotation_delivery_status {
  Active
  Inactive
  Deleted
}

enum agent_startPlaceOfDeliveryType {
  Undefined
  Branch
  Warehouse
}

enum agent_product_status {
  Active
  Inactive
  Deleted
}

enum rating_review_status {
  Active
  Inactive
  Deleted
}

enum customer_customerType {
  PERSONAL
  ORGANIZATION
}

enum customer_data_status {
  Active
  Inactive
  Deleted
}

enum agent_statusBillPayment {
  Active
  Inactive
  Deleted
}

enum customer_data_statusApproved {
  WaitCustomerApproved
  WaitAgentApproved
  ApprovedByAgent
  ApprovedByCustomer
}

enum agent_statusPayment {
  Active
  Inactive
  Deleted
}

enum agent_status {
  Active
  Inactive
  Deleted
}

enum quotation_deliveryReceiveType {
  SENDONCE
  GRADUALLY
}

enum order_display {
  Active
  Inactive
}

enum sub_order_temp_taxInvoiceDeliveryType {
  DeliveryWithProduct
  OfficeDelivery
}

enum temp_product_migrate_status {
  ACTIVE
  INACTIVE
  PENDING
  SUCCESS
}

enum sub_order_contactType {
  PERSONAL
  ORGANIZATION
}

enum sub_boq_taxInvoiceType {
  NotSpecified
  IDCard
  Passport
}

enum product_variant_productStatus {
  Draft
  WaitingForApproval
  WaitingForPric
  Active
  Hidden
  Inactive
  OutOfStock
  Pending
}

enum product_variant_status {
  Active
  Inactive
  Deleted
}

enum sub_order_taxInvoiceType {
  NotSpecified
  IDCard
  Passport
}

enum sub_boq_subBoqStatus {
  Active
  Inactive
  Deleted
}

enum agent_agentSaleType {
  Public
  Private
}

enum sub_boq_useTaxInvoiceLocation {
  Active
  Inactive
  Deleted
}

enum sub_order_taxInvoiceDeliveryType {
  DeliveryWithProduct
  OfficeDelivery
}
